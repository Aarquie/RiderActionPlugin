<options>
  <configurable id="preferences.keymap" configurable_name="Keymap">
    <option name="compile" path="ActionManager" hit="Compile File" />
    <option name="file" path="ActionManager" hit="Compile File" />
    <option name="class" path="ActionManager" hit="New Unreal Class" />
    <option name="new" path="ActionManager" hit="New Unreal Class" />
    <option name="unreal" path="ActionManager" hit="New Unreal Class" />
    <option name="module" path="ActionManager" hit="New Unreal Module" />
    <option name="new" path="ActionManager" hit="New Unreal Module" />
    <option name="unreal" path="ActionManager" hit="New Unreal Module" />
    <option name="new" path="ActionManager" hit="New Unreal Plugin" />
    <option name="plugin" path="ActionManager" hit="New Unreal Plugin" />
    <option name="unreal" path="ActionManager" hit="New Unreal Plugin" />
    <option name="select" path="ActionManager" hit="Select Solution" />
    <option name="solution" path="ActionManager" hit="Select Solution" />
    <option name="by" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="current" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="generated" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="script" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="select" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="solution" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="the" path="ActionManager" hit="Select the solution generated by the current script" />
    <option name="class" path="ActionManager" hit="Unreal Class…" />
    <option name="unreal" path="ActionManager" hit="Unreal Class…" />
    <option name="module" path="ActionManager" hit="Unreal Module…" />
    <option name="unreal" path="ActionManager" hit="Unreal Module…" />
    <option name="plugin" path="ActionManager" hit="Unreal Plugin…" />
    <option name="unreal" path="ActionManager" hit="Unreal Plugin…" />
  </configurable>
  <configurable id="preferences.CppConfiguration" configurable_name="C++" />
  <configurable id="CppGeneralOptionsId" configurable_name="General">
    <option name="" hit=" Enable C++/CLI support" />
    <option name="c++" hit=" Enable C++/CLI support" />
    <option name="cli" hit=" Enable C++/CLI support" />
    <option name="enable" hit=" Enable C++/CLI support" />
    <option name="support" hit=" Enable C++/CLI support" />
    <option name="" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="actions" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="and" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="context" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="enable" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="external" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="files" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="fixes" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="in" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="inspections" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="quick" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="solution" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="the" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="to" hit=" Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="" hit=" Show popups for import actions" />
    <option name="actions" hit=" Show popups for import actions" />
    <option name="for" hit=" Show popups for import actions" />
    <option name="import" hit=" Show popups for import actions" />
    <option name="popups" hit=" Show popups for import actions" />
    <option name="show" hit=" Show popups for import actions" />
    <option name="" hit=" Treat resolve errors as warnings in template code" />
    <option name="as" hit=" Treat resolve errors as warnings in template code" />
    <option name="code" hit=" Treat resolve errors as warnings in template code" />
    <option name="errors" hit=" Treat resolve errors as warnings in template code" />
    <option name="in" hit=" Treat resolve errors as warnings in template code" />
    <option name="resolve" hit=" Treat resolve errors as warnings in template code" />
    <option name="template" hit=" Treat resolve errors as warnings in template code" />
    <option name="treat" hit=" Treat resolve errors as warnings in template code" />
    <option name="warnings" hit=" Treat resolve errors as warnings in template code" />
    <option name="" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="c++" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="command" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="compilation" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="from" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="line-based" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="msbuild" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="properties" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="reading" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="them" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="use" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="when" hit=" Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="c++" hit="Enable C++/CLI support" />
    <option name="cli" hit="Enable C++/CLI support" />
    <option name="enable" hit="Enable C++/CLI support" />
    <option name="support" hit="Enable C++/CLI support" />
    <option name="actions" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="and" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="context" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="enable" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="external" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="files" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="fixes" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="in" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="inspections" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="quick" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="solution" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="the" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="to" hit="Enable inspections, quick fixes, and context actions in files external to the solution" />
    <option name="general" hit="General" />
    <option name="and" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="c++" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="get" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="getclcommandlines" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="if" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="is" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="its" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="of" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="on" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="option" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="parsed" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="project" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="properties" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="result" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="run" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="target" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="the" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="this" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="to" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="turned" hit="If this option is turned on, 'GetClCommandLines' target is run and its result is parsed to get the properties of the C++ project." />
    <option name="model" hit="Project Model" />
    <option name="project" hit="Project Model" />
    <option name="code" hit="Severity of Inspections Inside Template Code" />
    <option name="inside" hit="Severity of Inspections Inside Template Code" />
    <option name="inspections" hit="Severity of Inspections Inside Template Code" />
    <option name="of" hit="Severity of Inspections Inside Template Code" />
    <option name="severity" hit="Severity of Inspections Inside Template Code" />
    <option name="template" hit="Severity of Inspections Inside Template Code" />
    <option name="actions" hit="Show popups for import actions" />
    <option name="for" hit="Show popups for import actions" />
    <option name="import" hit="Show popups for import actions" />
    <option name="popups" hit="Show popups for import actions" />
    <option name="show" hit="Show popups for import actions" />
    <option name="as" hit="Treat resolve errors as warnings in template code" />
    <option name="code" hit="Treat resolve errors as warnings in template code" />
    <option name="errors" hit="Treat resolve errors as warnings in template code" />
    <option name="in" hit="Treat resolve errors as warnings in template code" />
    <option name="resolve" hit="Treat resolve errors as warnings in template code" />
    <option name="template" hit="Treat resolve errors as warnings in template code" />
    <option name="treat" hit="Treat resolve errors as warnings in template code" />
    <option name="warnings" hit="Treat resolve errors as warnings in template code" />
    <option name="c++" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="command" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="compilation" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="from" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="line-based" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="msbuild" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="properties" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="reading" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="them" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="use" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="when" hit="Use command line-based C++ compilation properties when reading them from MSBuild" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppUnrealEngineOptionsId" configurable_name="Unreal Engine">
    <option name="" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="blueprints" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="enable" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="ide" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="requires" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="restart" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="support" hit=" Enable Blueprints Support (requires IDE restart)" />
    <option name="" hit=" Enable UnrealHeaderTool inspections" />
    <option name="enable" hit=" Enable UnrealHeaderTool inspections" />
    <option name="inspections" hit=" Enable UnrealHeaderTool inspections" />
    <option name="unrealheadertool" hit=" Enable UnrealHeaderTool inspections" />
    <option name="" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="background" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="enable" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="engine" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="files" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="indexing" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="of" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="source" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="unreal" hit=" Enable background indexing of Unreal Engine source files" />
    <option name="" hit=" Enable blueprint class highlightings" />
    <option name="blueprint" hit=" Enable blueprint class highlightings" />
    <option name="class" hit=" Enable blueprint class highlightings" />
    <option name="enable" hit=" Enable blueprint class highlightings" />
    <option name="highlightings" hit=" Enable blueprint class highlightings" />
    <option name="" hit=" Enable blueprint function highlightings" />
    <option name="blueprint" hit=" Enable blueprint function highlightings" />
    <option name="enable" hit=" Enable blueprint function highlightings" />
    <option name="function" hit=" Enable blueprint function highlightings" />
    <option name="highlightings" hit=" Enable blueprint function highlightings" />
    <option name="" hit=" Enable blueprint property highlightings" />
    <option name="blueprint" hit=" Enable blueprint property highlightings" />
    <option name="enable" hit=" Enable blueprint property highlightings" />
    <option name="highlightings" hit=" Enable blueprint property highlightings" />
    <option name="property" hit=" Enable blueprint property highlightings" />
    <option name="" hit=" Ignore precompiled header files" />
    <option name="files" hit=" Ignore precompiled header files" />
    <option name="header" hit=" Ignore precompiled header files" />
    <option name="ignore" hit=" Ignore precompiled header files" />
    <option name="precompiled" hit=" Ignore precompiled header files" />
    <option name="" hit=" Index Unreal Engine source files" />
    <option name="engine" hit=" Index Unreal Engine source files" />
    <option name="files" hit=" Index Unreal Engine source files" />
    <option name="index" hit=" Index Unreal Engine source files" />
    <option name="source" hit=" Index Unreal Engine source files" />
    <option name="unreal" hit=" Index Unreal Engine source files" />
    <option name="" hit=" Index plugins" />
    <option name="index" hit=" Index plugins" />
    <option name="plugins" hit=" Index plugins" />
    <option name="" hit=" Index third-party code" />
    <option name="code" hit=" Index third-party code" />
    <option name="index" hit=" Index third-party code" />
    <option name="third-party" hit=" Index third-party code" />
    <option name="" hit=" Regenerate project properties on configuration change" />
    <option name="change" hit=" Regenerate project properties on configuration change" />
    <option name="configuration" hit=" Regenerate project properties on configuration change" />
    <option name="on" hit=" Regenerate project properties on configuration change" />
    <option name="project" hit=" Regenerate project properties on configuration change" />
    <option name="properties" hit=" Regenerate project properties on configuration change" />
    <option name="regenerate" hit=" Regenerate project properties on configuration change" />
    <option name="" hit=" Regenerate project properties on project files change" />
    <option name="change" hit=" Regenerate project properties on project files change" />
    <option name="files" hit=" Regenerate project properties on project files change" />
    <option name="on" hit=" Regenerate project properties on project files change" />
    <option name="project" hit=" Regenerate project properties on project files change" />
    <option name="properties" hit=" Regenerate project properties on project files change" />
    <option name="regenerate" hit=" Regenerate project properties on project files change" />
    <option name="" hit=" Suggest system headers in import completion inside game projects" />
    <option name="completion" hit=" Suggest system headers in import completion inside game projects" />
    <option name="game" hit=" Suggest system headers in import completion inside game projects" />
    <option name="headers" hit=" Suggest system headers in import completion inside game projects" />
    <option name="import" hit=" Suggest system headers in import completion inside game projects" />
    <option name="in" hit=" Suggest system headers in import completion inside game projects" />
    <option name="inside" hit=" Suggest system headers in import completion inside game projects" />
    <option name="projects" hit=" Suggest system headers in import completion inside game projects" />
    <option name="suggest" hit=" Suggest system headers in import completion inside game projects" />
    <option name="system" hit=" Suggest system headers in import completion inside game projects" />
    <option name="" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="errors" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="hlsl" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="in" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="names" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="of" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="resolve" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="suppress" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="unqualified" hit=" Suppress resolve errors of unqualified names in HLSL" />
    <option name="" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="as" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="engine" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="everywhere" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="go" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="in" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="non-project" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="search" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="symbols" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="to" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="treat" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="unreal" hit=" Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="by" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="directly" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="engine" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="files" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="from" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="generated" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="instead" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="intermediate" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="lets" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="model" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="of" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="project" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="properties" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="read" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="rider" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="studio" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="the" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="unreal" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="unrealbuildtool" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="using" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="visual" hit=" Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="24" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="4" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="engine" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="from" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="model" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="project" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="starting" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="unreal" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="use" hit=" Use Unreal Engine project model (starting from 4.24)" />
    <option name="" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="any" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="automatically" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="background" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="editor" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="enabled" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="errors" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="in" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="is" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="or" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="real" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="right" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="run" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="show" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="the" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="time" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="to" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="unrealheadertool" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="warnings" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="when" hit=" When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="and" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="can" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="choose" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="engine" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="exclude" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="files" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="from" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="get" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="headers" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="improve" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="in" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="indexed" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="indexing" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="memory" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="note" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="performance" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="project" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="reduce" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="source" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="still" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="that" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="the" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="to" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="unreal" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="usage" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="use" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="will" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="you" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="your" hit=" You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="add" hit="Add only if Unreal Engine is from source" />
    <option name="engine" hit="Add only if Unreal Engine is from source" />
    <option name="from" hit="Add only if Unreal Engine is from source" />
    <option name="if" hit="Add only if Unreal Engine is from source" />
    <option name="is" hit="Add only if Unreal Engine is from source" />
    <option name="only" hit="Add only if Unreal Engine is from source" />
    <option name="source" hit="Add only if Unreal Engine is from source" />
    <option name="unreal" hit="Add only if Unreal Engine is from source" />
    <option name="always" hit="Always" />
    <option name="blueprints" hit="Blueprints" />
    <option name="code" hit="Code Completion" />
    <option name="completion" hit="Code Completion" />
    <option name="code" hit="Code Indexing" />
    <option name="indexing" hit="Code Indexing" />
    <option name="discover" hit="Discover programs when opening .uproject" />
    <option name="opening" hit="Discover programs when opening .uproject" />
    <option name="programs" hit="Discover programs when opening .uproject" />
    <option name="uproject" hit="Discover programs when opening .uproject" />
    <option name="when" hit="Discover programs when opening .uproject" />
    <option name="during" hit="During initial indexing" />
    <option name="indexing" hit="During initial indexing" />
    <option name="initial" hit="During initial indexing" />
    <option name="blueprints" hit="Enable Blueprints Support (requires IDE restart)" />
    <option name="enable" hit="Enable Blueprints Support (requires IDE restart)" />
    <option name="ide" hit="Enable Blueprints Support (requires IDE restart)" />
    <option name="requires" hit="Enable Blueprints Support (requires IDE restart)" />
    <option name="restart" hit="Enable Blueprints Support (requires IDE restart)" />
    <option name="support" hit="Enable Blueprints Support (requires IDE restart)" />
    <option name="enable" hit="Enable UnrealHeaderTool inspections" />
    <option name="inspections" hit="Enable UnrealHeaderTool inspections" />
    <option name="unrealheadertool" hit="Enable UnrealHeaderTool inspections" />
    <option name="background" hit="Enable background indexing of Unreal Engine source files" />
    <option name="enable" hit="Enable background indexing of Unreal Engine source files" />
    <option name="engine" hit="Enable background indexing of Unreal Engine source files" />
    <option name="files" hit="Enable background indexing of Unreal Engine source files" />
    <option name="indexing" hit="Enable background indexing of Unreal Engine source files" />
    <option name="of" hit="Enable background indexing of Unreal Engine source files" />
    <option name="source" hit="Enable background indexing of Unreal Engine source files" />
    <option name="unreal" hit="Enable background indexing of Unreal Engine source files" />
    <option name="blueprint" hit="Enable blueprint class highlightings" />
    <option name="class" hit="Enable blueprint class highlightings" />
    <option name="enable" hit="Enable blueprint class highlightings" />
    <option name="highlightings" hit="Enable blueprint class highlightings" />
    <option name="blueprint" hit="Enable blueprint function highlightings" />
    <option name="enable" hit="Enable blueprint function highlightings" />
    <option name="function" hit="Enable blueprint function highlightings" />
    <option name="highlightings" hit="Enable blueprint function highlightings" />
    <option name="blueprint" hit="Enable blueprint property highlightings" />
    <option name="enable" hit="Enable blueprint property highlightings" />
    <option name="highlightings" hit="Enable blueprint property highlightings" />
    <option name="property" hit="Enable blueprint property highlightings" />
    <option name="c++20" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="enable" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="forced" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="header" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="includes" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="indexing" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="like" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="of" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="units" hit="Enable indexing of forced includes like C++20 header units" />
    <option name="hlsl" hit="HLSL" />
    <option name="accordingly" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="assistance" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="be" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="build" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="coding" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="configured" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="features" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="files" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="for" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="if" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="ignore" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="pch" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="project" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="still" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="the" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="they" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="to" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="used" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="will" hit="Ignore PCH files for coding assistance features. They still will be used to build the project if configured accordingly." />
    <option name="files" hit="Ignore precompiled header files" />
    <option name="header" hit="Ignore precompiled header files" />
    <option name="ignore" hit="Ignore precompiled header files" />
    <option name="precompiled" hit="Ignore precompiled header files" />
    <option name="engine" hit="Index Unreal Engine source files" />
    <option name="files" hit="Index Unreal Engine source files" />
    <option name="index" hit="Index Unreal Engine source files" />
    <option name="source" hit="Index Unreal Engine source files" />
    <option name="unreal" hit="Index Unreal Engine source files" />
    <option name="index" hit="Index plugins" />
    <option name="plugins" hit="Index plugins" />
    <option name="code" hit="Index third-party code" />
    <option name="index" hit="Index third-party code" />
    <option name="third-party" hit="Index third-party code" />
    <option name="navigation" hit="Navigation" />
    <option name="never" hit="Never" />
    <option name="model" hit="Project Model" />
    <option name="project" hit="Project Model" />
    <option name="change" hit="Regenerate project properties on configuration change" />
    <option name="configuration" hit="Regenerate project properties on configuration change" />
    <option name="on" hit="Regenerate project properties on configuration change" />
    <option name="project" hit="Regenerate project properties on configuration change" />
    <option name="properties" hit="Regenerate project properties on configuration change" />
    <option name="regenerate" hit="Regenerate project properties on configuration change" />
    <option name="change" hit="Regenerate project properties on project files change" />
    <option name="files" hit="Regenerate project properties on project files change" />
    <option name="on" hit="Regenerate project properties on project files change" />
    <option name="project" hit="Regenerate project properties on project files change" />
    <option name="properties" hit="Regenerate project properties on project files change" />
    <option name="regenerate" hit="Regenerate project properties on project files change" />
    <option name="completion" hit="Suggest system headers in import completion inside game projects" />
    <option name="game" hit="Suggest system headers in import completion inside game projects" />
    <option name="headers" hit="Suggest system headers in import completion inside game projects" />
    <option name="import" hit="Suggest system headers in import completion inside game projects" />
    <option name="in" hit="Suggest system headers in import completion inside game projects" />
    <option name="inside" hit="Suggest system headers in import completion inside game projects" />
    <option name="projects" hit="Suggest system headers in import completion inside game projects" />
    <option name="suggest" hit="Suggest system headers in import completion inside game projects" />
    <option name="system" hit="Suggest system headers in import completion inside game projects" />
    <option name="errors" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="hlsl" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="in" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="names" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="of" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="resolve" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="suppress" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="unqualified" hit="Suppress resolve errors of unqualified names in HLSL" />
    <option name="build" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="cs" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="files" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="project" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="target" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="tracked" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="uplugin" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="uproject" hit="Tracked project files: *.Build.cs, *.Target.cs, *.uproject, *.uplugin" />
    <option name="as" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="engine" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="everywhere" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="go" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="in" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="non-project" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="search" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="symbols" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="to" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="treat" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="unreal" hit="Treat Unreal Engine symbols as non-project in Search Everywhere/Go To" />
    <option name="engine" hit="Unreal Engine" />
    <option name="unreal" hit="Unreal Engine" />
    <option name="by" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="directly" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="engine" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="files" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="from" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="generated" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="instead" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="intermediate" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="lets" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="model" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="of" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="project" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="properties" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="read" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="rider" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="studio" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="the" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="unreal" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="unrealbuildtool" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="using" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="visual" hit="Unreal Engine project model lets Rider read project properties directly from UnrealBuildTool instead of using the intermediate Visual Studio project files generated by Unreal Engine" />
    <option name="support" hit="UnrealHeaderTool Support" />
    <option name="unrealheadertool" hit="UnrealHeaderTool Support" />
    <option name="24" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="4" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="engine" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="from" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="model" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="project" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="starting" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="unreal" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="use" hit="Use Unreal Engine project model (starting from 4.24)" />
    <option name="any" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="automatically" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="background" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="editor" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="enabled" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="errors" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="in" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="is" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="or" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="real" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="right" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="run" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="show" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="the" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="time" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="to" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="unrealheadertool" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="warnings" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="when" hit="When enabled, UnrealHeaderTool is run automatically in the background to show any errors or warnings in real time right in the editor" />
    <option name="and" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="can" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="choose" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="engine" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="exclude" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="files" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="from" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="get" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="headers" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="improve" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="in" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="indexed" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="indexing" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="memory" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="note" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="performance" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="project" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="reduce" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="source" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="still" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="that" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="the" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="to" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="unreal" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="usage" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="use" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="will" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="you" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="your" hit="You can choose to exclude Unreal Engine source files from indexing to reduce memory usage and improve performance. Note that the engine headers that you use in your project will still get indexed." />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppClangTidyOptionsId" configurable_name="Clang-Tidy">
    <option name="" hit=" Clang-tidy executable to use:" />
    <option name="clang-tidy" hit=" Clang-tidy executable to use:" />
    <option name="executable" hit=" Clang-tidy executable to use:" />
    <option name="to" hit=" Clang-tidy executable to use:" />
    <option name="use" hit=" Clang-tidy executable to use:" />
    <option name="" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="-" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="add" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="additionally" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="all" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="any" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="appearance" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="appended" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="are" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="checks" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="clang-tidy" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="code" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="comma-separated" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="corresponding" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="disable" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="disabled" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="enabled" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="file" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="for" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="from" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="globs" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="if" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="in" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="inspections" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="is" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="list" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="matching" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="names" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="of" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="option" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="optional" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="order" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="prefix" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="processed" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="remove" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="rider" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="s" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="set" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="the" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="this" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="to" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="value" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="which" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="will" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="with" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="without" hit=" Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="" hit=" Enable clang-tidy support" />
    <option name="clang-tidy" hit=" Enable clang-tidy support" />
    <option name="enable" hit=" Enable clang-tidy support" />
    <option name="support" hit=" Enable clang-tidy support" />
    <option name="" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="cannot" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="clang-tidy" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="encodings" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="files" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="note" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="or" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="please" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="read" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="that" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="use" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="utf-16" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="utf-32" hit=" Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="after" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="applying" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="changed" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="clang-tidy" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="code" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="fix-its" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="reformat" hit=" Reformat changed code after applying clang-tidy fix-its" />
    <option name="" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="a" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="attempt" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="clang-tidy" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="configuration" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="directories" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="each" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="file" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="find" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="for" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="if" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="in" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="is" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="its" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="named" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="not" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="parent" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="source" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="specific" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="specified" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="the" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="to" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="use" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="will" hit=" Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="additional" hit="Additional clang command line arguments:" />
    <option name="arguments" hit="Additional clang command line arguments:" />
    <option name="clang" hit="Additional clang command line arguments:" />
    <option name="command" hit="Additional clang command line arguments:" />
    <option name="line" hit="Additional clang command line arguments:" />
    <option name="browse" hit="Browse" />
    <option name="0" hit="Bundled (from LLVM 17.0.1)" />
    <option name="1" hit="Bundled (from LLVM 17.0.1)" />
    <option name="17" hit="Bundled (from LLVM 17.0.1)" />
    <option name="bundled" hit="Bundled (from LLVM 17.0.1)" />
    <option name="from" hit="Bundled (from LLVM 17.0.1)" />
    <option name="llvm" hit="Bundled (from LLVM 17.0.1)" />
    <option name="clang-tidy" hit="Clang-Tidy" />
    <option name="clang-tidy" hit="Clang-tidy executable to use:" />
    <option name="executable" hit="Clang-tidy executable to use:" />
    <option name="to" hit="Clang-tidy executable to use:" />
    <option name="use" hit="Clang-tidy executable to use:" />
    <option name="-" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="add" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="additionally" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="all" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="any" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="appearance" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="appended" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="are" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="checks" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="clang-tidy" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="code" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="comma-separated" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="corresponding" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="disable" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="disabled" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="enabled" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="file" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="for" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="from" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="globs" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="if" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="in" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="inspections" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="is" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="list" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="matching" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="names" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="of" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="option" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="optional" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="order" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="prefix" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="processed" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="remove" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="rider" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="s" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="set" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="the" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="this" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="to" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="value" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="which" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="will" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="with" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="without" hit="Comma-separated list of globs with optional '-' prefix. Globs are processed in order of appearance in the list. Globs without '-' prefix add checks with matching names to the set, globs with the '-' prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in .clang-tidy file, if any. Additionally, Rider will disable all checks for which the corresponding code inspections are disabled." />
    <option name="custom" hit="Custom:" />
    <option name="clang-tidy" hit="Enable clang-tidy support" />
    <option name="enable" hit="Enable clang-tidy support" />
    <option name="support" hit="Enable clang-tidy support" />
    <option name="find" hit="Find in %PATH% (not found)" />
    <option name="found" hit="Find in %PATH% (not found)" />
    <option name="in" hit="Find in %PATH% (not found)" />
    <option name="not" hit="Find in %PATH% (not found)" />
    <option name="path" hit="Find in %PATH% (not found)" />
    <option name="checks" hit="List of enabled/disabled clang-tidy checks:" />
    <option name="clang-tidy" hit="List of enabled/disabled clang-tidy checks:" />
    <option name="disabled" hit="List of enabled/disabled clang-tidy checks:" />
    <option name="enabled" hit="List of enabled/disabled clang-tidy checks:" />
    <option name="list" hit="List of enabled/disabled clang-tidy checks:" />
    <option name="of" hit="List of enabled/disabled clang-tidy checks:" />
    <option name="cannot" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="clang-tidy" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="encodings" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="files" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="note" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="or" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="please" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="read" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="that" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="use" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="utf-16" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="utf-32" hit="Please note that clang-tidy cannot read files that use UTF-16 or UTF-32 encodings" />
    <option name="after" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="applying" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="changed" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="clang-tidy" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="code" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="fix-its" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="reformat" hit="Reformat changed code after applying clang-tidy fix-its" />
    <option name="a" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="attempt" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="clang-tidy" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="configuration" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="directories" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="each" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="file" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="find" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="for" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="if" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="in" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="is" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="its" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="named" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="not" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="parent" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="source" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="specific" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="specified" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="the" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="to" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="use" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="will" hit="Use a specific clang-tidy configuration file (if the configuration file is not specified, clang-tidy will attempt to find a file named '.clang-tidy' for each source file in its parent directories):" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppCodeCompletionOptionsId" configurable_name="Code Completion">
    <option name="" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="#include" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="a" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="able" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="after" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="an" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="applicable" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="be" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="class" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="declaration" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="directive" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="elaborated" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="forward" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="insert" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="non-imported" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="or" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="selecting" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="specifier" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="to" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="type" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="where" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="will" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="you" hit=" After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="and" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="are" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="classes" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="completion" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="current" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="files" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="from" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="functions" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="import" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="in" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="included" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="not" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="one" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="suggests" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="that" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="the" hit=" Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="" hit=" Show free functions in member completion" />
    <option name="completion" hit=" Show free functions in member completion" />
    <option name="free" hit=" Show free functions in member completion" />
    <option name="functions" hit=" Show free functions in member completion" />
    <option name="in" hit=" Show free functions in member completion" />
    <option name="member" hit=" Show free functions in member completion" />
    <option name="show" hit=" Show free functions in member completion" />
    <option name="" hit=" Show import items in basic completion" />
    <option name="basic" hit=" Show import items in basic completion" />
    <option name="completion" hit=" Show import items in basic completion" />
    <option name="import" hit=" Show import items in basic completion" />
    <option name="in" hit=" Show import items in basic completion" />
    <option name="items" hit=" Show import items in basic completion" />
    <option name="show" hit=" Show import items in basic completion" />
    <option name="#include" hit="Add #include in .cpp file and show menu in header file" />
    <option name="add" hit="Add #include in .cpp file and show menu in header file" />
    <option name="and" hit="Add #include in .cpp file and show menu in header file" />
    <option name="cpp" hit="Add #include in .cpp file and show menu in header file" />
    <option name="file" hit="Add #include in .cpp file and show menu in header file" />
    <option name="header" hit="Add #include in .cpp file and show menu in header file" />
    <option name="in" hit="Add #include in .cpp file and show menu in header file" />
    <option name="menu" hit="Add #include in .cpp file and show menu in header file" />
    <option name="show" hit="Add #include in .cpp file and show menu in header file" />
    <option name="#include" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="a" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="able" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="after" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="an" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="applicable" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="be" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="class" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="declaration" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="directive" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="elaborated" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="forward" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="insert" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="non-imported" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="or" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="selecting" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="specifier" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="to" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="type" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="where" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="will" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="you" hit="After selecting a non-imported class, you will be able to insert an #include directive, a forward declaration, or an elaborated type specifier where applicable" />
    <option name="#include" hit="Always add #include" />
    <option name="add" hit="Always add #include" />
    <option name="always" hit="Always add #include" />
    <option name="always" hit="Always show menu with options" />
    <option name="menu" hit="Always show menu with options" />
    <option name="options" hit="Always show menu with options" />
    <option name="show" hit="Always show menu with options" />
    <option name="with" hit="Always show menu with options" />
    <option name="behavior" hit="Behavior of class import items:" />
    <option name="class" hit="Behavior of class import items:" />
    <option name="import" hit="Behavior of class import items:" />
    <option name="items" hit="Behavior of class import items:" />
    <option name="of" hit="Behavior of class import items:" />
    <option name="code" hit="Code Completion" />
    <option name="completion" hit="Code Completion" />
    <option name="completion" hit="Import Completion" />
    <option name="import" hit="Import Completion" />
    <option name="and" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="are" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="classes" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="completion" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="current" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="files" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="from" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="functions" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="import" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="in" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="included" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="not" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="one" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="suggests" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="that" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="the" hit="Import completion suggests classes and functions from files that are not included in the current one" />
    <option name="completion" hit="Show free functions in member completion" />
    <option name="free" hit="Show free functions in member completion" />
    <option name="functions" hit="Show free functions in member completion" />
    <option name="in" hit="Show free functions in member completion" />
    <option name="member" hit="Show free functions in member completion" />
    <option name="show" hit="Show free functions in member completion" />
    <option name="basic" hit="Show import items in basic completion" />
    <option name="completion" hit="Show import items in basic completion" />
    <option name="import" hit="Show import items in basic completion" />
    <option name="in" hit="Show import items in basic completion" />
    <option name="items" hit="Show import items in basic completion" />
    <option name="show" hit="Show import items in basic completion" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppCodeGenerationId" configurable_name="Code Generation">
    <option name="" hit=" Add the @brief tag" />
    <option name="add" hit=" Add the @brief tag" />
    <option name="brief" hit=" Add the @brief tag" />
    <option name="tag" hit=" Add the @brief tag" />
    <option name="the" hit=" Add the @brief tag" />
    <option name="" hit=" Body of empty constructors and destructors:" />
    <option name="and" hit=" Body of empty constructors and destructors:" />
    <option name="body" hit=" Body of empty constructors and destructors:" />
    <option name="constructors" hit=" Body of empty constructors and destructors:" />
    <option name="destructors" hit=" Body of empty constructors and destructors:" />
    <option name="empty" hit=" Body of empty constructors and destructors:" />
    <option name="of" hit=" Body of empty constructors and destructors:" />
    <option name="" hit=" Call the overridden function from the body of an overriding function" />
    <option name="an" hit=" Call the overridden function from the body of an overriding function" />
    <option name="body" hit=" Call the overridden function from the body of an overriding function" />
    <option name="call" hit=" Call the overridden function from the body of an overriding function" />
    <option name="from" hit=" Call the overridden function from the body of an overriding function" />
    <option name="function" hit=" Call the overridden function from the body of an overriding function" />
    <option name="of" hit=" Call the overridden function from the body of an overriding function" />
    <option name="overridden" hit=" Call the overridden function from the body of an overriding function" />
    <option name="overriding" hit=" Call the overridden function from the body of an overriding function" />
    <option name="the" hit=" Call the overridden function from the body of an overriding function" />
    <option name="" hit=" Declare converting constructors 'explicit'" />
    <option name="constructors" hit=" Declare converting constructors 'explicit'" />
    <option name="converting" hit=" Declare converting constructors 'explicit'" />
    <option name="declare" hit=" Declare converting constructors 'explicit'" />
    <option name="explicit" hit=" Declare converting constructors 'explicit'" />
    <option name="" hit=" Default function body:" />
    <option name="body" hit=" Default function body:" />
    <option name="default" hit=" Default function body:" />
    <option name="function" hit=" Default function body:" />
    <option name="" hit=" Generate default operator implementation" />
    <option name="default" hit=" Generate default operator implementation" />
    <option name="generate" hit=" Generate default operator implementation" />
    <option name="implementation" hit=" Generate default operator implementation" />
    <option name="operator" hit=" Generate default operator implementation" />
    <option name="" hit="@param" />
    <option name="param" hit="@param" />
    <option name="add" hit="Add the @brief tag" />
    <option name="brief" hit="Add the @brief tag" />
    <option name="tag" hit="Add the @brief tag" />
    <option name="the" hit="Add the @brief tag" />
    <option name="bodies" hit="Bodies of Generated Functions" />
    <option name="functions" hit="Bodies of Generated Functions" />
    <option name="generated" hit="Bodies of Generated Functions" />
    <option name="of" hit="Bodies of Generated Functions" />
    <option name="and" hit="Body of empty constructors and destructors:" />
    <option name="body" hit="Body of empty constructors and destructors:" />
    <option name="constructors" hit="Body of empty constructors and destructors:" />
    <option name="destructors" hit="Body of empty constructors and destructors:" />
    <option name="empty" hit="Body of empty constructors and destructors:" />
    <option name="of" hit="Body of empty constructors and destructors:" />
    <option name="an" hit="Call the overridden function from the body of an overriding function" />
    <option name="body" hit="Call the overridden function from the body of an overriding function" />
    <option name="call" hit="Call the overridden function from the body of an overriding function" />
    <option name="from" hit="Call the overridden function from the body of an overriding function" />
    <option name="function" hit="Call the overridden function from the body of an overriding function" />
    <option name="of" hit="Call the overridden function from the body of an overriding function" />
    <option name="overridden" hit="Call the overridden function from the body of an overriding function" />
    <option name="overriding" hit="Call the overridden function from the body of an overriding function" />
    <option name="the" hit="Call the overridden function from the body of an overriding function" />
    <option name="code" hit="Code Generation" />
    <option name="generation" hit="Code Generation" />
    <option name="comment" hit="Comment style:" />
    <option name="style" hit="Comment style:" />
    <option name="constructors" hit="Declare converting constructors 'explicit'" />
    <option name="converting" hit="Declare converting constructors 'explicit'" />
    <option name="declare" hit="Declare converting constructors 'explicit'" />
    <option name="explicit" hit="Declare converting constructors 'explicit'" />
    <option name="body" hit="Default function body:" />
    <option name="default" hit="Default function body:" />
    <option name="function" hit="Default function body:" />
    <option name="body" hit="Defaulted body" />
    <option name="defaulted" hit="Defaulted body" />
    <option name="comment" hit="Documentation Comment Template" />
    <option name="documentation" hit="Documentation Comment Template" />
    <option name="template" hit="Documentation Comment Template" />
    <option name="body" hit="Empty body" />
    <option name="empty" hit="Empty body" />
    <option name="default" hit="Generate default operator implementation" />
    <option name="generate" hit="Generate default operator implementation" />
    <option name="implementation" hit="Generate default operator implementation" />
    <option name="operator" hit="Generate default operator implementation" />
    <option name="body" hit="Leave empty body" />
    <option name="empty" hit="Leave empty body" />
    <option name="leave" hit="Leave empty body" />
    <option name="options" hit="Other Options" />
    <option name="other" hit="Other Options" />
    <option name="default" hit="Return default value" />
    <option name="return" hit="Return default value" />
    <option name="value" hit="Return default value" />
    <option name="prefix" hit="Tag prefix:" />
    <option name="tag" hit="Tag prefix:" />
    <option name="error" hit="Throw std::logic_error" />
    <option name="logic" hit="Throw std::logic_error" />
    <option name="std" hit="Throw std::logic_error" />
    <option name="throw" hit="Throw std::logic_error" />
    <option name="code" hit="Uncompilable code" />
    <option name="uncompilable" hit="Uncompilable code" />
    <option name="c++" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="doc" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="edit" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="editor" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="in" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="live" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="template" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="templates" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="the" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="use" hit="Use the 'doc' live template (edit in &quot;Editor | Live Templates | C++&quot;)" />
    <option name="default" hit="Use the default template:" />
    <option name="template" hit="Use the default template:" />
    <option name="the" hit="Use the default template:" />
    <option name="use" hit="Use the default template:" />
    <option name="body" hit="Without body" />
    <option name="without" hit="Without body" />
    <option name="" hit="\param" />
    <option name="param" hit="\param" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppIncludesOrderConfigurable" configurable_name="Order of #includes">
    <option name="" hit=" Case-sensitive sort" />
    <option name="case-sensitive" hit=" Case-sensitive sort" />
    <option name="sort" hit=" Case-sensitive sort" />
    <option name="" hit=" Consider only quoted includes as potential main headers" />
    <option name="as" hit=" Consider only quoted includes as potential main headers" />
    <option name="consider" hit=" Consider only quoted includes as potential main headers" />
    <option name="headers" hit=" Consider only quoted includes as potential main headers" />
    <option name="includes" hit=" Consider only quoted includes as potential main headers" />
    <option name="main" hit=" Consider only quoted includes as potential main headers" />
    <option name="only" hit=" Consider only quoted includes as potential main headers" />
    <option name="potential" hit=" Consider only quoted includes as potential main headers" />
    <option name="quoted" hit=" Consider only quoted includes as potential main headers" />
    <option name="" hit=" Group headers by directory" />
    <option name="by" hit=" Group headers by directory" />
    <option name="directory" hit=" Group headers by directory" />
    <option name="group" hit=" Group headers by directory" />
    <option name="headers" hit=" Group headers by directory" />
    <option name="" hit=" Preserve existing #include groups during a sort" />
    <option name="#include" hit=" Preserve existing #include groups during a sort" />
    <option name="a" hit=" Preserve existing #include groups during a sort" />
    <option name="during" hit=" Preserve existing #include groups during a sort" />
    <option name="existing" hit=" Preserve existing #include groups during a sort" />
    <option name="groups" hit=" Preserve existing #include groups during a sort" />
    <option name="preserve" hit=" Preserve existing #include groups during a sort" />
    <option name="sort" hit=" Preserve existing #include groups during a sort" />
    <option name="" hit=" Put files before folders" />
    <option name="before" hit=" Put files before folders" />
    <option name="files" hit=" Put files before folders" />
    <option name="folders" hit=" Put files before folders" />
    <option name="put" hit=" Put files before folders" />
    <option name="" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="a" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="allowed" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="and" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="arbitrary" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="are" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="as" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="be" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="both" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="cc" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="configured" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="done" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="example" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="expression" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="file-to-main-include" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="for" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="h" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="header" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="if" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="in" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="include" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="is" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="main" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="mapping" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="match" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="means" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="no" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="of" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="partial" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="regular" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="seen" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="so" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="specify" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="suffix" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="suffixes" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="test" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="that" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="the" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="then" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="to" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="would" hit=" Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping. A partial match is done, so that    means  arbitrary suffix , and  $  means  no suffix . For example, if configured to  (_test)?$ , then a header a.h would be seen as the  main  include in both a.cc and a_test.cc." />
    <option name="case-sensitive" hit="Case-sensitive sort" />
    <option name="sort" hit="Case-sensitive sort" />
    <option name="as" hit="Consider only quoted includes as potential main headers" />
    <option name="consider" hit="Consider only quoted includes as potential main headers" />
    <option name="headers" hit="Consider only quoted includes as potential main headers" />
    <option name="includes" hit="Consider only quoted includes as potential main headers" />
    <option name="main" hit="Consider only quoted includes as potential main headers" />
    <option name="only" hit="Consider only quoted includes as potential main headers" />
    <option name="potential" hit="Consider only quoted includes as potential main headers" />
    <option name="quoted" hit="Consider only quoted includes as potential main headers" />
    <option name="by" hit="Group headers by directory" />
    <option name="directory" hit="Group headers by directory" />
    <option name="group" hit="Group headers by directory" />
    <option name="headers" hit="Group headers by directory" />
    <option name="file" hit="Main Source File Suffix" />
    <option name="main" hit="Main Source File Suffix" />
    <option name="source" hit="Main Source File Suffix" />
    <option name="suffix" hit="Main Source File Suffix" />
    <option name="#includes" hit="Order of #includes" />
    <option name="of" hit="Order of #includes" />
    <option name="order" hit="Order of #includes" />
    <option name="#include" hit="Preserve existing #include groups during a sort" />
    <option name="a" hit="Preserve existing #include groups during a sort" />
    <option name="during" hit="Preserve existing #include groups during a sort" />
    <option name="existing" hit="Preserve existing #include groups during a sort" />
    <option name="groups" hit="Preserve existing #include groups during a sort" />
    <option name="preserve" hit="Preserve existing #include groups during a sort" />
    <option name="sort" hit="Preserve existing #include groups during a sort" />
    <option name="before" hit="Put files before folders" />
    <option name="files" hit="Put files before folders" />
    <option name="folders" hit="Put files before folders" />
    <option name="put" hit="Put files before folders" />
    <option name="expression" hit="Regular expression for main source file suffix:" />
    <option name="file" hit="Regular expression for main source file suffix:" />
    <option name="for" hit="Regular expression for main source file suffix:" />
    <option name="main" hit="Regular expression for main source file suffix:" />
    <option name="regular" hit="Regular expression for main source file suffix:" />
    <option name="source" hit="Regular expression for main source file suffix:" />
    <option name="suffix" hit="Regular expression for main source file suffix:" />
    <option name="directives" hit="Sort Include Directives" />
    <option name="include" hit="Sort Include Directives" />
    <option name="sort" hit="Sort Include Directives" />
    <option name="order" hit="Sort order:" />
    <option name="sort" hit="Sort order:" />
    <option name="a" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="allowed" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="and" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="arbitrary" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="are" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="as" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="atest" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="be" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="both" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="cc" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="configured" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="done" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="example" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="expression" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="file-to-main-include" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="for" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="h" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="header" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="if" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="in" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="include" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="is" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="main" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="mapping" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="match" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="means" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="no" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="of" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="partial" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="regular" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="seen" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="so" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="specify" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="suffix" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="suffixes" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="test" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="that" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="the" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="then" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="to" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="would" hit="Specify a regular expression of suffixes that are allowed in the file-to-main-include mapping.&#13;&#10;A partial match is done, so that “” means “arbitrary suffix”, and “$” means “no suffix”.&#13;&#10;For example, if configured to “(test)?$”, then a header a.h would be seen as the “main” include in both a.cc and atest.cc." />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppShadersOptionsId" configurable_name="Shaders">
    <option name="" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="and" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="can" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="engine" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="from" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="information" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="installed" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="launched" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="load" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="mapping" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="plugin" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="requires" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="riderlink" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="shader" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="unreal" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="you" hit=" You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="#include" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="be" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="can" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="directives" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="directories" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="engine" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="for" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="from" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="here" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="mappings" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="resolving" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="shader" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="source" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="specify" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="these" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="unreal" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="used" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="will" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="you" hit=" You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="directories" hit="Mappings for Shader Source Directories" />
    <option name="for" hit="Mappings for Shader Source Directories" />
    <option name="mappings" hit="Mappings for Shader Source Directories" />
    <option name="shader" hit="Mappings for Shader Source Directories" />
    <option name="source" hit="Mappings for Shader Source Directories" />
    <option name="from" hit="Shader mappings from RiderLink" />
    <option name="mappings" hit="Shader mappings from RiderLink" />
    <option name="riderlink" hit="Shader mappings from RiderLink" />
    <option name="shader" hit="Shader mappings from RiderLink" />
    <option name="shaders" hit="Shaders" />
    <option name="and" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="can" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="engine" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="from" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="information" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="installed" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="launched" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="load" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="mapping" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="plugin" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="requires" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="riderlink" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="shader" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="unreal" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="you" hit="You can load shader mapping information from Unreal Engine (requires RiderLink plugin installed and Unreal Engine launched)." />
    <option name="#include" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="be" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="can" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="directives" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="directories" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="engine" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="for" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="from" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="here" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="mappings" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="resolving" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="shader" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="source" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="specify" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="these" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="unreal" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="used" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="will" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="you" hit="You can specify mappings for shader source directories from Unreal Engine here. These mappings will be used for resolving #include directives." />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="CppInternalOptionsId" configurable_name="Internal">
    <option name="" hit=" Enable CheckSymbols" />
    <option name="checksymbols" hit=" Enable CheckSymbols" />
    <option name="enable" hit=" Enable CheckSymbols" />
    <option name="" hit=" Enable in-memory modules cache" />
    <option name="cache" hit=" Enable in-memory modules cache" />
    <option name="enable" hit=" Enable in-memory modules cache" />
    <option name="in-memory" hit=" Enable in-memory modules cache" />
    <option name="modules" hit=" Enable in-memory modules cache" />
    <option name="" hit=" Enable special UE4 support" />
    <option name="enable" hit=" Enable special UE4 support" />
    <option name="special" hit=" Enable special UE4 support" />
    <option name="support" hit=" Enable special UE4 support" />
    <option name="ue4" hit=" Enable special UE4 support" />
    <option name="" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="by" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="files" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="generated" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="minimize" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="project" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="requires" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="restart" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="unrealbuildtool" hit=" Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="" hit=" Show blueprint errors in Problems View" />
    <option name="blueprint" hit=" Show blueprint errors in Problems View" />
    <option name="errors" hit=" Show blueprint errors in Problems View" />
    <option name="in" hit=" Show blueprint errors in Problems View" />
    <option name="problems" hit=" Show blueprint errors in Problems View" />
    <option name="show" hit=" Show blueprint errors in Problems View" />
    <option name="view" hit=" Show blueprint errors in Problems View" />
    <option name="" hit=" Specify UE version for online quick doc" />
    <option name="doc" hit=" Specify UE version for online quick doc" />
    <option name="for" hit=" Specify UE version for online quick doc" />
    <option name="online" hit=" Specify UE version for online quick doc" />
    <option name="quick" hit=" Specify UE version for online quick doc" />
    <option name="specify" hit=" Specify UE version for online quick doc" />
    <option name="ue" hit=" Specify UE version for online quick doc" />
    <option name="version" hit=" Specify UE version for online quick doc" />
    <option name="checksymbols" hit="Enable CheckSymbols" />
    <option name="enable" hit="Enable CheckSymbols" />
    <option name="cache" hit="Enable in-memory modules cache" />
    <option name="enable" hit="Enable in-memory modules cache" />
    <option name="in-memory" hit="Enable in-memory modules cache" />
    <option name="modules" hit="Enable in-memory modules cache" />
    <option name="enable" hit="Enable special UE4 support" />
    <option name="special" hit="Enable special UE4 support" />
    <option name="support" hit="Enable special UE4 support" />
    <option name="ue4" hit="Enable special UE4 support" />
    <option name="internal" hit="Internal" />
    <option name="0" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="cache" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="concurrency" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="for" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="maximum" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="of" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="tasks" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="unlimited" hit="Maximum concurrency of cache tasks (0 for unlimited)" />
    <option name="analysis" hit="Maximum concurrency of code analysis" />
    <option name="code" hit="Maximum concurrency of code analysis" />
    <option name="concurrency" hit="Maximum concurrency of code analysis" />
    <option name="maximum" hit="Maximum concurrency of code analysis" />
    <option name="of" hit="Maximum concurrency of code analysis" />
    <option name="blueprint" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="code" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="in" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="maximum" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="number" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="occurrences" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="of" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="vision" hit="Maximum number of blueprint occurrences in Code Vision" />
    <option name="by" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="files" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="generated" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="minimize" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="project" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="requires" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="restart" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="unrealbuildtool" hit="Minimize project files generated by UnrealBuildTool (requires restart)" />
    <option name="blueprint" hit="Show blueprint errors in Problems View" />
    <option name="errors" hit="Show blueprint errors in Problems View" />
    <option name="in" hit="Show blueprint errors in Problems View" />
    <option name="problems" hit="Show blueprint errors in Problems View" />
    <option name="show" hit="Show blueprint errors in Problems View" />
    <option name="view" hit="Show blueprint errors in Problems View" />
    <option name="doc" hit="Specify UE version for online quick doc" />
    <option name="for" hit="Specify UE version for online quick doc" />
    <option name="online" hit="Specify UE version for online quick doc" />
    <option name="quick" hit="Specify UE version for online quick doc" />
    <option name="specify" hit="Specify UE version for online quick doc" />
    <option name="ue" hit="Specify UE version for online quick doc" />
    <option name="version" hit="Specify UE version for online quick doc" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="preferences.sourceCode.C++" configurable_name="C++">
    <option name="" path="General" hit=" Clang-format executable to use:" />
    <option name="clang-format" path="General" hit=" Clang-format executable to use:" />
    <option name="executable" path="General" hit=" Clang-format executable to use:" />
    <option name="to" path="General" hit=" Clang-format executable to use:" />
    <option name="use" path="General" hit=" Clang-format executable to use:" />
    <option name="" path="General" hit=" Read code style from .clang-format files" />
    <option name="clang-format" path="General" hit=" Read code style from .clang-format files" />
    <option name="code" path="General" hit=" Read code style from .clang-format files" />
    <option name="files" path="General" hit=" Read code style from .clang-format files" />
    <option name="from" path="General" hit=" Read code style from .clang-format files" />
    <option name="read" path="General" hit=" Read code style from .clang-format files" />
    <option name="style" path="General" hit=" Read code style from .clang-format files" />
    <option name="" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="affect" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="alt+enter" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="and" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="block" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="choose" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="cleanup" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="code" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="configure" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="detect" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="only" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="or" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="press" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="reformat" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="rules" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="selected" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="settings" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="style" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="that" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="then" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="to" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="view" path="Tabs and Indents" hit=" To only view code style rules that affect selected code block, press Alt+Enter, then choose Reformat and cleanup  | Configure code style  or Detect code style settings " />
    <option name="" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="also" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="and" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="autodetection" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="be" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="can" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="clang-format" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="code" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="configuration" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="configured" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="files" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="format" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="formatter" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="formatting" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="from" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="inspections" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="it" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="manually" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="or" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="read" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="rider" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="run" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="settings" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="to" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="use" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="via" path="General" hit=" Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="and" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="be" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="bundled" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="clang-format" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="code" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="disabled" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="effect" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="external" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="format" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="formatting" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="inspections" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="not" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="options" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="or" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="rider" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="take" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="to" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="use" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="will" path="General" hit=" Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="сlangformat" path="General" hit=" langFormat" />
    <option name="" hit="?: operator" />
    <option name="operator" hit="?: operator" />
    <option name="all" path="Naming" hit="ALL_UPPER" />
    <option name="upper" path="Naming" hit="ALL_UPPER" />
    <option name="after" hit="After '...' in parameter pack" />
    <option name="in" hit="After '...' in parameter pack" />
    <option name="pack" hit="After '...' in parameter pack" />
    <option name="parameter" hit="After '...' in parameter pack" />
    <option name="after" hit="After ':' in range-based for loop" />
    <option name="for" hit="After ':' in range-based for loop" />
    <option name="in" hit="After ':' in range-based for loop" />
    <option name="loop" hit="After ':' in range-based for loop" />
    <option name="range-based" hit="After ':' in range-based for loop" />
    <option name="after" hit="After C++/CLI generic constraint colon" />
    <option name="c++" hit="After C++/CLI generic constraint colon" />
    <option name="cli" hit="After C++/CLI generic constraint colon" />
    <option name="colon" hit="After C++/CLI generic constraint colon" />
    <option name="constraint" hit="After C++/CLI generic constraint colon" />
    <option name="generic" hit="After C++/CLI generic constraint colon" />
    <option name="access" hit="After access specifier" />
    <option name="after" hit="After access specifier" />
    <option name="specifier" hit="After access specifier" />
    <option name="after" hit="After base types list colon" />
    <option name="base" hit="After base types list colon" />
    <option name="colon" hit="After base types list colon" />
    <option name="list" hit="After base types list colon" />
    <option name="types" hit="After base types list colon" />
    <option name="after" hit="After colon in bit-field declarations" />
    <option name="bit-field" hit="After colon in bit-field declarations" />
    <option name="colon" hit="After colon in bit-field declarations" />
    <option name="declarations" hit="After colon in bit-field declarations" />
    <option name="in" hit="After colon in bit-field declarations" />
    <option name="after" hit="After colon in switch case or label statement" />
    <option name="case" hit="After colon in switch case or label statement" />
    <option name="colon" hit="After colon in switch case or label statement" />
    <option name="in" hit="After colon in switch case or label statement" />
    <option name="label" hit="After colon in switch case or label statement" />
    <option name="or" hit="After colon in switch case or label statement" />
    <option name="statement" hit="After colon in switch case or label statement" />
    <option name="switch" hit="After colon in switch case or label statement" />
    <option name="after" hit="After comma in base clause" />
    <option name="base" hit="After comma in base clause" />
    <option name="clause" hit="After comma in base clause" />
    <option name="comma" hit="After comma in base clause" />
    <option name="in" hit="After comma in base clause" />
    <option name="after" hit="After comma in declaration of multiple variables" />
    <option name="comma" hit="After comma in declaration of multiple variables" />
    <option name="declaration" hit="After comma in declaration of multiple variables" />
    <option name="in" hit="After comma in declaration of multiple variables" />
    <option name="multiple" hit="After comma in declaration of multiple variables" />
    <option name="of" hit="After comma in declaration of multiple variables" />
    <option name="variables" hit="After comma in declaration of multiple variables" />
    <option name="after" hit="After comma in enum" />
    <option name="comma" hit="After comma in enum" />
    <option name="enum" hit="After comma in enum" />
    <option name="in" hit="After comma in enum" />
    <option name="after" hit="After comma in function call and initialization" />
    <option name="and" hit="After comma in function call and initialization" />
    <option name="call" hit="After comma in function call and initialization" />
    <option name="comma" hit="After comma in function call and initialization" />
    <option name="function" hit="After comma in function call and initialization" />
    <option name="in" hit="After comma in function call and initialization" />
    <option name="initialization" hit="After comma in function call and initialization" />
    <option name="after" hit="After comma in function parameters" />
    <option name="comma" hit="After comma in function parameters" />
    <option name="function" hit="After comma in function parameters" />
    <option name="in" hit="After comma in function parameters" />
    <option name="parameters" hit="After comma in function parameters" />
    <option name="after" hit="After comma in template arguments" />
    <option name="arguments" hit="After comma in template arguments" />
    <option name="comma" hit="After comma in template arguments" />
    <option name="in" hit="After comma in template arguments" />
    <option name="template" hit="After comma in template arguments" />
    <option name="after" hit="After comma in template parameters" />
    <option name="comma" hit="After comma in template parameters" />
    <option name="in" hit="After comma in template parameters" />
    <option name="parameters" hit="After comma in template parameters" />
    <option name="template" hit="After comma in template parameters" />
    <option name="after" hit="After comma in uniform initialization braces" />
    <option name="braces" hit="After comma in uniform initialization braces" />
    <option name="comma" hit="After comma in uniform initialization braces" />
    <option name="in" hit="After comma in uniform initialization braces" />
    <option name="initialization" hit="After comma in uniform initialization braces" />
    <option name="uniform" hit="After comma in uniform initialization braces" />
    <option name="after" hit="After logical NOT operator (!)" />
    <option name="logical" hit="After logical NOT operator (!)" />
    <option name="not" hit="After logical NOT operator (!)" />
    <option name="operator" hit="After logical NOT operator (!)" />
    <option name="after" hit="After parentheses in cast expressions" />
    <option name="cast" hit="After parentheses in cast expressions" />
    <option name="expressions" hit="After parentheses in cast expressions" />
    <option name="in" hit="After parentheses in cast expressions" />
    <option name="parentheses" hit="After parentheses in cast expressions" />
    <option name="after" hit="After ptr in declaration of multiple variables" />
    <option name="declaration" hit="After ptr in declaration of multiple variables" />
    <option name="in" hit="After ptr in declaration of multiple variables" />
    <option name="multiple" hit="After ptr in declaration of multiple variables" />
    <option name="of" hit="After ptr in declaration of multiple variables" />
    <option name="ptr" hit="After ptr in declaration of multiple variables" />
    <option name="variables" hit="After ptr in declaration of multiple variables" />
    <option name="after" hit="After ptr in declaration of variable" />
    <option name="declaration" hit="After ptr in declaration of variable" />
    <option name="in" hit="After ptr in declaration of variable" />
    <option name="of" hit="After ptr in declaration of variable" />
    <option name="ptr" hit="After ptr in declaration of variable" />
    <option name="variable" hit="After ptr in declaration of variable" />
    <option name="after" hit="After ptr in nested declarator" />
    <option name="declarator" hit="After ptr in nested declarator" />
    <option name="in" hit="After ptr in nested declarator" />
    <option name="nested" hit="After ptr in nested declarator" />
    <option name="ptr" hit="After ptr in nested declarator" />
    <option name="after" hit="After ptr in return type of function" />
    <option name="function" hit="After ptr in return type of function" />
    <option name="in" hit="After ptr in return type of function" />
    <option name="of" hit="After ptr in return type of function" />
    <option name="ptr" hit="After ptr in return type of function" />
    <option name="return" hit="After ptr in return type of function" />
    <option name="type" hit="After ptr in return type of function" />
    <option name="after" hit="After ref in declaration of multiple variables" />
    <option name="declaration" hit="After ref in declaration of multiple variables" />
    <option name="in" hit="After ref in declaration of multiple variables" />
    <option name="multiple" hit="After ref in declaration of multiple variables" />
    <option name="of" hit="After ref in declaration of multiple variables" />
    <option name="ref" hit="After ref in declaration of multiple variables" />
    <option name="variables" hit="After ref in declaration of multiple variables" />
    <option name="after" hit="After ref in declaration of variable" />
    <option name="declaration" hit="After ref in declaration of variable" />
    <option name="in" hit="After ref in declaration of variable" />
    <option name="of" hit="After ref in declaration of variable" />
    <option name="ref" hit="After ref in declaration of variable" />
    <option name="variable" hit="After ref in declaration of variable" />
    <option name="after" hit="After ref in return type of function" />
    <option name="function" hit="After ref in return type of function" />
    <option name="in" hit="After ref in return type of function" />
    <option name="of" hit="After ref in return type of function" />
    <option name="ref" hit="After ref in return type of function" />
    <option name="return" hit="After ref in return type of function" />
    <option name="type" hit="After ref in return type of function" />
    <option name="after" hit="After semicolon" />
    <option name="semicolon" hit="After semicolon" />
    <option name="+" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="++" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="-" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="--" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="after" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="operator" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="unary" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="align" hit="Align Multiline Construct" />
    <option name="construct" hit="Align Multiline Construct" />
    <option name="multiline" hit="Align Multiline Construct" />
    <option name="align" hit="Align Similar Code in Columns" />
    <option name="code" hit="Align Similar Code in Columns" />
    <option name="columns" hit="Align Similar Code in Columns" />
    <option name="in" hit="Align Similar Code in Columns" />
    <option name="similar" hit="Align Similar Code in Columns" />
    <option name="align" hit="Align even if the resulting indentation is too large" />
    <option name="even" hit="Align even if the resulting indentation is too large" />
    <option name="if" hit="Align even if the resulting indentation is too large" />
    <option name="indentation" hit="Align even if the resulting indentation is too large" />
    <option name="is" hit="Align even if the resulting indentation is too large" />
    <option name="large" hit="Align even if the resulting indentation is too large" />
    <option name="resulting" hit="Align even if the resulting indentation is too large" />
    <option name="the" hit="Align even if the resulting indentation is too large" />
    <option name="too" hit="Align even if the resulting indentation is too large" />
    <option name="allow" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="c++" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="cli" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="constraints" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="generic" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="line" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="on" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="same" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="the" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="after" hit="Allow comment after '{'" />
    <option name="allow" hit="Allow comment after '{'" />
    <option name="comment" hit="Allow comment after '{'" />
    <option name="-" hit="Around '-&gt;' in trailing return types" />
    <option name="around" hit="Around '-&gt;' in trailing return types" />
    <option name="in" hit="Around '-&gt;' in trailing return types" />
    <option name="return" hit="Around '-&gt;' in trailing return types" />
    <option name="trailing" hit="Around '-&gt;' in trailing return types" />
    <option name="types" hit="Around '-&gt;' in trailing return types" />
    <option name="alias" hit="Around '=' in alias declaration and namespace alias" />
    <option name="and" hit="Around '=' in alias declaration and namespace alias" />
    <option name="around" hit="Around '=' in alias declaration and namespace alias" />
    <option name="declaration" hit="Around '=' in alias declaration and namespace alias" />
    <option name="in" hit="Around '=' in alias declaration and namespace alias" />
    <option name="namespace" hit="Around '=' in alias declaration and namespace alias" />
    <option name="around" hit="Around assignment operator" />
    <option name="assignment" hit="Around assignment operator" />
    <option name="operator" hit="Around assignment operator" />
    <option name="around" hit="Around binary operator" />
    <option name="binary" hit="Around binary operator" />
    <option name="operator" hit="Around binary operator" />
    <option name="around" hit="Around class/struct/enum definition" />
    <option name="class" hit="Around class/struct/enum definition" />
    <option name="definition" hit="Around class/struct/enum definition" />
    <option name="enum" hit="Around class/struct/enum definition" />
    <option name="struct" hit="Around class/struct/enum definition" />
    <option name="-" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="and" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="around" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="dot" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="around" hit="Around function declarations" />
    <option name="declarations" hit="Around function declarations" />
    <option name="function" hit="Around function declarations" />
    <option name="around" hit="Around function definitions" />
    <option name="definitions" hit="Around function definitions" />
    <option name="function" hit="Around function definitions" />
    <option name="around" hit="Around namespaces" />
    <option name="namespaces" hit="Around namespaces" />
    <option name="and" hit="Around other definitions and declarations" />
    <option name="around" hit="Around other definitions and declarations" />
    <option name="declarations" hit="Around other definitions and declarations" />
    <option name="definitions" hit="Around other definitions and declarations" />
    <option name="other" hit="Around other definitions and declarations" />
    <option name="around" hit="Around single line function definitions" />
    <option name="definitions" hit="Around single line function definitions" />
    <option name="function" hit="Around single line function definitions" />
    <option name="line" hit="Around single line function definitions" />
    <option name="single" hit="Around single line function definitions" />
    <option name="arrangement" hit="Arrangement of Enumerations" />
    <option name="enumerations" hit="Arrangement of Enumerations" />
    <option name="of" hit="Arrangement of Enumerations" />
    <option name="assignments" hit="Assignments" />
    <option name="base" hit="Base classes in class base clause" />
    <option name="class" hit="Base classes in class base clause" />
    <option name="classes" hit="Base classes in class base clause" />
    <option name="clause" hit="Base classes in class base clause" />
    <option name="in" hit="Base classes in class base clause" />
    <option name="before" hit="Before '...' in parameter pack" />
    <option name="in" hit="Before '...' in parameter pack" />
    <option name="pack" hit="Before '...' in parameter pack" />
    <option name="parameter" hit="Before '...' in parameter pack" />
    <option name="before" hit="Before ':' in range-based for loop" />
    <option name="for" hit="Before ':' in range-based for loop" />
    <option name="in" hit="Before ':' in range-based for loop" />
    <option name="loop" hit="Before ':' in range-based for loop" />
    <option name="range-based" hit="Before ':' in range-based for loop" />
    <option name="before" hit="Before C++/CLI generic constraint colon" />
    <option name="c++" hit="Before C++/CLI generic constraint colon" />
    <option name="cli" hit="Before C++/CLI generic constraint colon" />
    <option name="colon" hit="Before C++/CLI generic constraint colon" />
    <option name="constraint" hit="Before C++/CLI generic constraint colon" />
    <option name="generic" hit="Before C++/CLI generic constraint colon" />
    <option name="access" hit="Before access specifier" />
    <option name="before" hit="Before access specifier" />
    <option name="specifier" hit="Before access specifier" />
    <option name="angle" hit="Before angle brackets in template arguments" />
    <option name="arguments" hit="Before angle brackets in template arguments" />
    <option name="before" hit="Before angle brackets in template arguments" />
    <option name="brackets" hit="Before angle brackets in template arguments" />
    <option name="in" hit="Before angle brackets in template arguments" />
    <option name="template" hit="Before angle brackets in template arguments" />
    <option name="angle" hit="Before angle brackets in template parameters" />
    <option name="before" hit="Before angle brackets in template parameters" />
    <option name="brackets" hit="Before angle brackets in template parameters" />
    <option name="in" hit="Before angle brackets in template parameters" />
    <option name="parameters" hit="Before angle brackets in template parameters" />
    <option name="template" hit="Before angle brackets in template parameters" />
    <option name="array" hit="Before array subscript brackets" />
    <option name="before" hit="Before array subscript brackets" />
    <option name="brackets" hit="Before array subscript brackets" />
    <option name="subscript" hit="Before array subscript brackets" />
    <option name="base" hit="Before base types list colon" />
    <option name="before" hit="Before base types list colon" />
    <option name="colon" hit="Before base types list colon" />
    <option name="list" hit="Before base types list colon" />
    <option name="types" hit="Before base types list colon" />
    <option name="before" hit="Before colon in bit-field declarations" />
    <option name="bit-field" hit="Before colon in bit-field declarations" />
    <option name="colon" hit="Before colon in bit-field declarations" />
    <option name="declarations" hit="Before colon in bit-field declarations" />
    <option name="in" hit="Before colon in bit-field declarations" />
    <option name="before" hit="Before colon in switch case or label statement" />
    <option name="case" hit="Before colon in switch case or label statement" />
    <option name="colon" hit="Before colon in switch case or label statement" />
    <option name="in" hit="Before colon in switch case or label statement" />
    <option name="label" hit="Before colon in switch case or label statement" />
    <option name="or" hit="Before colon in switch case or label statement" />
    <option name="statement" hit="Before colon in switch case or label statement" />
    <option name="switch" hit="Before colon in switch case or label statement" />
    <option name="base" hit="Before comma in base clause" />
    <option name="before" hit="Before comma in base clause" />
    <option name="clause" hit="Before comma in base clause" />
    <option name="comma" hit="Before comma in base clause" />
    <option name="in" hit="Before comma in base clause" />
    <option name="before" hit="Before comma in declaration of multiple variables" />
    <option name="comma" hit="Before comma in declaration of multiple variables" />
    <option name="declaration" hit="Before comma in declaration of multiple variables" />
    <option name="in" hit="Before comma in declaration of multiple variables" />
    <option name="multiple" hit="Before comma in declaration of multiple variables" />
    <option name="of" hit="Before comma in declaration of multiple variables" />
    <option name="variables" hit="Before comma in declaration of multiple variables" />
    <option name="before" hit="Before comma in enum" />
    <option name="comma" hit="Before comma in enum" />
    <option name="enum" hit="Before comma in enum" />
    <option name="in" hit="Before comma in enum" />
    <option name="and" hit="Before comma in function call and initialization" />
    <option name="before" hit="Before comma in function call and initialization" />
    <option name="call" hit="Before comma in function call and initialization" />
    <option name="comma" hit="Before comma in function call and initialization" />
    <option name="function" hit="Before comma in function call and initialization" />
    <option name="in" hit="Before comma in function call and initialization" />
    <option name="initialization" hit="Before comma in function call and initialization" />
    <option name="before" hit="Before comma in function parameters" />
    <option name="comma" hit="Before comma in function parameters" />
    <option name="function" hit="Before comma in function parameters" />
    <option name="in" hit="Before comma in function parameters" />
    <option name="parameters" hit="Before comma in function parameters" />
    <option name="arguments" hit="Before comma in template arguments" />
    <option name="before" hit="Before comma in template arguments" />
    <option name="comma" hit="Before comma in template arguments" />
    <option name="in" hit="Before comma in template arguments" />
    <option name="template" hit="Before comma in template arguments" />
    <option name="before" hit="Before comma in template parameters" />
    <option name="comma" hit="Before comma in template parameters" />
    <option name="in" hit="Before comma in template parameters" />
    <option name="parameters" hit="Before comma in template parameters" />
    <option name="template" hit="Before comma in template parameters" />
    <option name="before" hit="Before comma in uniform initialization braces" />
    <option name="braces" hit="Before comma in uniform initialization braces" />
    <option name="comma" hit="Before comma in uniform initialization braces" />
    <option name="in" hit="Before comma in uniform initialization braces" />
    <option name="initialization" hit="Before comma in uniform initialization braces" />
    <option name="uniform" hit="Before comma in uniform initialization braces" />
    <option name="and" hit="Before empty parentheses in function call and initialization" />
    <option name="before" hit="Before empty parentheses in function call and initialization" />
    <option name="call" hit="Before empty parentheses in function call and initialization" />
    <option name="empty" hit="Before empty parentheses in function call and initialization" />
    <option name="function" hit="Before empty parentheses in function call and initialization" />
    <option name="in" hit="Before empty parentheses in function call and initialization" />
    <option name="initialization" hit="Before empty parentheses in function call and initialization" />
    <option name="parentheses" hit="Before empty parentheses in function call and initialization" />
    <option name="before" hit="Before end of line comment" />
    <option name="comment" hit="Before end of line comment" />
    <option name="end" hit="Before end of line comment" />
    <option name="line" hit="Before end of line comment" />
    <option name="of" hit="Before end of line comment" />
    <option name="before" hit="Before parentheses" />
    <option name="parentheses" hit="Before parentheses" />
    <option name="and" hit="Before parentheses in function call and initialization" />
    <option name="before" hit="Before parentheses in function call and initialization" />
    <option name="call" hit="Before parentheses in function call and initialization" />
    <option name="function" hit="Before parentheses in function call and initialization" />
    <option name="in" hit="Before parentheses in function call and initialization" />
    <option name="initialization" hit="Before parentheses in function call and initialization" />
    <option name="parentheses" hit="Before parentheses in function call and initialization" />
    <option name="before" hit="Before parentheses in function parameters" />
    <option name="function" hit="Before parentheses in function parameters" />
    <option name="in" hit="Before parentheses in function parameters" />
    <option name="parameters" hit="Before parentheses in function parameters" />
    <option name="parentheses" hit="Before parentheses in function parameters" />
    <option name="before" hit="Before parentheses in lambda parameters" />
    <option name="in" hit="Before parentheses in lambda parameters" />
    <option name="lambda" hit="Before parentheses in lambda parameters" />
    <option name="parameters" hit="Before parentheses in lambda parameters" />
    <option name="parentheses" hit="Before parentheses in lambda parameters" />
    <option name="before" hit="Before postfix operator" />
    <option name="operator" hit="Before postfix operator" />
    <option name="postfix" hit="Before postfix operator" />
    <option name="abstract" hit="Before ptr in abstract declaration" />
    <option name="before" hit="Before ptr in abstract declaration" />
    <option name="declaration" hit="Before ptr in abstract declaration" />
    <option name="in" hit="Before ptr in abstract declaration" />
    <option name="ptr" hit="Before ptr in abstract declaration" />
    <option name="before" hit="Before ptr in declaration of multiple variables" />
    <option name="declaration" hit="Before ptr in declaration of multiple variables" />
    <option name="in" hit="Before ptr in declaration of multiple variables" />
    <option name="multiple" hit="Before ptr in declaration of multiple variables" />
    <option name="of" hit="Before ptr in declaration of multiple variables" />
    <option name="ptr" hit="Before ptr in declaration of multiple variables" />
    <option name="variables" hit="Before ptr in declaration of multiple variables" />
    <option name="before" hit="Before ptr in declaration of variable" />
    <option name="declaration" hit="Before ptr in declaration of variable" />
    <option name="in" hit="Before ptr in declaration of variable" />
    <option name="of" hit="Before ptr in declaration of variable" />
    <option name="ptr" hit="Before ptr in declaration of variable" />
    <option name="variable" hit="Before ptr in declaration of variable" />
    <option name="before" hit="Before ptr in return type of function" />
    <option name="function" hit="Before ptr in return type of function" />
    <option name="in" hit="Before ptr in return type of function" />
    <option name="of" hit="Before ptr in return type of function" />
    <option name="ptr" hit="Before ptr in return type of function" />
    <option name="return" hit="Before ptr in return type of function" />
    <option name="type" hit="Before ptr in return type of function" />
    <option name="abstract" hit="Before ref in abstract declaration" />
    <option name="before" hit="Before ref in abstract declaration" />
    <option name="declaration" hit="Before ref in abstract declaration" />
    <option name="in" hit="Before ref in abstract declaration" />
    <option name="ref" hit="Before ref in abstract declaration" />
    <option name="before" hit="Before ref in declaration of multiple variables" />
    <option name="declaration" hit="Before ref in declaration of multiple variables" />
    <option name="in" hit="Before ref in declaration of multiple variables" />
    <option name="multiple" hit="Before ref in declaration of multiple variables" />
    <option name="of" hit="Before ref in declaration of multiple variables" />
    <option name="ref" hit="Before ref in declaration of multiple variables" />
    <option name="variables" hit="Before ref in declaration of multiple variables" />
    <option name="before" hit="Before ref in declaration of variable" />
    <option name="declaration" hit="Before ref in declaration of variable" />
    <option name="in" hit="Before ref in declaration of variable" />
    <option name="of" hit="Before ref in declaration of variable" />
    <option name="ref" hit="Before ref in declaration of variable" />
    <option name="variable" hit="Before ref in declaration of variable" />
    <option name="before" hit="Before ref in return type of function" />
    <option name="function" hit="Before ref in return type of function" />
    <option name="in" hit="Before ref in return type of function" />
    <option name="of" hit="Before ref in return type of function" />
    <option name="ref" hit="Before ref in return type of function" />
    <option name="return" hit="Before ref in return type of function" />
    <option name="type" hit="Before ref in return type of function" />
    <option name="before" hit="Before semicolon" />
    <option name="semicolon" hit="Before semicolon" />
    <option name="before" hit="Before uniform initialization braces" />
    <option name="braces" hit="Before uniform initialization braces" />
    <option name="initialization" hit="Before uniform initialization braces" />
    <option name="uniform" hit="Before uniform initialization braces" />
    <option name="angle" hit="Between closing angle brackets in template arguments" />
    <option name="arguments" hit="Between closing angle brackets in template arguments" />
    <option name="between" hit="Between closing angle brackets in template arguments" />
    <option name="brackets" hit="Between closing angle brackets in template arguments" />
    <option name="closing" hit="Between closing angle brackets in template arguments" />
    <option name="in" hit="Between closing angle brackets in template arguments" />
    <option name="template" hit="Between closing angle brackets in template arguments" />
    <option name="bit-field" hit="Bit-field sizes" />
    <option name="sizes" hit="Bit-field sizes" />
    <option name="blank" hit="Blank Lines" />
    <option name="lines" hit="Blank Lines" />
    <option name="block" hit="Block under 'case' label" />
    <option name="case" hit="Block under 'case' label" />
    <option name="label" hit="Block under 'case' label" />
    <option name="under" hit="Block under 'case' label" />
    <option name="braces" hit="Braces" />
    <option name="braces" hit="Braces Layout" />
    <option name="layout" hit="Braces Layout" />
    <option name="-" hit="Break line after '-&gt;' in trailing return types" />
    <option name="after" hit="Break line after '-&gt;' in trailing return types" />
    <option name="break" hit="Break line after '-&gt;' in trailing return types" />
    <option name="in" hit="Break line after '-&gt;' in trailing return types" />
    <option name="line" hit="Break line after '-&gt;' in trailing return types" />
    <option name="return" hit="Break line after '-&gt;' in trailing return types" />
    <option name="trailing" hit="Break line after '-&gt;' in trailing return types" />
    <option name="types" hit="Break line after '-&gt;' in trailing return types" />
    <option name="after" hit="Break line after colon in member initializer lists" />
    <option name="break" hit="Break line after colon in member initializer lists" />
    <option name="colon" hit="Break line after colon in member initializer lists" />
    <option name="in" hit="Break line after colon in member initializer lists" />
    <option name="initializer" hit="Break line after colon in member initializer lists" />
    <option name="line" hit="Break line after colon in member initializer lists" />
    <option name="lists" hit="Break line after colon in member initializer lists" />
    <option name="member" hit="Break line after colon in member initializer lists" />
    <option name="after" hit="Break line after comma in member initializer lists" />
    <option name="break" hit="Break line after comma in member initializer lists" />
    <option name="comma" hit="Break line after comma in member initializer lists" />
    <option name="in" hit="Break line after comma in member initializer lists" />
    <option name="initializer" hit="Break line after comma in member initializer lists" />
    <option name="line" hit="Break line after comma in member initializer lists" />
    <option name="lists" hit="Break line after comma in member initializer lists" />
    <option name="member" hit="Break line after comma in member initializer lists" />
    <option name="after" hit="Break line after goto labels" />
    <option name="break" hit="Break line after goto labels" />
    <option name="goto" hit="Break line after goto labels" />
    <option name="labels" hit="Break line after goto labels" />
    <option name="line" hit="Break line after goto labels" />
    <option name="after" hit="Break line after init-statement" />
    <option name="break" hit="Break line after init-statement" />
    <option name="init-statement" hit="Break line after init-statement" />
    <option name="line" hit="Break line after init-statement" />
    <option name="after" hit="Break line after member function declaration return type" />
    <option name="break" hit="Break line after member function declaration return type" />
    <option name="declaration" hit="Break line after member function declaration return type" />
    <option name="function" hit="Break line after member function declaration return type" />
    <option name="line" hit="Break line after member function declaration return type" />
    <option name="member" hit="Break line after member function declaration return type" />
    <option name="return" hit="Break line after member function declaration return type" />
    <option name="type" hit="Break line after member function declaration return type" />
    <option name="after" hit="Break line after member function definition return type" />
    <option name="break" hit="Break line after member function definition return type" />
    <option name="definition" hit="Break line after member function definition return type" />
    <option name="function" hit="Break line after member function definition return type" />
    <option name="line" hit="Break line after member function definition return type" />
    <option name="member" hit="Break line after member function definition return type" />
    <option name="return" hit="Break line after member function definition return type" />
    <option name="type" hit="Break line after member function definition return type" />
    <option name="a" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="after" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="break" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="declaration" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="line" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="of" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="template" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="the" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="after" hit="Break line after top-level function declaration return type" />
    <option name="break" hit="Break line after top-level function declaration return type" />
    <option name="declaration" hit="Break line after top-level function declaration return type" />
    <option name="function" hit="Break line after top-level function declaration return type" />
    <option name="line" hit="Break line after top-level function declaration return type" />
    <option name="return" hit="Break line after top-level function declaration return type" />
    <option name="top-level" hit="Break line after top-level function declaration return type" />
    <option name="type" hit="Break line after top-level function declaration return type" />
    <option name="after" hit="Break line after top-level function definition return type" />
    <option name="break" hit="Break line after top-level function definition return type" />
    <option name="definition" hit="Break line after top-level function definition return type" />
    <option name="function" hit="Break line after top-level function definition return type" />
    <option name="line" hit="Break line after top-level function definition return type" />
    <option name="return" hit="Break line after top-level function definition return type" />
    <option name="top-level" hit="Break line after top-level function definition return type" />
    <option name="type" hit="Break line after top-level function definition return type" />
    <option name="-" hit="Break line before '-&gt;' in trailing return types" />
    <option name="before" hit="Break line before '-&gt;' in trailing return types" />
    <option name="break" hit="Break line before '-&gt;' in trailing return types" />
    <option name="in" hit="Break line before '-&gt;' in trailing return types" />
    <option name="line" hit="Break line before '-&gt;' in trailing return types" />
    <option name="return" hit="Break line before '-&gt;' in trailing return types" />
    <option name="trailing" hit="Break line before '-&gt;' in trailing return types" />
    <option name="types" hit="Break line before '-&gt;' in trailing return types" />
    <option name="before" hit="Break line before colon in member initializer lists" />
    <option name="break" hit="Break line before colon in member initializer lists" />
    <option name="colon" hit="Break line before colon in member initializer lists" />
    <option name="in" hit="Break line before colon in member initializer lists" />
    <option name="initializer" hit="Break line before colon in member initializer lists" />
    <option name="line" hit="Break line before colon in member initializer lists" />
    <option name="lists" hit="Break line before colon in member initializer lists" />
    <option name="member" hit="Break line before colon in member initializer lists" />
    <option name="before" hit="Break line before comma in member initializer lists" />
    <option name="break" hit="Break line before comma in member initializer lists" />
    <option name="comma" hit="Break line before comma in member initializer lists" />
    <option name="in" hit="Break line before comma in member initializer lists" />
    <option name="initializer" hit="Break line before comma in member initializer lists" />
    <option name="line" hit="Break line before comma in member initializer lists" />
    <option name="lists" hit="Break line before comma in member initializer lists" />
    <option name="member" hit="Break line before comma in member initializer lists" />
    <option name="before" hit="Break line before the requires-clause" />
    <option name="break" hit="Break line before the requires-clause" />
    <option name="line" hit="Break line before the requires-clause" />
    <option name="requires-clause" hit="Break line before the requires-clause" />
    <option name="the" hit="Break line before the requires-clause" />
    <option name="break" hit="Break line in simple 'case' statement" />
    <option name="case" hit="Break line in simple 'case' statement" />
    <option name="in" hit="Break line in simple 'case' statement" />
    <option name="line" hit="Break line in simple 'case' statement" />
    <option name="simple" hit="Break line in simple 'case' statement" />
    <option name="statement" hit="Break line in simple 'case' statement" />
    <option name="break" hit="Break line in single embedded statement" />
    <option name="embedded" hit="Break line in single embedded statement" />
    <option name="in" hit="Break line in single embedded statement" />
    <option name="line" hit="Break line in single embedded statement" />
    <option name="single" hit="Break line in single embedded statement" />
    <option name="statement" hit="Break line in single embedded statement" />
    <option name="browse" path="General" hit="Browse" />
    <option name="0" path="General" hit="Bundled (from LLVM 18.0.0)" />
    <option name="18" path="General" hit="Bundled (from LLVM 18.0.0)" />
    <option name="bundled" path="General" hit="Bundled (from LLVM 18.0.0)" />
    <option name="from" path="General" hit="Bundled (from LLVM 18.0.0)" />
    <option name="llvm" path="General" hit="Bundled (from LLVM 18.0.0)" />
    <option name="c++" hit="C++" />
    <option name="c++" hit="C++ Formatting Engine" />
    <option name="engine" hit="C++ Formatting Engine" />
    <option name="formatting" hit="C++ Formatting Engine" />
    <option name="arguments" hit="Call arguments" />
    <option name="call" hit="Call arguments" />
    <option name="binary" hit="Chained binary expressions" />
    <option name="chained" hit="Chained binary expressions" />
    <option name="expressions" hit="Chained binary expressions" />
    <option name="calls" hit="Chained method calls" />
    <option name="chained" hit="Chained method calls" />
    <option name="method" hit="Chained method calls" />
    <option name="clang-format" hit="Clang-format executable to use:" />
    <option name="executable" hit="Clang-format executable to use:" />
    <option name="to" hit="Clang-format executable to use:" />
    <option name="use" hit="Clang-format executable to use:" />
    <option name="and" hit="Class and struct fields" />
    <option name="class" hit="Class and struct fields" />
    <option name="fields" hit="Class and struct fields" />
    <option name="struct" hit="Class and struct fields" />
    <option name="and" hit="Class and struct methods" />
    <option name="class" hit="Class and struct methods" />
    <option name="methods" hit="Class and struct methods" />
    <option name="struct" hit="Class and struct methods" />
    <option name="and" hit="Class and struct public fields" />
    <option name="class" hit="Class and struct public fields" />
    <option name="fields" hit="Class and struct public fields" />
    <option name="public" hit="Class and struct public fields" />
    <option name="struct" hit="Class and struct public fields" />
    <option name="and" hit="Classes and structs" />
    <option name="classes" hit="Classes and structs" />
    <option name="structs" hit="Classes and structs" />
    <option name="a" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="also" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="and" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="be" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="c++" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="clang-format" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="clangformat" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="code" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="files" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="for" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="format" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="from" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="is" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="javascript" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="protobuf" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="read" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="settings" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="style" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="styles" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="will" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="yaml-based" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="concepts" hit="Concepts" />
    <option name="continuous" hit="Continuous line indent" />
    <option name="indent" hit="Continuous line indent" />
    <option name="line" hit="Continuous line indent" />
    <option name="custom" path="General" hit="Custom:" />
    <option name="declaration" hit="Declaration names" />
    <option name="names" hit="Declaration names" />
    <option name="declarations" hit="Declarations" />
    <option name="declaration" hit="Declarators in declaration" />
    <option name="declarators" hit="Declarators in declaration" />
    <option name="in" hit="Declarators in declaration" />
    <option name="default" hit="Default pointer initializer" />
    <option name="initializer" hit="Default pointer initializer" />
    <option name="pointer" hit="Default pointer initializer" />
    <option name="elsewhere" hit="Elsewhere" />
    <option name="braces" hit="Empty braces formatting" />
    <option name="empty" hit="Empty braces formatting" />
    <option name="formatting" hit="Empty braces formatting" />
    <option name="and" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="by" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="coding" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="conventions" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="current" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="defined" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="enable" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="engine" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="inconsistent" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="inspection" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="it" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="naming" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="s" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="scheme" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="standard" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="suppress" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="the" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="unreal" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="use" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="will" path="Naming" hit="Enable 'Inconsistent Unreal Engine Naming' inspection. It will suppress the current naming scheme and use naming conventions defined by the Unreal Engine's coding standard." />
    <option name="enable" hit="Enable UE Slate formatting support" />
    <option name="formatting" hit="Enable UE Slate formatting support" />
    <option name="slate" hit="Enable UE Slate formatting support" />
    <option name="support" hit="Enable UE Slate formatting support" />
    <option name="ue" hit="Enable UE Slate formatting support" />
    <option name="enable" path="Naming" hit="Enable inspection" />
    <option name="inspection" path="Naming" hit="Enable inspection" />
    <option name="comments" hit="End comments" />
    <option name="end" hit="End comments" />
    <option name="enum" hit="Enum initializers" />
    <option name="initializers" hit="Enum initializers" />
    <option name="enum" hit="Enum members" />
    <option name="members" hit="Enum members" />
    <option name="enums" hit="Enums" />
    <option name="events" hit="Events" />
    <option name="code" hit="Export Rider Code Style Options" />
    <option name="export" hit="Export Rider Code Style Options" />
    <option name="options" hit="Export Rider Code Style Options" />
    <option name="rider" hit="Export Rider Code Style Options" />
    <option name="style" hit="Export Rider Code Style Options" />
    <option name="declarations" hit="Export declarations" />
    <option name="export" hit="Export declarations" />
    <option name="find" path="General" hit="Find in %PATH% (not found)" />
    <option name="found" path="General" hit="Find in %PATH% (not found)" />
    <option name="in" path="General" hit="Find in %PATH% (not found)" />
    <option name="not" path="General" hit="Find in %PATH% (not found)" />
    <option name="path" path="General" hit="Find in %PATH% (not found)" />
    <option name="argument" hit="First call argument by '('" />
    <option name="by" hit="First call argument by '('" />
    <option name="call" hit="First call argument by '('" />
    <option name="first" hit="First call argument by '('" />
    <option name="first" path="Naming" hit="First_upper" />
    <option name="upper" path="Naming" hit="First_upper" />
    <option name="adjacent" hit="Fix column alignment in adjacent lines" />
    <option name="alignment" hit="Fix column alignment in adjacent lines" />
    <option name="column" hit="Fix column alignment in adjacent lines" />
    <option name="fix" hit="Fix column alignment in adjacent lines" />
    <option name="in" hit="Fix column alignment in adjacent lines" />
    <option name="lines" hit="Fix column alignment in adjacent lines" />
    <option name="bool" hit="For numeric types (int, bool, char, …)" />
    <option name="char" hit="For numeric types (int, bool, char, …)" />
    <option name="for" hit="For numeric types (int, bool, char, …)" />
    <option name="int" hit="For numeric types (int, bool, char, …)" />
    <option name="numeric" hit="For numeric types (int, bool, char, …)" />
    <option name="types" hit="For numeric types (int, bool, char, …)" />
    <option name="declaration" hit="Function declaration" />
    <option name="function" hit="Function declaration" />
    <option name="declaration" hit="Function declaration syntax" />
    <option name="function" hit="Function declaration syntax" />
    <option name="syntax" hit="Function declaration syntax" />
    <option name="function" hit="Function parameters" />
    <option name="parameters" hit="Function parameters" />
    <option name="general" hit="General" />
    <option name="constants" hit="Global constants" />
    <option name="global" hit="Global constants" />
    <option name="functions" hit="Global functions" />
    <option name="global" hit="Global functions" />
    <option name="global" hit="Global variables" />
    <option name="variables" hit="Global variables" />
    <option name="at" hit="Hard wrap at" />
    <option name="hard" hit="Hard wrap at" />
    <option name="wrap" hit="Hard wrap at" />
    <option name="align" hit="How to align when tabs are used for indents" />
    <option name="are" hit="How to align when tabs are used for indents" />
    <option name="for" hit="How to align when tabs are used for indents" />
    <option name="how" hit="How to align when tabs are used for indents" />
    <option name="indents" hit="How to align when tabs are used for indents" />
    <option name="tabs" hit="How to align when tabs are used for indents" />
    <option name="to" hit="How to align when tabs are used for indents" />
    <option name="used" hit="How to align when tabs are used for indents" />
    <option name="when" hit="How to align when tabs are used for indents" />
    <option name="do-while" hit="In 'do-while' statement" />
    <option name="in" hit="In 'do-while' statement" />
    <option name="statement" hit="In 'do-while' statement" />
    <option name="for" hit="In 'for' statement" />
    <option name="in" hit="In 'for' statement" />
    <option name="statement" hit="In 'for' statement" />
    <option name="if" hit="In 'if' statement" />
    <option name="in" hit="In 'if' statement" />
    <option name="statement" hit="In 'if' statement" />
    <option name="in" hit="In 'while' statement" />
    <option name="statement" hit="In 'while' statement" />
    <option name="while" hit="In 'while' statement" />
    <option name="control" hit="In Control Statements" />
    <option name="in" hit="In Control Statements" />
    <option name="statements" hit="In Control Statements" />
    <option name="declarations" hit="In Declarations" />
    <option name="in" hit="In Declarations" />
    <option name="expressions" hit="In Expressions" />
    <option name="in" hit="In Expressions" />
    <option name="after" hit="In ternary operator '? :' after '?'" />
    <option name="in" hit="In ternary operator '? :' after '?'" />
    <option name="operator" hit="In ternary operator '? :' after '?'" />
    <option name="ternary" hit="In ternary operator '? :' after '?'" />
    <option name="before" hit="In ternary operator '? :' before '?' " />
    <option name="in" hit="In ternary operator '? :' before '?' " />
    <option name="operator" hit="In ternary operator '? :' before '?' " />
    <option name="ternary" hit="In ternary operator '? :' before '?' " />
    <option name="directives" hit="Include Directives" />
    <option name="include" hit="Include Directives" />
    <option name="case" hit="Indent 'case' from 'switch'" />
    <option name="from" hit="Indent 'case' from 'switch'" />
    <option name="indent" hit="Indent 'case' from 'switch'" />
    <option name="switch" hit="Indent 'case' from 'switch'" />
    <option name="c++" hit="Indent C++/CLI generic constraints" />
    <option name="cli" hit="Indent C++/CLI generic constraints" />
    <option name="constraints" hit="Indent C++/CLI generic constraints" />
    <option name="generic" hit="Indent C++/CLI generic constraints" />
    <option name="indent" hit="Indent C++/CLI generic constraints" />
    <option name="access" hit="Indent access specifier from class" />
    <option name="class" hit="Indent access specifier from class" />
    <option name="from" hit="Indent access specifier from class" />
    <option name="indent" hit="Indent access specifier from class" />
    <option name="specifier" hit="Indent access specifier from class" />
    <option name="aligned" hit="Indent aligned ?: operator" />
    <option name="indent" hit="Indent aligned ?: operator" />
    <option name="operator" hit="Indent aligned ?: operator" />
    <option name="access" hit="Indent class member from access specifier" />
    <option name="class" hit="Indent class member from access specifier" />
    <option name="from" hit="Indent class member from access specifier" />
    <option name="indent" hit="Indent class member from access specifier" />
    <option name="member" hit="Indent class member from access specifier" />
    <option name="specifier" hit="Indent class member from access specifier" />
    <option name="at" hit="Indent comments started at the first column" />
    <option name="column" hit="Indent comments started at the first column" />
    <option name="comments" hit="Indent comments started at the first column" />
    <option name="first" hit="Indent comments started at the first column" />
    <option name="indent" hit="Indent comments started at the first column" />
    <option name="started" hit="Indent comments started at the first column" />
    <option name="the" hit="Indent comments started at the first column" />
    <option name="block" hit="Indent export declaration block members" />
    <option name="declaration" hit="Indent export declaration block members" />
    <option name="export" hit="Indent export declaration block members" />
    <option name="indent" hit="Indent export declaration block members" />
    <option name="members" hit="Indent export declaration block members" />
    <option name="declarations" hit="Indent function declarations' parentheses" />
    <option name="function" hit="Indent function declarations' parentheses" />
    <option name="indent" hit="Indent function declarations' parentheses" />
    <option name="parentheses" hit="Indent function declarations' parentheses" />
    <option name="goto" hit="Indent goto labels" />
    <option name="indent" hit="Indent goto labels" />
    <option name="labels" hit="Indent goto labels" />
    <option name="a" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="after" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="declaration" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="definition" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="function" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="if" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="indent" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="is" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="or" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="the" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="type" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="wrapped" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="block" hit="Indent linkage specification block members" />
    <option name="indent" hit="Indent linkage specification block members" />
    <option name="linkage" hit="Indent linkage specification block members" />
    <option name="members" hit="Indent linkage specification block members" />
    <option name="specification" hit="Indent linkage specification block members" />
    <option name="indent" hit="Indent member initializer list" />
    <option name="initializer" hit="Indent member initializer list" />
    <option name="list" hit="Indent member initializer list" />
    <option name="member" hit="Indent member initializer list" />
    <option name="calls" hit="Indent method calls' parentheses" />
    <option name="indent" hit="Indent method calls' parentheses" />
    <option name="method" hit="Indent method calls' parentheses" />
    <option name="parentheses" hit="Indent method calls' parentheses" />
    <option name="indent" hit="Indent namespace members" />
    <option name="members" hit="Indent namespace members" />
    <option name="namespace" hit="Indent namespace members" />
    <option name="indent" hit="Indent size" />
    <option name="size" hit="Indent size" />
    <option name="etc" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="for" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="if" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="indent" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="parentheses" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="statement" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="while" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="indent" hit="Indent style" />
    <option name="style" hit="Indent style" />
    <option name="indentation" hit="Indentation" />
    <option name="alignment" path="Indentation and Alignment" hit="Indentation and Alignment" />
    <option name="and" path="Indentation and Alignment" hit="Indentation and Alignment" />
    <option name="indentation" path="Indentation and Alignment" hit="Indentation and Alignment" />
    <option name="initialization" hit="Initialization" />
    <option name="arguments" hit="Initializer list arguments" />
    <option name="initializer" hit="Initializer list arguments" />
    <option name="list" hit="Initializer list arguments" />
    <option name="arrangement" hit="Keep existing arrangement of enumeration" />
    <option name="enumeration" hit="Keep existing arrangement of enumeration" />
    <option name="existing" hit="Keep existing arrangement of enumeration" />
    <option name="keep" hit="Keep existing arrangement of enumeration" />
    <option name="of" hit="Keep existing arrangement of enumeration" />
    <option name="breaks" hit="Keep existing line breaks" />
    <option name="existing" hit="Keep existing line breaks" />
    <option name="keep" hit="Keep existing line breaks" />
    <option name="line" hit="Keep existing line breaks" />
    <option name="blank" hit="Keep max blank lines in code" />
    <option name="code" hit="Keep max blank lines in code" />
    <option name="in" hit="Keep max blank lines in code" />
    <option name="keep" hit="Keep max blank lines in code" />
    <option name="lines" hit="Keep max blank lines in code" />
    <option name="max" hit="Keep max blank lines in code" />
    <option name="blank" hit="Keep max blank lines in declarations" />
    <option name="declarations" hit="Keep max blank lines in declarations" />
    <option name="in" hit="Keep max blank lines in declarations" />
    <option name="keep" hit="Keep max blank lines in declarations" />
    <option name="lines" hit="Keep max blank lines in declarations" />
    <option name="max" hit="Keep max blank lines in declarations" />
    <option name="compound" hit="Keep simple compound statements in one line" />
    <option name="in" hit="Keep simple compound statements in one line" />
    <option name="keep" hit="Keep simple compound statements in one line" />
    <option name="line" hit="Keep simple compound statements in one line" />
    <option name="one" hit="Keep simple compound statements in one line" />
    <option name="simple" hit="Keep simple compound statements in one line" />
    <option name="statements" hit="Keep simple compound statements in one line" />
    <option name="expression" hit="Lambda expression" />
    <option name="lambda" hit="Lambda expression" />
    <option name="and" path="Line Breaks and Wrapping" hit="Line Breaks and Wrapping" />
    <option name="breaks" path="Line Breaks and Wrapping" hit="Line Breaks and Wrapping" />
    <option name="line" path="Line Breaks and Wrapping" hit="Line Breaks and Wrapping" />
    <option name="wrapping" path="Line Breaks and Wrapping" hit="Line Breaks and Wrapping" />
    <option name="line" hit="Line Wrapping" />
    <option name="wrapping" hit="Line Wrapping" />
    <option name="at" hit="Line feed at end of file" />
    <option name="end" hit="Line feed at end of file" />
    <option name="feed" hit="Line feed at end of file" />
    <option name="file" hit="Line feed at end of file" />
    <option name="line" hit="Line feed at end of file" />
    <option name="of" hit="Line feed at end of file" />
    <option name="linkage" hit="Linkage specifications" />
    <option name="specifications" hit="Linkage specifications" />
    <option name="loading" hit="Loading..." />
    <option name="local" hit="Local variables" />
    <option name="variables" hit="Local variables" />
    <option name="macros" hit="Macros" />
    <option name="a" hit="Max enumeration members on a single line" />
    <option name="enumeration" hit="Max enumeration members on a single line" />
    <option name="line" hit="Max enumeration members on a single line" />
    <option name="max" hit="Max enumeration members on a single line" />
    <option name="members" hit="Max enumeration members on a single line" />
    <option name="on" hit="Max enumeration members on a single line" />
    <option name="single" hit="Max enumeration members on a single line" />
    <option name="in" hit="Member initializers in member initializer lists" />
    <option name="initializer" hit="Member initializers in member initializer lists" />
    <option name="initializers" hit="Member initializers in member initializer lists" />
    <option name="lists" hit="Member initializers in member initializer lists" />
    <option name="member" hit="Member initializers in member initializer lists" />
    <option name="declaration" hit="Namespace declaration" />
    <option name="namespace" hit="Namespace declaration" />
    <option name="namespaces" hit="Namespaces" />
    <option name="naming" path="Naming" hit="Naming" />
    <option name="namespaces" hit="Nested namespaces" />
    <option name="nested" hit="Nested namespaces" />
    <option name="cv-qualifiers" hit="Order of cv-qualifiers" />
    <option name="of" hit="Order of cv-qualifiers" />
    <option name="order" hit="Order of cv-qualifiers" />
    <option name="other" hit="Other" />
    <option name="braces" hit="Other braces" />
    <option name="other" hit="Other braces" />
    <option name="constants" hit="Other constants" />
    <option name="other" hit="Other constants" />
    <option name="and" hit="Other statements and blocks" />
    <option name="blocks" hit="Other statements and blocks" />
    <option name="other" hit="Other statements and blocks" />
    <option name="statements" hit="Other statements and blocks" />
    <option name="-" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="and" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="calls" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="chained" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="in" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="method" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="outdent" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="commas" hit="Outdent commas" />
    <option name="outdent" hit="Outdent commas" />
    <option name="functions" hit="Overriding Functions" />
    <option name="overriding" hit="Overriding Functions" />
    <option name="parameters" hit="Parameters" />
    <option name="a" hit="Place 'catch' on a new line after a compound statement" />
    <option name="after" hit="Place 'catch' on a new line after a compound statement" />
    <option name="catch" hit="Place 'catch' on a new line after a compound statement" />
    <option name="compound" hit="Place 'catch' on a new line after a compound statement" />
    <option name="line" hit="Place 'catch' on a new line after a compound statement" />
    <option name="new" hit="Place 'catch' on a new line after a compound statement" />
    <option name="on" hit="Place 'catch' on a new line after a compound statement" />
    <option name="place" hit="Place 'catch' on a new line after a compound statement" />
    <option name="statement" hit="Place 'catch' on a new line after a compound statement" />
    <option name="a" hit="Place 'else' on a new line after a compound statement" />
    <option name="after" hit="Place 'else' on a new line after a compound statement" />
    <option name="compound" hit="Place 'else' on a new line after a compound statement" />
    <option name="else" hit="Place 'else' on a new line after a compound statement" />
    <option name="line" hit="Place 'else' on a new line after a compound statement" />
    <option name="new" hit="Place 'else' on a new line after a compound statement" />
    <option name="on" hit="Place 'else' on a new line after a compound statement" />
    <option name="place" hit="Place 'else' on a new line after a compound statement" />
    <option name="statement" hit="Place 'else' on a new line after a compound statement" />
    <option name="a" hit="Place 'while' on a new line after a compound statement" />
    <option name="after" hit="Place 'while' on a new line after a compound statement" />
    <option name="compound" hit="Place 'while' on a new line after a compound statement" />
    <option name="line" hit="Place 'while' on a new line after a compound statement" />
    <option name="new" hit="Place 'while' on a new line after a compound statement" />
    <option name="on" hit="Place 'while' on a new line after a compound statement" />
    <option name="place" hit="Place 'while' on a new line after a compound statement" />
    <option name="statement" hit="Place 'while' on a new line after a compound statement" />
    <option name="while" hit="Place 'while' on a new line after a compound statement" />
    <option name="at" hit="Place comments at the first column when commenting out code" />
    <option name="code" hit="Place comments at the first column when commenting out code" />
    <option name="column" hit="Place comments at the first column when commenting out code" />
    <option name="commenting" hit="Place comments at the first column when commenting out code" />
    <option name="comments" hit="Place comments at the first column when commenting out code" />
    <option name="first" hit="Place comments at the first column when commenting out code" />
    <option name="out" hit="Place comments at the first column when commenting out code" />
    <option name="place" hit="Place comments at the first column when commenting out code" />
    <option name="the" hit="Place comments at the first column when commenting out code" />
    <option name="when" hit="Place comments at the first column when commenting out code" />
    <option name="enumeration" hit="Place enumeration on single line" />
    <option name="line" hit="Place enumeration on single line" />
    <option name="on" hit="Place enumeration on single line" />
    <option name="place" hit="Place enumeration on single line" />
    <option name="single" hit="Place enumeration on single line" />
    <option name="definitions" hit="Place namespace definitions on the same line" />
    <option name="line" hit="Place namespace definitions on the same line" />
    <option name="namespace" hit="Place namespace definitions on the same line" />
    <option name="on" hit="Place namespace definitions on the same line" />
    <option name="place" hit="Place namespace definitions on the same line" />
    <option name="same" hit="Place namespace definitions on the same line" />
    <option name="the" hit="Place namespace definitions on the same line" />
    <option name="line" hit="Place on New Line" />
    <option name="new" hit="Place on New Line" />
    <option name="on" hit="Place on New Line" />
    <option name="place" hit="Place on New Line" />
    <option name="cv-qualifiers" hit="Placement of cv-qualifiers" />
    <option name="of" hit="Placement of cv-qualifiers" />
    <option name="placement" hit="Placement of cv-qualifiers" />
    <option name="cv-qualifiers" hit="Position of cv-Qualifiers" />
    <option name="of" hit="Position of cv-Qualifiers" />
    <option name="position" hit="Position of cv-Qualifiers" />
    <option name="declarations" hit="Prefer to use forward declarations if possible" />
    <option name="forward" hit="Prefer to use forward declarations if possible" />
    <option name="if" hit="Prefer to use forward declarations if possible" />
    <option name="possible" hit="Prefer to use forward declarations if possible" />
    <option name="prefer" hit="Prefer to use forward declarations if possible" />
    <option name="to" hit="Prefer to use forward declarations if possible" />
    <option name="use" hit="Prefer to use forward declarations if possible" />
    <option name="after" hit="Prefer to wrap after '(' in declaration" />
    <option name="declaration" hit="Prefer to wrap after '(' in declaration" />
    <option name="in" hit="Prefer to wrap after '(' in declaration" />
    <option name="prefer" hit="Prefer to wrap after '(' in declaration" />
    <option name="to" hit="Prefer to wrap after '(' in declaration" />
    <option name="wrap" hit="Prefer to wrap after '(' in declaration" />
    <option name="after" hit="Prefer to wrap after '(' in invocation" />
    <option name="in" hit="Prefer to wrap after '(' in invocation" />
    <option name="invocation" hit="Prefer to wrap after '(' in invocation" />
    <option name="prefer" hit="Prefer to wrap after '(' in invocation" />
    <option name="to" hit="Prefer to wrap after '(' in invocation" />
    <option name="wrap" hit="Prefer to wrap after '(' in invocation" />
    <option name="after" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="in" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="initializer" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="lists" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="prefer" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="to" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="wrap" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="before" hit="Prefer to wrap before '(' in declaration" />
    <option name="declaration" hit="Prefer to wrap before '(' in declaration" />
    <option name="in" hit="Prefer to wrap before '(' in declaration" />
    <option name="prefer" hit="Prefer to wrap before '(' in declaration" />
    <option name="to" hit="Prefer to wrap before '(' in declaration" />
    <option name="wrap" hit="Prefer to wrap before '(' in declaration" />
    <option name="before" hit="Prefer to wrap before '(' in invocation" />
    <option name="in" hit="Prefer to wrap before '(' in invocation" />
    <option name="invocation" hit="Prefer to wrap before '(' in invocation" />
    <option name="prefer" hit="Prefer to wrap before '(' in invocation" />
    <option name="to" hit="Prefer to wrap before '(' in invocation" />
    <option name="wrap" hit="Prefer to wrap before '(' in invocation" />
    <option name="before" hit="Prefer to wrap before ')' in declaration" />
    <option name="declaration" hit="Prefer to wrap before ')' in declaration" />
    <option name="in" hit="Prefer to wrap before ')' in declaration" />
    <option name="prefer" hit="Prefer to wrap before ')' in declaration" />
    <option name="to" hit="Prefer to wrap before ')' in declaration" />
    <option name="wrap" hit="Prefer to wrap before ')' in declaration" />
    <option name="before" hit="Prefer to wrap before ')' in invocation" />
    <option name="in" hit="Prefer to wrap before ')' in invocation" />
    <option name="invocation" hit="Prefer to wrap before ')' in invocation" />
    <option name="prefer" hit="Prefer to wrap before ')' in invocation" />
    <option name="to" hit="Prefer to wrap before ')' in invocation" />
    <option name="wrap" hit="Prefer to wrap before ')' in invocation" />
    <option name="before" hit="Prefer to wrap before ','" />
    <option name="prefer" hit="Prefer to wrap before ','" />
    <option name="to" hit="Prefer to wrap before ','" />
    <option name="wrap" hit="Prefer to wrap before ','" />
    <option name="base" hit="Prefer to wrap before ',' in base clause" />
    <option name="before" hit="Prefer to wrap before ',' in base clause" />
    <option name="clause" hit="Prefer to wrap before ',' in base clause" />
    <option name="in" hit="Prefer to wrap before ',' in base clause" />
    <option name="prefer" hit="Prefer to wrap before ',' in base clause" />
    <option name="to" hit="Prefer to wrap before ',' in base clause" />
    <option name="wrap" hit="Prefer to wrap before ',' in base clause" />
    <option name="before" hit="Prefer to wrap before ':'" />
    <option name="prefer" hit="Prefer to wrap before ':'" />
    <option name="to" hit="Prefer to wrap before ':'" />
    <option name="wrap" hit="Prefer to wrap before ':'" />
    <option name="and" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="before" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="expressions" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="in" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="prefer" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="ternary" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="to" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="wrap" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="before" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="in" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="initializer" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="lists" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="prefer" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="to" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="wrap" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="before" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="c++" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="cli" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="constraint" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="first" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="generic" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="prefer" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="to" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="wrap" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="aliases" hit="Prefer typedefs or type aliases" />
    <option name="or" hit="Prefer typedefs or type aliases" />
    <option name="prefer" hit="Prefer typedefs or type aliases" />
    <option name="type" hit="Prefer typedefs or type aliases" />
    <option name="typedefs" hit="Prefer typedefs or type aliases" />
    <option name="data" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="in" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="initialization" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="initializers" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="member" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="non-static" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="prefer" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="uniform" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="prefix" path="Naming" hit="Prefix: " />
    <option name="directives" hit="Preprocessor directives indenting" />
    <option name="indenting" hit="Preprocessor directives indenting" />
    <option name="preprocessor" hit="Preprocessor directives indenting" />
    <option name="existing" hit="Preserve Existing Formatting" />
    <option name="formatting" hit="Preserve Existing Formatting" />
    <option name="preserve" hit="Preserve Existing Formatting" />
    <option name="before" hit="Preserve spaces before end of line comment" />
    <option name="comment" hit="Preserve spaces before end of line comment" />
    <option name="end" hit="Preserve spaces before end of line comment" />
    <option name="line" hit="Preserve spaces before end of line comment" />
    <option name="of" hit="Preserve spaces before end of line comment" />
    <option name="preserve" hit="Preserve spaces before end of line comment" />
    <option name="spaces" hit="Preserve spaces before end of line comment" />
    <option name="properties" hit="Properties" />
    <option name="clang-format" hit="Read code style from .clang-format files" />
    <option name="code" hit="Read code style from .clang-format files" />
    <option name="files" hit="Read code style from .clang-format files" />
    <option name="from" hit="Read code style from .clang-format files" />
    <option name="read" hit="Read code style from .clang-format files" />
    <option name="style" hit="Read code style from .clang-format files" />
    <option name="a" hit="Regular expression for macros ending a block" />
    <option name="block" hit="Regular expression for macros ending a block" />
    <option name="ending" hit="Regular expression for macros ending a block" />
    <option name="expression" hit="Regular expression for macros ending a block" />
    <option name="for" hit="Regular expression for macros ending a block" />
    <option name="macros" hit="Regular expression for macros ending a block" />
    <option name="regular" hit="Regular expression for macros ending a block" />
    <option name="a" hit="Regular expression for macros starting a block" />
    <option name="block" hit="Regular expression for macros starting a block" />
    <option name="expression" hit="Regular expression for macros starting a block" />
    <option name="for" hit="Regular expression for macros starting a block" />
    <option name="macros" hit="Regular expression for macros starting a block" />
    <option name="regular" hit="Regular expression for macros starting a block" />
    <option name="starting" hit="Regular expression for macros starting a block" />
    <option name="after" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="and" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="before" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="blank" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="code" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="in" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="remove" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="after" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="and" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="before" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="blank" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="declarations" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="in" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="remove" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="braces" hit="Remove redundant braces" />
    <option name="redundant" hit="Remove redundant braces" />
    <option name="remove" hit="Remove redundant braces" />
    <option name="expressions" hit="Requires expressions" />
    <option name="requires" hit="Requires expressions" />
    <option name="formatter" path="General" hit="Rider formatter" />
    <option name="rider" path="General" hit="Rider formatter" />
    <option name="format" hit="Slate Format Options" />
    <option name="options" hit="Slate Format Options" />
    <option name="slate" hit="Slate Format Options" />
    <option name="directives" hit="Sort include directives" />
    <option name="include" hit="Sort include directives" />
    <option name="sort" hit="Sort include directives" />
    <option name="by" hit="Sort member initializers by the order of initialization" />
    <option name="initialization" hit="Sort member initializers by the order of initialization" />
    <option name="initializers" hit="Sort member initializers by the order of initialization" />
    <option name="member" hit="Sort member initializers by the order of initialization" />
    <option name="of" hit="Sort member initializers by the order of initialization" />
    <option name="order" hit="Sort member initializers by the order of initialization" />
    <option name="sort" hit="Sort member initializers by the order of initialization" />
    <option name="the" hit="Sort member initializers by the order of initialization" />
    <option name="spaces" path="Spaces" hit="Spaces" />
    <option name="destructors" hit="Specifiers to use on overriding destructors" />
    <option name="on" hit="Specifiers to use on overriding destructors" />
    <option name="overriding" hit="Specifiers to use on overriding destructors" />
    <option name="specifiers" hit="Specifiers to use on overriding destructors" />
    <option name="to" hit="Specifiers to use on overriding destructors" />
    <option name="use" hit="Specifiers to use on overriding destructors" />
    <option name="functions" hit="Specifiers to use on overriding functions" />
    <option name="on" hit="Specifiers to use on overriding functions" />
    <option name="overriding" hit="Specifiers to use on overriding functions" />
    <option name="specifiers" hit="Specifiers to use on overriding functions" />
    <option name="to" hit="Specifiers to use on overriding functions" />
    <option name="use" hit="Specifiers to use on overriding functions" />
    <option name="style" path="Naming" hit="Style: " />
    <option name="suffix" path="Naming" hit="Suffix: " />
    <option name="auto" hit="Suggest Using 'auto' in Variable Types" />
    <option name="in" hit="Suggest Using 'auto' in Variable Types" />
    <option name="suggest" hit="Suggest Using 'auto' in Variable Types" />
    <option name="types" hit="Suggest Using 'auto' in Variable Types" />
    <option name="using" hit="Suggest Using 'auto' in Variable Types" />
    <option name="variable" hit="Suggest Using 'auto' in Variable Types" />
    <option name="style" path="Syntax Style" hit="Syntax Style" />
    <option name="syntax" path="Syntax Style" hit="Syntax Style" />
    <option name="tab" hit="Tab width" />
    <option name="width" hit="Tab width" />
    <option name="and" hit="Tabs and Indents" />
    <option name="indents" hit="Tabs and Indents" />
    <option name="tabs" hit="Tabs and Indents" />
    <option name="arguments" hit="Template arguments" />
    <option name="template" hit="Template arguments" />
    <option name="parameters" hit="Template parameters" />
    <option name="template" hit="Template parameters" />
    <option name="declaration" hit="Template parameters in template declaration" />
    <option name="in" hit="Template parameters in template declaration" />
    <option name="parameters" hit="Template parameters in template declaration" />
    <option name="template" hit="Template parameters in template declaration" />
    <option name="declaration" hit="Type declaration" />
    <option name="type" hit="Type declaration" />
    <option name="directives" hit="Type of slashes to use in include directives" />
    <option name="in" hit="Type of slashes to use in include directives" />
    <option name="include" hit="Type of slashes to use in include directives" />
    <option name="of" hit="Type of slashes to use in include directives" />
    <option name="slashes" hit="Type of slashes to use in include directives" />
    <option name="to" hit="Type of slashes to use in include directives" />
    <option name="type" hit="Type of slashes to use in include directives" />
    <option name="use" hit="Type of slashes to use in include directives" />
    <option name="typedefs" hit="Typedefs" />
    <option name="members" hit="Union members" />
    <option name="union" hit="Union members" />
    <option name="unions" hit="Unions" />
    <option name="engine" path="Unreal Engine" hit="Unreal Engine" />
    <option name="unreal" path="Unreal Engine" hit="Unreal Engine" />
    <option name="uppercamelcase" path="Naming" hit="UpperCamelCase" />
    <option name="underscoretolerant" path="Naming" hit="UpperCamelCase_UnderscoreTolerant" />
    <option name="uppercamelcase" path="Naming" hit="UpperCamelCase_UnderscoreTolerant" />
    <option name="underscoretolerant" path="Naming" hit="UpperCamelCase_underscoreTolerant" />
    <option name="uppercamelcase" path="Naming" hit="UpperCamelCase_underscoreTolerant" />
    <option name="also" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="and" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="autodetection" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="be" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="can" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="clang-format" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="code" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="configuration" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="configured" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="files" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="format" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="formatter" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="formatting" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="from" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="inspections" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="it" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="manually" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="or" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="read" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="rider" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="run" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="settings" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="to" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="use" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="via" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="angle" hit="Use angle brackets instead of quotes" />
    <option name="brackets" hit="Use angle brackets instead of quotes" />
    <option name="instead" hit="Use angle brackets instead of quotes" />
    <option name="of" hit="Use angle brackets instead of quotes" />
    <option name="quotes" hit="Use angle brackets instead of quotes" />
    <option name="use" hit="Use angle brackets instead of quotes" />
    <option name="and" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="be" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="bundled" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="clang-format" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="code" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="disabled" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="effect" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="external" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="format" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="formatting" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="inspections" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="not" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="options" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="or" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="rider" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="take" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="to" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="use" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="will" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="and" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="continuous" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="declaration" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="function" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="in" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="indent" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="invocation" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="line" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="parentheses" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="use" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="continuous" hit="Use continuous line indent in initializer lists" />
    <option name="in" hit="Use continuous line indent in initializer lists" />
    <option name="indent" hit="Use continuous line indent in initializer lists" />
    <option name="initializer" hit="Use continuous line indent in initializer lists" />
    <option name="line" hit="Use continuous line indent in initializer lists" />
    <option name="lists" hit="Use continuous line indent in initializer lists" />
    <option name="use" hit="Use continuous line indent in initializer lists" />
    <option name="file" hit="Use paths relative to the source file" />
    <option name="paths" hit="Use paths relative to the source file" />
    <option name="relative" hit="Use paths relative to the source file" />
    <option name="source" hit="Use paths relative to the source file" />
    <option name="the" hit="Use paths relative to the source file" />
    <option name="to" hit="Use paths relative to the source file" />
    <option name="use" hit="Use paths relative to the source file" />
    <option name="in" hit="Use uniform initialization in member initializers" />
    <option name="initialization" hit="Use uniform initialization in member initializers" />
    <option name="initializers" hit="Use uniform initialization in member initializers" />
    <option name="member" hit="Use uniform initialization in member initializers" />
    <option name="uniform" hit="Use uniform initialization in member initializers" />
    <option name="use" hit="Use uniform initialization in member initializers" />
    <option name="angle" hit="Within angle brackets in template arguments" />
    <option name="arguments" hit="Within angle brackets in template arguments" />
    <option name="brackets" hit="Within angle brackets in template arguments" />
    <option name="in" hit="Within angle brackets in template arguments" />
    <option name="template" hit="Within angle brackets in template arguments" />
    <option name="within" hit="Within angle brackets in template arguments" />
    <option name="angle" hit="Within angle brackets in template parameters" />
    <option name="brackets" hit="Within angle brackets in template parameters" />
    <option name="in" hit="Within angle brackets in template parameters" />
    <option name="parameters" hit="Within angle brackets in template parameters" />
    <option name="template" hit="Within angle brackets in template parameters" />
    <option name="within" hit="Within angle brackets in template parameters" />
    <option name="array" hit="Within array subscript brackets" />
    <option name="brackets" hit="Within array subscript brackets" />
    <option name="subscript" hit="Within array subscript brackets" />
    <option name="within" hit="Within array subscript brackets" />
    <option name="angle" hit="Within empty angle brackets in template parameters" />
    <option name="brackets" hit="Within empty angle brackets in template parameters" />
    <option name="empty" hit="Within empty angle brackets in template parameters" />
    <option name="in" hit="Within empty angle brackets in template parameters" />
    <option name="parameters" hit="Within empty angle brackets in template parameters" />
    <option name="template" hit="Within empty angle brackets in template parameters" />
    <option name="within" hit="Within empty angle brackets in template parameters" />
    <option name="blocks" hit="Within empty blocks" />
    <option name="empty" hit="Within empty blocks" />
    <option name="within" hit="Within empty blocks" />
    <option name="and" hit="Within empty parentheses in function call and initialization" />
    <option name="call" hit="Within empty parentheses in function call and initialization" />
    <option name="empty" hit="Within empty parentheses in function call and initialization" />
    <option name="function" hit="Within empty parentheses in function call and initialization" />
    <option name="in" hit="Within empty parentheses in function call and initialization" />
    <option name="initialization" hit="Within empty parentheses in function call and initialization" />
    <option name="parentheses" hit="Within empty parentheses in function call and initialization" />
    <option name="within" hit="Within empty parentheses in function call and initialization" />
    <option name="empty" hit="Within empty parentheses in function parameters" />
    <option name="function" hit="Within empty parentheses in function parameters" />
    <option name="in" hit="Within empty parentheses in function parameters" />
    <option name="parameters" hit="Within empty parentheses in function parameters" />
    <option name="parentheses" hit="Within empty parentheses in function parameters" />
    <option name="within" hit="Within empty parentheses in function parameters" />
    <option name="braces" hit="Within empty uniform initialization braces" />
    <option name="empty" hit="Within empty uniform initialization braces" />
    <option name="initialization" hit="Within empty uniform initialization braces" />
    <option name="uniform" hit="Within empty uniform initialization braces" />
    <option name="within" hit="Within empty uniform initialization braces" />
    <option name="parentheses" hit="Within parentheses" />
    <option name="within" hit="Within parentheses" />
    <option name="cast" hit="Within parentheses in cast expressions" />
    <option name="expressions" hit="Within parentheses in cast expressions" />
    <option name="in" hit="Within parentheses in cast expressions" />
    <option name="parentheses" hit="Within parentheses in cast expressions" />
    <option name="within" hit="Within parentheses in cast expressions" />
    <option name="and" hit="Within parentheses in function call and initialization" />
    <option name="call" hit="Within parentheses in function call and initialization" />
    <option name="function" hit="Within parentheses in function call and initialization" />
    <option name="in" hit="Within parentheses in function call and initialization" />
    <option name="initialization" hit="Within parentheses in function call and initialization" />
    <option name="parentheses" hit="Within parentheses in function call and initialization" />
    <option name="within" hit="Within parentheses in function call and initialization" />
    <option name="function" hit="Within parentheses in function parameters" />
    <option name="in" hit="Within parentheses in function parameters" />
    <option name="parameters" hit="Within parentheses in function parameters" />
    <option name="parentheses" hit="Within parentheses in function parameters" />
    <option name="within" hit="Within parentheses in function parameters" />
    <option name="braces" hit="Within uniform initialization braces" />
    <option name="initialization" hit="Within uniform initialization braces" />
    <option name="uniform" hit="Within uniform initialization braces" />
    <option name="within" hit="Within uniform initialization braces" />
    <option name="binary" hit="Wrap Slate binary expressions" />
    <option name="expressions" hit="Wrap Slate binary expressions" />
    <option name="slate" hit="Wrap Slate binary expressions" />
    <option name="wrap" hit="Wrap Slate binary expressions" />
    <option name="calls" hit="Wrap Slate chained calls" />
    <option name="chained" hit="Wrap Slate chained calls" />
    <option name="slate" hit="Wrap Slate chained calls" />
    <option name="wrap" hit="Wrap Slate chained calls" />
    <option name="base" hit="Wrap base classes list" />
    <option name="classes" hit="Wrap base classes list" />
    <option name="list" hit="Wrap base classes list" />
    <option name="wrap" hit="Wrap base classes list" />
    <option name="braced" hit="Wrap braced initializer list" />
    <option name="initializer" hit="Wrap braced initializer list" />
    <option name="list" hit="Wrap braced initializer list" />
    <option name="wrap" hit="Wrap braced initializer list" />
    <option name="constructor" hit="Wrap constructor initializer" />
    <option name="initializer" hit="Wrap constructor initializer" />
    <option name="wrap" hit="Wrap constructor initializer" />
    <option name="definition" hit="Wrap enum definition" />
    <option name="enum" hit="Wrap enum definition" />
    <option name="wrap" hit="Wrap enum definition" />
    <option name="formal" hit="Wrap formal parameters" />
    <option name="parameters" hit="Wrap formal parameters" />
    <option name="wrap" hit="Wrap formal parameters" />
    <option name="arguments" hit="Wrap invocation arguments" />
    <option name="invocation" hit="Wrap invocation arguments" />
    <option name="wrap" hit="Wrap invocation arguments" />
    <option name="lines" hit="Wrap long lines" />
    <option name="long" hit="Wrap long lines" />
    <option name="wrap" hit="Wrap long lines" />
    <option name="c++" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="cli" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="constraints" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="generic" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="multiple" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="wrap" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="expression" hit="Wrap ternary expression" />
    <option name="ternary" hit="Wrap ternary expression" />
    <option name="wrap" hit="Wrap ternary expression" />
    <option name="clang-format" path="General" hit="Write current style to .clang-format " />
    <option name="current" path="General" hit="Write current style to .clang-format " />
    <option name="style" path="General" hit="Write current style to .clang-format " />
    <option name="to" path="General" hit="Write current style to .clang-format " />
    <option name="write" path="General" hit="Write current style to .clang-format " />
    <option name="clang-format" hit="Write current style to .clang-format…" />
    <option name="current" hit="Write current style to .clang-format…" />
    <option name="style" hit="Write current style to .clang-format…" />
    <option name="to" hit="Write current style to .clang-format…" />
    <option name="write" hit="Write current style to .clang-format…" />
    <option name="all" path="Naming" hit="all_lower" />
    <option name="lower" path="Naming" hit="all_lower" />
    <option name="iddqd" hit="iddqd" />
    <option name="lowercamelcase" path="Naming" hit="lowerCamelCase" />
    <option name="lowercamelcase" path="Naming" hit="lowerCamelCase_UnderscoreTolerant" />
    <option name="underscoretolerant" path="Naming" hit="lowerCamelCase_UnderscoreTolerant" />
    <option name="lowercamelcase" path="Naming" hit="lowerCamelCase_underscoreTolerant" />
    <option name="underscoretolerant" path="Naming" hit="lowerCamelCase_underscoreTolerant" />
    <option name="" path="Indentation and Alignment" hit="?: operator" />
    <option name="operator" path="Indentation and Alignment" hit="?: operator" />
    <option name="after" path="Spaces" hit="After '...' in parameter pack" />
    <option name="in" path="Spaces" hit="After '...' in parameter pack" />
    <option name="pack" path="Spaces" hit="After '...' in parameter pack" />
    <option name="parameter" path="Spaces" hit="After '...' in parameter pack" />
    <option name="after" path="Spaces" hit="After ':' in range-based for loop" />
    <option name="for" path="Spaces" hit="After ':' in range-based for loop" />
    <option name="in" path="Spaces" hit="After ':' in range-based for loop" />
    <option name="loop" path="Spaces" hit="After ':' in range-based for loop" />
    <option name="range-based" path="Spaces" hit="After ':' in range-based for loop" />
    <option name="after" path="Spaces" hit="After C++/CLI generic constraint colon" />
    <option name="c++" path="Spaces" hit="After C++/CLI generic constraint colon" />
    <option name="cli" path="Spaces" hit="After C++/CLI generic constraint colon" />
    <option name="colon" path="Spaces" hit="After C++/CLI generic constraint colon" />
    <option name="constraint" path="Spaces" hit="After C++/CLI generic constraint colon" />
    <option name="generic" path="Spaces" hit="After C++/CLI generic constraint colon" />
    <option name="access" path="Blank Lines" hit="After access specifier" />
    <option name="after" path="Blank Lines" hit="After access specifier" />
    <option name="specifier" path="Blank Lines" hit="After access specifier" />
    <option name="after" path="Spaces" hit="After base types list colon" />
    <option name="base" path="Spaces" hit="After base types list colon" />
    <option name="colon" path="Spaces" hit="After base types list colon" />
    <option name="list" path="Spaces" hit="After base types list colon" />
    <option name="types" path="Spaces" hit="After base types list colon" />
    <option name="after" path="Spaces" hit="After colon in bit-field declarations" />
    <option name="bit-field" path="Spaces" hit="After colon in bit-field declarations" />
    <option name="colon" path="Spaces" hit="After colon in bit-field declarations" />
    <option name="declarations" path="Spaces" hit="After colon in bit-field declarations" />
    <option name="in" path="Spaces" hit="After colon in bit-field declarations" />
    <option name="after" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="case" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="colon" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="in" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="label" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="or" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="statement" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="switch" path="Spaces" hit="After colon in switch case or label statement" />
    <option name="after" path="Spaces" hit="After comma in base clause" />
    <option name="base" path="Spaces" hit="After comma in base clause" />
    <option name="clause" path="Spaces" hit="After comma in base clause" />
    <option name="comma" path="Spaces" hit="After comma in base clause" />
    <option name="in" path="Spaces" hit="After comma in base clause" />
    <option name="after" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="comma" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="declaration" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="in" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="multiple" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="of" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="variables" path="Spaces" hit="After comma in declaration of multiple variables" />
    <option name="after" path="Spaces" hit="After comma in enum" />
    <option name="comma" path="Spaces" hit="After comma in enum" />
    <option name="enum" path="Spaces" hit="After comma in enum" />
    <option name="in" path="Spaces" hit="After comma in enum" />
    <option name="after" path="Spaces" hit="After comma in function call and initialization" />
    <option name="and" path="Spaces" hit="After comma in function call and initialization" />
    <option name="call" path="Spaces" hit="After comma in function call and initialization" />
    <option name="comma" path="Spaces" hit="After comma in function call and initialization" />
    <option name="function" path="Spaces" hit="After comma in function call and initialization" />
    <option name="in" path="Spaces" hit="After comma in function call and initialization" />
    <option name="initialization" path="Spaces" hit="After comma in function call and initialization" />
    <option name="after" path="Spaces" hit="After comma in function parameters" />
    <option name="comma" path="Spaces" hit="After comma in function parameters" />
    <option name="function" path="Spaces" hit="After comma in function parameters" />
    <option name="in" path="Spaces" hit="After comma in function parameters" />
    <option name="parameters" path="Spaces" hit="After comma in function parameters" />
    <option name="after" path="Spaces" hit="After comma in template arguments" />
    <option name="arguments" path="Spaces" hit="After comma in template arguments" />
    <option name="comma" path="Spaces" hit="After comma in template arguments" />
    <option name="in" path="Spaces" hit="After comma in template arguments" />
    <option name="template" path="Spaces" hit="After comma in template arguments" />
    <option name="after" path="Spaces" hit="After comma in template parameters" />
    <option name="comma" path="Spaces" hit="After comma in template parameters" />
    <option name="in" path="Spaces" hit="After comma in template parameters" />
    <option name="parameters" path="Spaces" hit="After comma in template parameters" />
    <option name="template" path="Spaces" hit="After comma in template parameters" />
    <option name="after" path="Spaces" hit="After comma in uniform initialization braces" />
    <option name="braces" path="Spaces" hit="After comma in uniform initialization braces" />
    <option name="comma" path="Spaces" hit="After comma in uniform initialization braces" />
    <option name="in" path="Spaces" hit="After comma in uniform initialization braces" />
    <option name="initialization" path="Spaces" hit="After comma in uniform initialization braces" />
    <option name="uniform" path="Spaces" hit="After comma in uniform initialization braces" />
    <option name="after" path="Spaces" hit="After logical NOT operator (!)" />
    <option name="logical" path="Spaces" hit="After logical NOT operator (!)" />
    <option name="not" path="Spaces" hit="After logical NOT operator (!)" />
    <option name="operator" path="Spaces" hit="After logical NOT operator (!)" />
    <option name="after" path="Spaces" hit="After parentheses in cast expressions" />
    <option name="cast" path="Spaces" hit="After parentheses in cast expressions" />
    <option name="expressions" path="Spaces" hit="After parentheses in cast expressions" />
    <option name="in" path="Spaces" hit="After parentheses in cast expressions" />
    <option name="parentheses" path="Spaces" hit="After parentheses in cast expressions" />
    <option name="after" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="declaration" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="in" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="multiple" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="of" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="ptr" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="variables" path="Spaces" hit="After ptr in declaration of multiple variables" />
    <option name="after" path="Spaces" hit="After ptr in declaration of variable" />
    <option name="declaration" path="Spaces" hit="After ptr in declaration of variable" />
    <option name="in" path="Spaces" hit="After ptr in declaration of variable" />
    <option name="of" path="Spaces" hit="After ptr in declaration of variable" />
    <option name="ptr" path="Spaces" hit="After ptr in declaration of variable" />
    <option name="variable" path="Spaces" hit="After ptr in declaration of variable" />
    <option name="after" path="Spaces" hit="After ptr in nested declarator" />
    <option name="declarator" path="Spaces" hit="After ptr in nested declarator" />
    <option name="in" path="Spaces" hit="After ptr in nested declarator" />
    <option name="nested" path="Spaces" hit="After ptr in nested declarator" />
    <option name="ptr" path="Spaces" hit="After ptr in nested declarator" />
    <option name="after" path="Spaces" hit="After ptr in return type of function" />
    <option name="function" path="Spaces" hit="After ptr in return type of function" />
    <option name="in" path="Spaces" hit="After ptr in return type of function" />
    <option name="of" path="Spaces" hit="After ptr in return type of function" />
    <option name="ptr" path="Spaces" hit="After ptr in return type of function" />
    <option name="return" path="Spaces" hit="After ptr in return type of function" />
    <option name="type" path="Spaces" hit="After ptr in return type of function" />
    <option name="after" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="declaration" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="in" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="multiple" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="of" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="ref" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="variables" path="Spaces" hit="After ref in declaration of multiple variables" />
    <option name="after" path="Spaces" hit="After ref in declaration of variable" />
    <option name="declaration" path="Spaces" hit="After ref in declaration of variable" />
    <option name="in" path="Spaces" hit="After ref in declaration of variable" />
    <option name="of" path="Spaces" hit="After ref in declaration of variable" />
    <option name="ref" path="Spaces" hit="After ref in declaration of variable" />
    <option name="variable" path="Spaces" hit="After ref in declaration of variable" />
    <option name="after" path="Spaces" hit="After ref in return type of function" />
    <option name="function" path="Spaces" hit="After ref in return type of function" />
    <option name="in" path="Spaces" hit="After ref in return type of function" />
    <option name="of" path="Spaces" hit="After ref in return type of function" />
    <option name="ref" path="Spaces" hit="After ref in return type of function" />
    <option name="return" path="Spaces" hit="After ref in return type of function" />
    <option name="type" path="Spaces" hit="After ref in return type of function" />
    <option name="after" path="Spaces" hit="After semicolon" />
    <option name="semicolon" path="Spaces" hit="After semicolon" />
    <option name="+" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="++" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="-" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="--" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="after" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="operator" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="unary" path="Spaces" hit="After unary operator (+, -, ~, *, &amp;, ++, --)" />
    <option name="align" path="Indentation and Alignment" hit="Align Multiline Construct" />
    <option name="construct" path="Indentation and Alignment" hit="Align Multiline Construct" />
    <option name="multiline" path="Indentation and Alignment" hit="Align Multiline Construct" />
    <option name="align" path="Indentation and Alignment" hit="Align Similar Code in Columns" />
    <option name="code" path="Indentation and Alignment" hit="Align Similar Code in Columns" />
    <option name="columns" path="Indentation and Alignment" hit="Align Similar Code in Columns" />
    <option name="in" path="Indentation and Alignment" hit="Align Similar Code in Columns" />
    <option name="similar" path="Indentation and Alignment" hit="Align Similar Code in Columns" />
    <option name="align" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="even" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="if" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="indentation" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="is" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="large" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="resulting" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="the" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="too" path="Tabs and Indents" hit="Align even if the resulting indentation is too large" />
    <option name="allow" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="c++" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="cli" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="constraints" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="generic" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="line" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="on" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="same" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="the" path="Line Breaks and Wrapping" hit="Allow C++/CLI generic constraints on the same line" />
    <option name="after" path="Braces Layout" hit="Allow comment after '{'" />
    <option name="allow" path="Braces Layout" hit="Allow comment after '{'" />
    <option name="comment" path="Braces Layout" hit="Allow comment after '{'" />
    <option name="-" path="Spaces" hit="Around '-&gt;' in trailing return types" />
    <option name="around" path="Spaces" hit="Around '-&gt;' in trailing return types" />
    <option name="in" path="Spaces" hit="Around '-&gt;' in trailing return types" />
    <option name="return" path="Spaces" hit="Around '-&gt;' in trailing return types" />
    <option name="trailing" path="Spaces" hit="Around '-&gt;' in trailing return types" />
    <option name="types" path="Spaces" hit="Around '-&gt;' in trailing return types" />
    <option name="alias" path="Spaces" hit="Around '=' in alias declaration and namespace alias" />
    <option name="and" path="Spaces" hit="Around '=' in alias declaration and namespace alias" />
    <option name="around" path="Spaces" hit="Around '=' in alias declaration and namespace alias" />
    <option name="declaration" path="Spaces" hit="Around '=' in alias declaration and namespace alias" />
    <option name="in" path="Spaces" hit="Around '=' in alias declaration and namespace alias" />
    <option name="namespace" path="Spaces" hit="Around '=' in alias declaration and namespace alias" />
    <option name="around" path="Spaces" hit="Around assignment operator" />
    <option name="assignment" path="Spaces" hit="Around assignment operator" />
    <option name="operator" path="Spaces" hit="Around assignment operator" />
    <option name="around" path="Spaces" hit="Around binary operator" />
    <option name="binary" path="Spaces" hit="Around binary operator" />
    <option name="operator" path="Spaces" hit="Around binary operator" />
    <option name="around" path="Blank Lines" hit="Around class/struct/enum definition" />
    <option name="class" path="Blank Lines" hit="Around class/struct/enum definition" />
    <option name="definition" path="Blank Lines" hit="Around class/struct/enum definition" />
    <option name="enum" path="Blank Lines" hit="Around class/struct/enum definition" />
    <option name="struct" path="Blank Lines" hit="Around class/struct/enum definition" />
    <option name="-" path="Spaces" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="and" path="Spaces" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="around" path="Spaces" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="dot" path="Spaces" hit="Around dot, '-&gt;', '.*' and '-&gt;.'" />
    <option name="around" path="Blank Lines" hit="Around function declarations" />
    <option name="declarations" path="Blank Lines" hit="Around function declarations" />
    <option name="function" path="Blank Lines" hit="Around function declarations" />
    <option name="around" path="Blank Lines" hit="Around function definitions" />
    <option name="definitions" path="Blank Lines" hit="Around function definitions" />
    <option name="function" path="Blank Lines" hit="Around function definitions" />
    <option name="around" path="Blank Lines" hit="Around namespaces" />
    <option name="namespaces" path="Blank Lines" hit="Around namespaces" />
    <option name="and" path="Blank Lines" hit="Around other definitions and declarations" />
    <option name="around" path="Blank Lines" hit="Around other definitions and declarations" />
    <option name="declarations" path="Blank Lines" hit="Around other definitions and declarations" />
    <option name="definitions" path="Blank Lines" hit="Around other definitions and declarations" />
    <option name="other" path="Blank Lines" hit="Around other definitions and declarations" />
    <option name="around" path="Blank Lines" hit="Around single line function definitions" />
    <option name="definitions" path="Blank Lines" hit="Around single line function definitions" />
    <option name="function" path="Blank Lines" hit="Around single line function definitions" />
    <option name="line" path="Blank Lines" hit="Around single line function definitions" />
    <option name="single" path="Blank Lines" hit="Around single line function definitions" />
    <option name="arrangement" path="Line Breaks and Wrapping" hit="Arrangement of Enumerations" />
    <option name="enumerations" path="Line Breaks and Wrapping" hit="Arrangement of Enumerations" />
    <option name="of" path="Line Breaks and Wrapping" hit="Arrangement of Enumerations" />
    <option name="assignments" path="Indentation and Alignment" hit="Assignments" />
    <option name="base" path="Indentation and Alignment" hit="Base classes in class base clause" />
    <option name="class" path="Indentation and Alignment" hit="Base classes in class base clause" />
    <option name="classes" path="Indentation and Alignment" hit="Base classes in class base clause" />
    <option name="clause" path="Indentation and Alignment" hit="Base classes in class base clause" />
    <option name="in" path="Indentation and Alignment" hit="Base classes in class base clause" />
    <option name="before" path="Spaces" hit="Before '...' in parameter pack" />
    <option name="in" path="Spaces" hit="Before '...' in parameter pack" />
    <option name="pack" path="Spaces" hit="Before '...' in parameter pack" />
    <option name="parameter" path="Spaces" hit="Before '...' in parameter pack" />
    <option name="before" path="Spaces" hit="Before ':' in range-based for loop" />
    <option name="for" path="Spaces" hit="Before ':' in range-based for loop" />
    <option name="in" path="Spaces" hit="Before ':' in range-based for loop" />
    <option name="loop" path="Spaces" hit="Before ':' in range-based for loop" />
    <option name="range-based" path="Spaces" hit="Before ':' in range-based for loop" />
    <option name="before" path="Spaces" hit="Before C++/CLI generic constraint colon" />
    <option name="c++" path="Spaces" hit="Before C++/CLI generic constraint colon" />
    <option name="cli" path="Spaces" hit="Before C++/CLI generic constraint colon" />
    <option name="colon" path="Spaces" hit="Before C++/CLI generic constraint colon" />
    <option name="constraint" path="Spaces" hit="Before C++/CLI generic constraint colon" />
    <option name="generic" path="Spaces" hit="Before C++/CLI generic constraint colon" />
    <option name="access" path="Blank Lines" hit="Before access specifier" />
    <option name="before" path="Blank Lines" hit="Before access specifier" />
    <option name="specifier" path="Blank Lines" hit="Before access specifier" />
    <option name="angle" path="Spaces" hit="Before angle brackets in template arguments" />
    <option name="arguments" path="Spaces" hit="Before angle brackets in template arguments" />
    <option name="before" path="Spaces" hit="Before angle brackets in template arguments" />
    <option name="brackets" path="Spaces" hit="Before angle brackets in template arguments" />
    <option name="in" path="Spaces" hit="Before angle brackets in template arguments" />
    <option name="template" path="Spaces" hit="Before angle brackets in template arguments" />
    <option name="angle" path="Spaces" hit="Before angle brackets in template parameters" />
    <option name="before" path="Spaces" hit="Before angle brackets in template parameters" />
    <option name="brackets" path="Spaces" hit="Before angle brackets in template parameters" />
    <option name="in" path="Spaces" hit="Before angle brackets in template parameters" />
    <option name="parameters" path="Spaces" hit="Before angle brackets in template parameters" />
    <option name="template" path="Spaces" hit="Before angle brackets in template parameters" />
    <option name="array" path="Spaces" hit="Before array subscript brackets" />
    <option name="before" path="Spaces" hit="Before array subscript brackets" />
    <option name="brackets" path="Spaces" hit="Before array subscript brackets" />
    <option name="subscript" path="Spaces" hit="Before array subscript brackets" />
    <option name="base" path="Spaces" hit="Before base types list colon" />
    <option name="before" path="Spaces" hit="Before base types list colon" />
    <option name="colon" path="Spaces" hit="Before base types list colon" />
    <option name="list" path="Spaces" hit="Before base types list colon" />
    <option name="types" path="Spaces" hit="Before base types list colon" />
    <option name="before" path="Spaces" hit="Before colon in bit-field declarations" />
    <option name="bit-field" path="Spaces" hit="Before colon in bit-field declarations" />
    <option name="colon" path="Spaces" hit="Before colon in bit-field declarations" />
    <option name="declarations" path="Spaces" hit="Before colon in bit-field declarations" />
    <option name="in" path="Spaces" hit="Before colon in bit-field declarations" />
    <option name="before" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="case" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="colon" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="in" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="label" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="or" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="statement" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="switch" path="Spaces" hit="Before colon in switch case or label statement" />
    <option name="base" path="Spaces" hit="Before comma in base clause" />
    <option name="before" path="Spaces" hit="Before comma in base clause" />
    <option name="clause" path="Spaces" hit="Before comma in base clause" />
    <option name="comma" path="Spaces" hit="Before comma in base clause" />
    <option name="in" path="Spaces" hit="Before comma in base clause" />
    <option name="before" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="comma" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="declaration" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="in" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="multiple" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="of" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="variables" path="Spaces" hit="Before comma in declaration of multiple variables" />
    <option name="before" path="Spaces" hit="Before comma in enum" />
    <option name="comma" path="Spaces" hit="Before comma in enum" />
    <option name="enum" path="Spaces" hit="Before comma in enum" />
    <option name="in" path="Spaces" hit="Before comma in enum" />
    <option name="and" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="before" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="call" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="comma" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="function" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="in" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="initialization" path="Spaces" hit="Before comma in function call and initialization" />
    <option name="before" path="Spaces" hit="Before comma in function parameters" />
    <option name="comma" path="Spaces" hit="Before comma in function parameters" />
    <option name="function" path="Spaces" hit="Before comma in function parameters" />
    <option name="in" path="Spaces" hit="Before comma in function parameters" />
    <option name="parameters" path="Spaces" hit="Before comma in function parameters" />
    <option name="arguments" path="Spaces" hit="Before comma in template arguments" />
    <option name="before" path="Spaces" hit="Before comma in template arguments" />
    <option name="comma" path="Spaces" hit="Before comma in template arguments" />
    <option name="in" path="Spaces" hit="Before comma in template arguments" />
    <option name="template" path="Spaces" hit="Before comma in template arguments" />
    <option name="before" path="Spaces" hit="Before comma in template parameters" />
    <option name="comma" path="Spaces" hit="Before comma in template parameters" />
    <option name="in" path="Spaces" hit="Before comma in template parameters" />
    <option name="parameters" path="Spaces" hit="Before comma in template parameters" />
    <option name="template" path="Spaces" hit="Before comma in template parameters" />
    <option name="before" path="Spaces" hit="Before comma in uniform initialization braces" />
    <option name="braces" path="Spaces" hit="Before comma in uniform initialization braces" />
    <option name="comma" path="Spaces" hit="Before comma in uniform initialization braces" />
    <option name="in" path="Spaces" hit="Before comma in uniform initialization braces" />
    <option name="initialization" path="Spaces" hit="Before comma in uniform initialization braces" />
    <option name="uniform" path="Spaces" hit="Before comma in uniform initialization braces" />
    <option name="and" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="before" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="call" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="empty" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="function" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="in" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="initialization" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="parentheses" path="Spaces" hit="Before empty parentheses in function call and initialization" />
    <option name="before" path="Spaces" hit="Before end of line comment" />
    <option name="comment" path="Spaces" hit="Before end of line comment" />
    <option name="end" path="Spaces" hit="Before end of line comment" />
    <option name="line" path="Spaces" hit="Before end of line comment" />
    <option name="of" path="Spaces" hit="Before end of line comment" />
    <option name="before" path="Spaces" hit="Before parentheses" />
    <option name="parentheses" path="Spaces" hit="Before parentheses" />
    <option name="and" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="before" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="call" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="function" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="in" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="initialization" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="parentheses" path="Spaces" hit="Before parentheses in function call and initialization" />
    <option name="before" path="Spaces" hit="Before parentheses in function parameters" />
    <option name="function" path="Spaces" hit="Before parentheses in function parameters" />
    <option name="in" path="Spaces" hit="Before parentheses in function parameters" />
    <option name="parameters" path="Spaces" hit="Before parentheses in function parameters" />
    <option name="parentheses" path="Spaces" hit="Before parentheses in function parameters" />
    <option name="before" path="Spaces" hit="Before parentheses in lambda parameters" />
    <option name="in" path="Spaces" hit="Before parentheses in lambda parameters" />
    <option name="lambda" path="Spaces" hit="Before parentheses in lambda parameters" />
    <option name="parameters" path="Spaces" hit="Before parentheses in lambda parameters" />
    <option name="parentheses" path="Spaces" hit="Before parentheses in lambda parameters" />
    <option name="before" path="Spaces" hit="Before postfix operator" />
    <option name="operator" path="Spaces" hit="Before postfix operator" />
    <option name="postfix" path="Spaces" hit="Before postfix operator" />
    <option name="abstract" path="Spaces" hit="Before ptr in abstract declaration" />
    <option name="before" path="Spaces" hit="Before ptr in abstract declaration" />
    <option name="declaration" path="Spaces" hit="Before ptr in abstract declaration" />
    <option name="in" path="Spaces" hit="Before ptr in abstract declaration" />
    <option name="ptr" path="Spaces" hit="Before ptr in abstract declaration" />
    <option name="before" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="declaration" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="in" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="multiple" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="of" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="ptr" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="variables" path="Spaces" hit="Before ptr in declaration of multiple variables" />
    <option name="before" path="Spaces" hit="Before ptr in declaration of variable" />
    <option name="declaration" path="Spaces" hit="Before ptr in declaration of variable" />
    <option name="in" path="Spaces" hit="Before ptr in declaration of variable" />
    <option name="of" path="Spaces" hit="Before ptr in declaration of variable" />
    <option name="ptr" path="Spaces" hit="Before ptr in declaration of variable" />
    <option name="variable" path="Spaces" hit="Before ptr in declaration of variable" />
    <option name="before" path="Spaces" hit="Before ptr in return type of function" />
    <option name="function" path="Spaces" hit="Before ptr in return type of function" />
    <option name="in" path="Spaces" hit="Before ptr in return type of function" />
    <option name="of" path="Spaces" hit="Before ptr in return type of function" />
    <option name="ptr" path="Spaces" hit="Before ptr in return type of function" />
    <option name="return" path="Spaces" hit="Before ptr in return type of function" />
    <option name="type" path="Spaces" hit="Before ptr in return type of function" />
    <option name="abstract" path="Spaces" hit="Before ref in abstract declaration" />
    <option name="before" path="Spaces" hit="Before ref in abstract declaration" />
    <option name="declaration" path="Spaces" hit="Before ref in abstract declaration" />
    <option name="in" path="Spaces" hit="Before ref in abstract declaration" />
    <option name="ref" path="Spaces" hit="Before ref in abstract declaration" />
    <option name="before" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="declaration" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="in" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="multiple" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="of" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="ref" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="variables" path="Spaces" hit="Before ref in declaration of multiple variables" />
    <option name="before" path="Spaces" hit="Before ref in declaration of variable" />
    <option name="declaration" path="Spaces" hit="Before ref in declaration of variable" />
    <option name="in" path="Spaces" hit="Before ref in declaration of variable" />
    <option name="of" path="Spaces" hit="Before ref in declaration of variable" />
    <option name="ref" path="Spaces" hit="Before ref in declaration of variable" />
    <option name="variable" path="Spaces" hit="Before ref in declaration of variable" />
    <option name="before" path="Spaces" hit="Before ref in return type of function" />
    <option name="function" path="Spaces" hit="Before ref in return type of function" />
    <option name="in" path="Spaces" hit="Before ref in return type of function" />
    <option name="of" path="Spaces" hit="Before ref in return type of function" />
    <option name="ref" path="Spaces" hit="Before ref in return type of function" />
    <option name="return" path="Spaces" hit="Before ref in return type of function" />
    <option name="type" path="Spaces" hit="Before ref in return type of function" />
    <option name="before" path="Spaces" hit="Before semicolon" />
    <option name="semicolon" path="Spaces" hit="Before semicolon" />
    <option name="before" path="Spaces" hit="Before uniform initialization braces" />
    <option name="braces" path="Spaces" hit="Before uniform initialization braces" />
    <option name="initialization" path="Spaces" hit="Before uniform initialization braces" />
    <option name="uniform" path="Spaces" hit="Before uniform initialization braces" />
    <option name="angle" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="arguments" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="between" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="brackets" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="closing" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="in" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="template" path="Spaces" hit="Between closing angle brackets in template arguments" />
    <option name="bit-field" path="Indentation and Alignment" hit="Bit-field sizes" />
    <option name="sizes" path="Indentation and Alignment" hit="Bit-field sizes" />
    <option name="blank" path="Blank Lines" hit="Blank Lines" />
    <option name="lines" path="Blank Lines" hit="Blank Lines" />
    <option name="block" path="Braces Layout" hit="Block under 'case' label" />
    <option name="case" path="Braces Layout" hit="Block under 'case' label" />
    <option name="label" path="Braces Layout" hit="Block under 'case' label" />
    <option name="under" path="Braces Layout" hit="Block under 'case' label" />
    <option name="braces" path="Syntax Style" hit="Braces" />
    <option name="braces" path="Braces Layout" hit="Braces Layout" />
    <option name="layout" path="Braces Layout" hit="Braces Layout" />
    <option name="-" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="return" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="trailing" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="types" path="Line Breaks and Wrapping" hit="Break line after '-&gt;' in trailing return types" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="colon" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="lists" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="member" path="Line Breaks and Wrapping" hit="Break line after colon in member initializer lists" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="comma" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="lists" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="member" path="Line Breaks and Wrapping" hit="Break line after comma in member initializer lists" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after goto labels" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after goto labels" />
    <option name="goto" path="Line Breaks and Wrapping" hit="Break line after goto labels" />
    <option name="labels" path="Line Breaks and Wrapping" hit="Break line after goto labels" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after goto labels" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after init-statement" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after init-statement" />
    <option name="init-statement" path="Line Breaks and Wrapping" hit="Break line after init-statement" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after init-statement" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="declaration" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="function" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="member" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="return" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="type" path="Line Breaks and Wrapping" hit="Break line after member function declaration return type" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="definition" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="function" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="member" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="return" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="type" path="Line Breaks and Wrapping" hit="Break line after member function definition return type" />
    <option name="a" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="declaration" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="of" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="template" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="the" path="Line Breaks and Wrapping" hit="Break line after the template&lt;...&gt; of a template declaration" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="declaration" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="function" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="return" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="top-level" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="type" path="Line Breaks and Wrapping" hit="Break line after top-level function declaration return type" />
    <option name="after" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="definition" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="function" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="return" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="top-level" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="type" path="Line Breaks and Wrapping" hit="Break line after top-level function definition return type" />
    <option name="-" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="before" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="return" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="trailing" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="types" path="Line Breaks and Wrapping" hit="Break line before '-&gt;' in trailing return types" />
    <option name="before" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="colon" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="lists" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="member" path="Line Breaks and Wrapping" hit="Break line before colon in member initializer lists" />
    <option name="before" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="comma" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="lists" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="member" path="Line Breaks and Wrapping" hit="Break line before comma in member initializer lists" />
    <option name="before" path="Line Breaks and Wrapping" hit="Break line before the requires-clause" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line before the requires-clause" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line before the requires-clause" />
    <option name="requires-clause" path="Line Breaks and Wrapping" hit="Break line before the requires-clause" />
    <option name="the" path="Line Breaks and Wrapping" hit="Break line before the requires-clause" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line in simple 'case' statement" />
    <option name="case" path="Line Breaks and Wrapping" hit="Break line in simple 'case' statement" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line in simple 'case' statement" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line in simple 'case' statement" />
    <option name="simple" path="Line Breaks and Wrapping" hit="Break line in simple 'case' statement" />
    <option name="statement" path="Line Breaks and Wrapping" hit="Break line in simple 'case' statement" />
    <option name="break" path="Line Breaks and Wrapping" hit="Break line in single embedded statement" />
    <option name="embedded" path="Line Breaks and Wrapping" hit="Break line in single embedded statement" />
    <option name="in" path="Line Breaks and Wrapping" hit="Break line in single embedded statement" />
    <option name="line" path="Line Breaks and Wrapping" hit="Break line in single embedded statement" />
    <option name="single" path="Line Breaks and Wrapping" hit="Break line in single embedded statement" />
    <option name="statement" path="Line Breaks and Wrapping" hit="Break line in single embedded statement" />
    <option name="c++" path="General" hit="C++ Formatting Engine" />
    <option name="engine" path="General" hit="C++ Formatting Engine" />
    <option name="formatting" path="General" hit="C++ Formatting Engine" />
    <option name="arguments" path="Indentation and Alignment" hit="Call arguments" />
    <option name="call" path="Indentation and Alignment" hit="Call arguments" />
    <option name="binary" path="Indentation and Alignment" hit="Chained binary expressions" />
    <option name="chained" path="Indentation and Alignment" hit="Chained binary expressions" />
    <option name="expressions" path="Indentation and Alignment" hit="Chained binary expressions" />
    <option name="calls" path="Indentation and Alignment" hit="Chained method calls" />
    <option name="chained" path="Indentation and Alignment" hit="Chained method calls" />
    <option name="method" path="Indentation and Alignment" hit="Chained method calls" />
    <option name="clang-format" path="General" hit="Clang-format executable to use:" />
    <option name="executable" path="General" hit="Clang-format executable to use:" />
    <option name="to" path="General" hit="Clang-format executable to use:" />
    <option name="use" path="General" hit="Clang-format executable to use:" />
    <option name="and" path="Naming" hit="Class and struct fields" />
    <option name="class" path="Naming" hit="Class and struct fields" />
    <option name="fields" path="Naming" hit="Class and struct fields" />
    <option name="struct" path="Naming" hit="Class and struct fields" />
    <option name="and" path="Naming" hit="Class and struct methods" />
    <option name="class" path="Naming" hit="Class and struct methods" />
    <option name="methods" path="Naming" hit="Class and struct methods" />
    <option name="struct" path="Naming" hit="Class and struct methods" />
    <option name="and" path="Naming" hit="Class and struct public fields" />
    <option name="class" path="Naming" hit="Class and struct public fields" />
    <option name="fields" path="Naming" hit="Class and struct public fields" />
    <option name="public" path="Naming" hit="Class and struct public fields" />
    <option name="struct" path="Naming" hit="Class and struct public fields" />
    <option name="and" path="Naming" hit="Classes and structs" />
    <option name="classes" path="Naming" hit="Classes and structs" />
    <option name="structs" path="Naming" hit="Classes and structs" />
    <option name="a" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="also" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="and" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="be" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="c++" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="clang-format" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="clangformat" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="code" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="files" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="for" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="format" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="from" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="is" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="javascript" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="protobuf" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="read" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="settings" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="style" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="styles" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="will" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="yaml-based" path="General" hit="Code style settings will be also read from .clang-format files. ClangFormat is a YAML-based format for C++, JavaScript, and ProtoBuf code styles." />
    <option name="concepts" path="Naming" hit="Concepts" />
    <option name="continuous" path="Indentation and Alignment" hit="Continuous line indent" />
    <option name="indent" path="Indentation and Alignment" hit="Continuous line indent" />
    <option name="line" path="Indentation and Alignment" hit="Continuous line indent" />
    <option name="declaration" path="Indentation and Alignment" hit="Declaration names" />
    <option name="names" path="Indentation and Alignment" hit="Declaration names" />
    <option name="declarations" path="Syntax Style" hit="Declarations" />
    <option name="declaration" path="Indentation and Alignment" hit="Declarators in declaration" />
    <option name="declarators" path="Indentation and Alignment" hit="Declarators in declaration" />
    <option name="in" path="Indentation and Alignment" hit="Declarators in declaration" />
    <option name="default" path="Syntax Style" hit="Default pointer initializer" />
    <option name="initializer" path="Syntax Style" hit="Default pointer initializer" />
    <option name="pointer" path="Syntax Style" hit="Default pointer initializer" />
    <option name="elsewhere" path="Syntax Style" hit="Elsewhere" />
    <option name="braces" path="Braces Layout" hit="Empty braces formatting" />
    <option name="empty" path="Braces Layout" hit="Empty braces formatting" />
    <option name="formatting" path="Braces Layout" hit="Empty braces formatting" />
    <option name="enable" path="Unreal Engine" hit="Enable UE Slate formatting support" />
    <option name="formatting" path="Unreal Engine" hit="Enable UE Slate formatting support" />
    <option name="slate" path="Unreal Engine" hit="Enable UE Slate formatting support" />
    <option name="support" path="Unreal Engine" hit="Enable UE Slate formatting support" />
    <option name="ue" path="Unreal Engine" hit="Enable UE Slate formatting support" />
    <option name="comments" path="Indentation and Alignment" hit="End comments" />
    <option name="end" path="Indentation and Alignment" hit="End comments" />
    <option name="enum" path="Indentation and Alignment" hit="Enum initializers" />
    <option name="initializers" path="Indentation and Alignment" hit="Enum initializers" />
    <option name="enum" path="Naming" hit="Enum members" />
    <option name="members" path="Naming" hit="Enum members" />
    <option name="enums" path="Naming" hit="Enums" />
    <option name="events" path="Naming" hit="Events" />
    <option name="code" path="General" hit="Export Rider Code Style Options" />
    <option name="export" path="General" hit="Export Rider Code Style Options" />
    <option name="options" path="General" hit="Export Rider Code Style Options" />
    <option name="rider" path="General" hit="Export Rider Code Style Options" />
    <option name="style" path="General" hit="Export Rider Code Style Options" />
    <option name="declarations" path="Braces Layout" hit="Export declarations" />
    <option name="export" path="Braces Layout" hit="Export declarations" />
    <option name="argument" path="Indentation and Alignment" hit="First call argument by '('" />
    <option name="by" path="Indentation and Alignment" hit="First call argument by '('" />
    <option name="call" path="Indentation and Alignment" hit="First call argument by '('" />
    <option name="first" path="Indentation and Alignment" hit="First call argument by '('" />
    <option name="adjacent" path="Indentation and Alignment" hit="Fix column alignment in adjacent lines" />
    <option name="alignment" path="Indentation and Alignment" hit="Fix column alignment in adjacent lines" />
    <option name="column" path="Indentation and Alignment" hit="Fix column alignment in adjacent lines" />
    <option name="fix" path="Indentation and Alignment" hit="Fix column alignment in adjacent lines" />
    <option name="in" path="Indentation and Alignment" hit="Fix column alignment in adjacent lines" />
    <option name="lines" path="Indentation and Alignment" hit="Fix column alignment in adjacent lines" />
    <option name="bool" path="Syntax Style" hit="For numeric types (int, bool, char, …)" />
    <option name="char" path="Syntax Style" hit="For numeric types (int, bool, char, …)" />
    <option name="for" path="Syntax Style" hit="For numeric types (int, bool, char, …)" />
    <option name="int" path="Syntax Style" hit="For numeric types (int, bool, char, …)" />
    <option name="numeric" path="Syntax Style" hit="For numeric types (int, bool, char, …)" />
    <option name="types" path="Syntax Style" hit="For numeric types (int, bool, char, …)" />
    <option name="declaration" path="Braces Layout" hit="Function declaration" />
    <option name="function" path="Braces Layout" hit="Function declaration" />
    <option name="declaration" path="Syntax Style" hit="Function declaration syntax" />
    <option name="function" path="Syntax Style" hit="Function declaration syntax" />
    <option name="syntax" path="Syntax Style" hit="Function declaration syntax" />
    <option name="function" path="Indentation and Alignment" hit="Function parameters" />
    <option name="parameters" path="Indentation and Alignment" hit="Function parameters" />
    <option name="general" path="Line Breaks and Wrapping" hit="General" />
    <option name="constants" path="Naming" hit="Global constants" />
    <option name="global" path="Naming" hit="Global constants" />
    <option name="functions" path="Naming" hit="Global functions" />
    <option name="global" path="Naming" hit="Global functions" />
    <option name="global" path="Naming" hit="Global variables" />
    <option name="variables" path="Naming" hit="Global variables" />
    <option name="at" path="Line Breaks and Wrapping" hit="Hard wrap at" />
    <option name="hard" path="Line Breaks and Wrapping" hit="Hard wrap at" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Hard wrap at" />
    <option name="align" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="are" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="for" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="how" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="indents" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="tabs" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="to" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="used" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="when" path="Tabs and Indents" hit="How to align when tabs are used for indents" />
    <option name="do-while" path="Syntax Style" hit="In 'do-while' statement" />
    <option name="in" path="Syntax Style" hit="In 'do-while' statement" />
    <option name="statement" path="Syntax Style" hit="In 'do-while' statement" />
    <option name="for" path="Syntax Style" hit="In 'for' statement" />
    <option name="in" path="Syntax Style" hit="In 'for' statement" />
    <option name="statement" path="Syntax Style" hit="In 'for' statement" />
    <option name="if" path="Syntax Style" hit="In 'if' statement" />
    <option name="in" path="Syntax Style" hit="In 'if' statement" />
    <option name="statement" path="Syntax Style" hit="In 'if' statement" />
    <option name="in" path="Syntax Style" hit="In 'while' statement" />
    <option name="statement" path="Syntax Style" hit="In 'while' statement" />
    <option name="while" path="Syntax Style" hit="In 'while' statement" />
    <option name="control" path="Spaces" hit="In Control Statements" />
    <option name="in" path="Spaces" hit="In Control Statements" />
    <option name="statements" path="Spaces" hit="In Control Statements" />
    <option name="declarations" path="Spaces" hit="In Declarations" />
    <option name="in" path="Spaces" hit="In Declarations" />
    <option name="expressions" path="Spaces" hit="In Expressions" />
    <option name="in" path="Spaces" hit="In Expressions" />
    <option name="after" path="Spaces" hit="In ternary operator '? :' after '?'" />
    <option name="in" path="Spaces" hit="In ternary operator '? :' after '?'" />
    <option name="operator" path="Spaces" hit="In ternary operator '? :' after '?'" />
    <option name="ternary" path="Spaces" hit="In ternary operator '? :' after '?'" />
    <option name="before" path="Spaces" hit="In ternary operator '? :' before '?' " />
    <option name="in" path="Spaces" hit="In ternary operator '? :' before '?' " />
    <option name="operator" path="Spaces" hit="In ternary operator '? :' before '?' " />
    <option name="ternary" path="Spaces" hit="In ternary operator '? :' before '?' " />
    <option name="directives" path="Syntax Style" hit="Include Directives" />
    <option name="include" path="Syntax Style" hit="Include Directives" />
    <option name="case" path="Indentation and Alignment" hit="Indent 'case' from 'switch'" />
    <option name="from" path="Indentation and Alignment" hit="Indent 'case' from 'switch'" />
    <option name="indent" path="Indentation and Alignment" hit="Indent 'case' from 'switch'" />
    <option name="switch" path="Indentation and Alignment" hit="Indent 'case' from 'switch'" />
    <option name="c++" path="Indentation and Alignment" hit="Indent C++/CLI generic constraints" />
    <option name="cli" path="Indentation and Alignment" hit="Indent C++/CLI generic constraints" />
    <option name="constraints" path="Indentation and Alignment" hit="Indent C++/CLI generic constraints" />
    <option name="generic" path="Indentation and Alignment" hit="Indent C++/CLI generic constraints" />
    <option name="indent" path="Indentation and Alignment" hit="Indent C++/CLI generic constraints" />
    <option name="access" path="Indentation and Alignment" hit="Indent access specifier from class" />
    <option name="class" path="Indentation and Alignment" hit="Indent access specifier from class" />
    <option name="from" path="Indentation and Alignment" hit="Indent access specifier from class" />
    <option name="indent" path="Indentation and Alignment" hit="Indent access specifier from class" />
    <option name="specifier" path="Indentation and Alignment" hit="Indent access specifier from class" />
    <option name="aligned" path="Indentation and Alignment" hit="Indent aligned ?: operator" />
    <option name="indent" path="Indentation and Alignment" hit="Indent aligned ?: operator" />
    <option name="operator" path="Indentation and Alignment" hit="Indent aligned ?: operator" />
    <option name="access" path="Indentation and Alignment" hit="Indent class member from access specifier" />
    <option name="class" path="Indentation and Alignment" hit="Indent class member from access specifier" />
    <option name="from" path="Indentation and Alignment" hit="Indent class member from access specifier" />
    <option name="indent" path="Indentation and Alignment" hit="Indent class member from access specifier" />
    <option name="member" path="Indentation and Alignment" hit="Indent class member from access specifier" />
    <option name="specifier" path="Indentation and Alignment" hit="Indent class member from access specifier" />
    <option name="at" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="column" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="comments" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="first" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="indent" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="started" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="the" path="Indentation and Alignment" hit="Indent comments started at the first column" />
    <option name="block" path="Indentation and Alignment" hit="Indent export declaration block members" />
    <option name="declaration" path="Indentation and Alignment" hit="Indent export declaration block members" />
    <option name="export" path="Indentation and Alignment" hit="Indent export declaration block members" />
    <option name="indent" path="Indentation and Alignment" hit="Indent export declaration block members" />
    <option name="members" path="Indentation and Alignment" hit="Indent export declaration block members" />
    <option name="declarations" path="Indentation and Alignment" hit="Indent function declarations' parentheses" />
    <option name="function" path="Indentation and Alignment" hit="Indent function declarations' parentheses" />
    <option name="indent" path="Indentation and Alignment" hit="Indent function declarations' parentheses" />
    <option name="parentheses" path="Indentation and Alignment" hit="Indent function declarations' parentheses" />
    <option name="goto" path="Indentation and Alignment" hit="Indent goto labels" />
    <option name="indent" path="Indentation and Alignment" hit="Indent goto labels" />
    <option name="labels" path="Indentation and Alignment" hit="Indent goto labels" />
    <option name="a" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="after" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="declaration" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="definition" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="function" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="if" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="indent" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="is" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="or" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="the" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="type" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="wrapped" path="Indentation and Alignment" hit="Indent if a function definition or declaration is wrapped after the type" />
    <option name="block" path="Indentation and Alignment" hit="Indent linkage specification block members" />
    <option name="indent" path="Indentation and Alignment" hit="Indent linkage specification block members" />
    <option name="linkage" path="Indentation and Alignment" hit="Indent linkage specification block members" />
    <option name="members" path="Indentation and Alignment" hit="Indent linkage specification block members" />
    <option name="specification" path="Indentation and Alignment" hit="Indent linkage specification block members" />
    <option name="indent" path="Indentation and Alignment" hit="Indent member initializer list" />
    <option name="initializer" path="Indentation and Alignment" hit="Indent member initializer list" />
    <option name="list" path="Indentation and Alignment" hit="Indent member initializer list" />
    <option name="member" path="Indentation and Alignment" hit="Indent member initializer list" />
    <option name="calls" path="Indentation and Alignment" hit="Indent method calls' parentheses" />
    <option name="indent" path="Indentation and Alignment" hit="Indent method calls' parentheses" />
    <option name="method" path="Indentation and Alignment" hit="Indent method calls' parentheses" />
    <option name="parentheses" path="Indentation and Alignment" hit="Indent method calls' parentheses" />
    <option name="indent" path="Indentation and Alignment" hit="Indent namespace members" />
    <option name="members" path="Indentation and Alignment" hit="Indent namespace members" />
    <option name="namespace" path="Indentation and Alignment" hit="Indent namespace members" />
    <option name="indent" path="Tabs and Indents" hit="Indent size" />
    <option name="size" path="Tabs and Indents" hit="Indent size" />
    <option name="etc" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="for" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="if" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="indent" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="parentheses" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="statement" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="while" path="Indentation and Alignment" hit="Indent statement (if, while, for, etc) parentheses" />
    <option name="indent" path="Tabs and Indents" hit="Indent style" />
    <option name="style" path="Tabs and Indents" hit="Indent style" />
    <option name="indentation" path="Indentation and Alignment" hit="Indentation" />
    <option name="initialization" path="Syntax Style" hit="Initialization" />
    <option name="arguments" path="Indentation and Alignment" hit="Initializer list arguments" />
    <option name="initializer" path="Indentation and Alignment" hit="Initializer list arguments" />
    <option name="list" path="Indentation and Alignment" hit="Initializer list arguments" />
    <option name="arrangement" path="Line Breaks and Wrapping" hit="Keep existing arrangement of enumeration" />
    <option name="enumeration" path="Line Breaks and Wrapping" hit="Keep existing arrangement of enumeration" />
    <option name="existing" path="Line Breaks and Wrapping" hit="Keep existing arrangement of enumeration" />
    <option name="keep" path="Line Breaks and Wrapping" hit="Keep existing arrangement of enumeration" />
    <option name="of" path="Line Breaks and Wrapping" hit="Keep existing arrangement of enumeration" />
    <option name="breaks" path="Line Breaks and Wrapping" hit="Keep existing line breaks" />
    <option name="existing" path="Line Breaks and Wrapping" hit="Keep existing line breaks" />
    <option name="keep" path="Line Breaks and Wrapping" hit="Keep existing line breaks" />
    <option name="line" path="Line Breaks and Wrapping" hit="Keep existing line breaks" />
    <option name="blank" path="Blank Lines" hit="Keep max blank lines in code" />
    <option name="code" path="Blank Lines" hit="Keep max blank lines in code" />
    <option name="in" path="Blank Lines" hit="Keep max blank lines in code" />
    <option name="keep" path="Blank Lines" hit="Keep max blank lines in code" />
    <option name="lines" path="Blank Lines" hit="Keep max blank lines in code" />
    <option name="max" path="Blank Lines" hit="Keep max blank lines in code" />
    <option name="blank" path="Blank Lines" hit="Keep max blank lines in declarations" />
    <option name="declarations" path="Blank Lines" hit="Keep max blank lines in declarations" />
    <option name="in" path="Blank Lines" hit="Keep max blank lines in declarations" />
    <option name="keep" path="Blank Lines" hit="Keep max blank lines in declarations" />
    <option name="lines" path="Blank Lines" hit="Keep max blank lines in declarations" />
    <option name="max" path="Blank Lines" hit="Keep max blank lines in declarations" />
    <option name="compound" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="in" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="keep" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="line" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="one" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="simple" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="statements" path="Braces Layout" hit="Keep simple compound statements in one line" />
    <option name="expression" path="Braces Layout" hit="Lambda expression" />
    <option name="lambda" path="Braces Layout" hit="Lambda expression" />
    <option name="line" path="Line Breaks and Wrapping" hit="Line Wrapping" />
    <option name="wrapping" path="Line Breaks and Wrapping" hit="Line Wrapping" />
    <option name="at" path="Line Breaks and Wrapping" hit="Line feed at end of file" />
    <option name="end" path="Line Breaks and Wrapping" hit="Line feed at end of file" />
    <option name="feed" path="Line Breaks and Wrapping" hit="Line feed at end of file" />
    <option name="file" path="Line Breaks and Wrapping" hit="Line feed at end of file" />
    <option name="line" path="Line Breaks and Wrapping" hit="Line feed at end of file" />
    <option name="of" path="Line Breaks and Wrapping" hit="Line feed at end of file" />
    <option name="linkage" path="Braces Layout" hit="Linkage specifications" />
    <option name="specifications" path="Braces Layout" hit="Linkage specifications" />
    <option name="local" path="Naming" hit="Local variables" />
    <option name="variables" path="Naming" hit="Local variables" />
    <option name="macros" path="Naming" hit="Macros" />
    <option name="a" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="enumeration" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="line" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="max" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="members" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="on" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="single" path="Line Breaks and Wrapping" hit="Max enumeration members on a single line" />
    <option name="in" path="Indentation and Alignment" hit="Member initializers in member initializer lists" />
    <option name="initializer" path="Indentation and Alignment" hit="Member initializers in member initializer lists" />
    <option name="initializers" path="Indentation and Alignment" hit="Member initializers in member initializer lists" />
    <option name="lists" path="Indentation and Alignment" hit="Member initializers in member initializer lists" />
    <option name="member" path="Indentation and Alignment" hit="Member initializers in member initializer lists" />
    <option name="declaration" path="Braces Layout" hit="Namespace declaration" />
    <option name="namespace" path="Braces Layout" hit="Namespace declaration" />
    <option name="namespaces" path="Naming" hit="Namespaces" />
    <option name="namespaces" path="Syntax Style" hit="Nested namespaces" />
    <option name="nested" path="Syntax Style" hit="Nested namespaces" />
    <option name="cv-qualifiers" path="Syntax Style" hit="Order of cv-qualifiers" />
    <option name="of" path="Syntax Style" hit="Order of cv-qualifiers" />
    <option name="order" path="Syntax Style" hit="Order of cv-qualifiers" />
    <option name="other" path="Spaces" hit="Other" />
    <option name="braces" path="Braces Layout" hit="Other braces" />
    <option name="other" path="Braces Layout" hit="Other braces" />
    <option name="constants" path="Naming" hit="Other constants" />
    <option name="other" path="Naming" hit="Other constants" />
    <option name="and" path="Braces Layout" hit="Other statements and blocks" />
    <option name="blocks" path="Braces Layout" hit="Other statements and blocks" />
    <option name="other" path="Braces Layout" hit="Other statements and blocks" />
    <option name="statements" path="Braces Layout" hit="Other statements and blocks" />
    <option name="-" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="and" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="calls" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="chained" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="in" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="method" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="outdent" path="Indentation and Alignment" hit="Outdent '.' and '-&gt;' in chained method calls" />
    <option name="commas" path="Indentation and Alignment" hit="Outdent commas" />
    <option name="outdent" path="Indentation and Alignment" hit="Outdent commas" />
    <option name="functions" path="Syntax Style" hit="Overriding Functions" />
    <option name="overriding" path="Syntax Style" hit="Overriding Functions" />
    <option name="parameters" path="Naming" hit="Parameters" />
    <option name="a" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="after" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="catch" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="compound" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="line" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="new" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="on" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="place" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="statement" path="Line Breaks and Wrapping" hit="Place 'catch' on a new line after a compound statement" />
    <option name="a" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="after" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="compound" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="else" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="line" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="new" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="on" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="place" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="statement" path="Line Breaks and Wrapping" hit="Place 'else' on a new line after a compound statement" />
    <option name="a" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="after" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="compound" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="line" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="new" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="on" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="place" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="statement" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="while" path="Line Breaks and Wrapping" hit="Place 'while' on a new line after a compound statement" />
    <option name="at" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="code" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="column" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="commenting" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="comments" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="first" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="out" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="place" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="the" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="when" path="Indentation and Alignment" hit="Place comments at the first column when commenting out code" />
    <option name="enumeration" path="Line Breaks and Wrapping" hit="Place enumeration on single line" />
    <option name="line" path="Line Breaks and Wrapping" hit="Place enumeration on single line" />
    <option name="on" path="Line Breaks and Wrapping" hit="Place enumeration on single line" />
    <option name="place" path="Line Breaks and Wrapping" hit="Place enumeration on single line" />
    <option name="single" path="Line Breaks and Wrapping" hit="Place enumeration on single line" />
    <option name="definitions" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="line" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="namespace" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="on" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="place" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="same" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="the" path="Braces Layout" hit="Place namespace definitions on the same line" />
    <option name="line" path="Line Breaks and Wrapping" hit="Place on New Line" />
    <option name="new" path="Line Breaks and Wrapping" hit="Place on New Line" />
    <option name="on" path="Line Breaks and Wrapping" hit="Place on New Line" />
    <option name="place" path="Line Breaks and Wrapping" hit="Place on New Line" />
    <option name="cv-qualifiers" path="Syntax Style" hit="Placement of cv-qualifiers" />
    <option name="of" path="Syntax Style" hit="Placement of cv-qualifiers" />
    <option name="placement" path="Syntax Style" hit="Placement of cv-qualifiers" />
    <option name="cv-qualifiers" path="Syntax Style" hit="Position of cv-Qualifiers" />
    <option name="of" path="Syntax Style" hit="Position of cv-Qualifiers" />
    <option name="position" path="Syntax Style" hit="Position of cv-Qualifiers" />
    <option name="declarations" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="forward" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="if" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="possible" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="prefer" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="to" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="use" path="Syntax Style" hit="Prefer to use forward declarations if possible" />
    <option name="after" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in declaration" />
    <option name="declaration" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in declaration" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in declaration" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in declaration" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in declaration" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in declaration" />
    <option name="after" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in invocation" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in invocation" />
    <option name="invocation" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in invocation" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in invocation" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in invocation" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap after '(' in invocation" />
    <option name="after" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="lists" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap after '{' in initializer lists" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in declaration" />
    <option name="declaration" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in declaration" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in declaration" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in declaration" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in declaration" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in declaration" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in invocation" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in invocation" />
    <option name="invocation" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in invocation" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in invocation" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in invocation" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before '(' in invocation" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in declaration" />
    <option name="declaration" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in declaration" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in declaration" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in declaration" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in declaration" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in declaration" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in invocation" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in invocation" />
    <option name="invocation" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in invocation" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in invocation" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in invocation" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before ')' in invocation" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before ','" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before ','" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before ','" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before ','" />
    <option name="base" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="clause" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before ',' in base clause" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before ':'" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before ':'" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before ':'" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before ':'" />
    <option name="and" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="expressions" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="ternary" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before '?' and ':' in ternary expressions" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="in" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="lists" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before '}' in initializer lists" />
    <option name="before" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="c++" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="cli" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="constraint" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="first" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="generic" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="prefer" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="to" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Prefer to wrap before first C++/CLI generic constraint" />
    <option name="aliases" path="Syntax Style" hit="Prefer typedefs or type aliases" />
    <option name="or" path="Syntax Style" hit="Prefer typedefs or type aliases" />
    <option name="prefer" path="Syntax Style" hit="Prefer typedefs or type aliases" />
    <option name="type" path="Syntax Style" hit="Prefer typedefs or type aliases" />
    <option name="typedefs" path="Syntax Style" hit="Prefer typedefs or type aliases" />
    <option name="data" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="in" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="initialization" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="initializers" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="member" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="non-static" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="prefer" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="uniform" path="Syntax Style" hit="Prefer uniform initialization in non-static data member initializers" />
    <option name="directives" path="Indentation and Alignment" hit="Preprocessor directives indenting" />
    <option name="indenting" path="Indentation and Alignment" hit="Preprocessor directives indenting" />
    <option name="preprocessor" path="Indentation and Alignment" hit="Preprocessor directives indenting" />
    <option name="existing" path="Blank Lines" hit="Preserve Existing Formatting" />
    <option name="formatting" path="Blank Lines" hit="Preserve Existing Formatting" />
    <option name="preserve" path="Blank Lines" hit="Preserve Existing Formatting" />
    <option name="before" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="comment" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="end" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="line" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="of" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="preserve" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="spaces" path="Spaces" hit="Preserve spaces before end of line comment" />
    <option name="properties" path="Naming" hit="Properties" />
    <option name="clang-format" path="General" hit="Read code style from .clang-format files" />
    <option name="code" path="General" hit="Read code style from .clang-format files" />
    <option name="files" path="General" hit="Read code style from .clang-format files" />
    <option name="from" path="General" hit="Read code style from .clang-format files" />
    <option name="read" path="General" hit="Read code style from .clang-format files" />
    <option name="style" path="General" hit="Read code style from .clang-format files" />
    <option name="a" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="block" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="ending" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="expression" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="for" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="macros" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="regular" path="Braces Layout" hit="Regular expression for macros ending a block" />
    <option name="a" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="block" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="expression" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="for" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="macros" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="regular" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="starting" path="Braces Layout" hit="Regular expression for macros starting a block" />
    <option name="after" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="and" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="before" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="blank" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="code" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="in" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="lines" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="remove" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in code" />
    <option name="after" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="and" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="before" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="blank" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="declarations" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="in" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="lines" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="remove" path="Blank Lines" hit="Remove blank lines after '{' and before '}' in declarations" />
    <option name="braces" path="Syntax Style" hit="Remove redundant braces" />
    <option name="redundant" path="Syntax Style" hit="Remove redundant braces" />
    <option name="remove" path="Syntax Style" hit="Remove redundant braces" />
    <option name="expressions" path="Braces Layout" hit="Requires expressions" />
    <option name="requires" path="Braces Layout" hit="Requires expressions" />
    <option name="format" path="Unreal Engine" hit="Slate Format Options" />
    <option name="options" path="Unreal Engine" hit="Slate Format Options" />
    <option name="slate" path="Unreal Engine" hit="Slate Format Options" />
    <option name="directives" path="Syntax Style" hit="Sort include directives" />
    <option name="include" path="Syntax Style" hit="Sort include directives" />
    <option name="sort" path="Syntax Style" hit="Sort include directives" />
    <option name="by" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="initialization" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="initializers" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="member" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="of" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="order" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="sort" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="the" path="Syntax Style" hit="Sort member initializers by the order of initialization" />
    <option name="destructors" path="Syntax Style" hit="Specifiers to use on overriding destructors" />
    <option name="on" path="Syntax Style" hit="Specifiers to use on overriding destructors" />
    <option name="overriding" path="Syntax Style" hit="Specifiers to use on overriding destructors" />
    <option name="specifiers" path="Syntax Style" hit="Specifiers to use on overriding destructors" />
    <option name="to" path="Syntax Style" hit="Specifiers to use on overriding destructors" />
    <option name="use" path="Syntax Style" hit="Specifiers to use on overriding destructors" />
    <option name="functions" path="Syntax Style" hit="Specifiers to use on overriding functions" />
    <option name="on" path="Syntax Style" hit="Specifiers to use on overriding functions" />
    <option name="overriding" path="Syntax Style" hit="Specifiers to use on overriding functions" />
    <option name="specifiers" path="Syntax Style" hit="Specifiers to use on overriding functions" />
    <option name="to" path="Syntax Style" hit="Specifiers to use on overriding functions" />
    <option name="use" path="Syntax Style" hit="Specifiers to use on overriding functions" />
    <option name="auto" path="Syntax Style" hit="Suggest Using 'auto' in Variable Types" />
    <option name="in" path="Syntax Style" hit="Suggest Using 'auto' in Variable Types" />
    <option name="suggest" path="Syntax Style" hit="Suggest Using 'auto' in Variable Types" />
    <option name="types" path="Syntax Style" hit="Suggest Using 'auto' in Variable Types" />
    <option name="using" path="Syntax Style" hit="Suggest Using 'auto' in Variable Types" />
    <option name="variable" path="Syntax Style" hit="Suggest Using 'auto' in Variable Types" />
    <option name="tab" path="Tabs and Indents" hit="Tab width" />
    <option name="width" path="Tabs and Indents" hit="Tab width" />
    <option name="and" path="Tabs and Indents" hit="Tabs and Indents" />
    <option name="indents" path="Tabs and Indents" hit="Tabs and Indents" />
    <option name="tabs" path="Tabs and Indents" hit="Tabs and Indents" />
    <option name="arguments" path="Indentation and Alignment" hit="Template arguments" />
    <option name="template" path="Indentation and Alignment" hit="Template arguments" />
    <option name="parameters" path="Naming" hit="Template parameters" />
    <option name="template" path="Naming" hit="Template parameters" />
    <option name="declaration" path="Indentation and Alignment" hit="Template parameters in template declaration" />
    <option name="in" path="Indentation and Alignment" hit="Template parameters in template declaration" />
    <option name="parameters" path="Indentation and Alignment" hit="Template parameters in template declaration" />
    <option name="template" path="Indentation and Alignment" hit="Template parameters in template declaration" />
    <option name="declaration" path="Braces Layout" hit="Type declaration" />
    <option name="type" path="Braces Layout" hit="Type declaration" />
    <option name="directives" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="in" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="include" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="of" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="slashes" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="to" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="type" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="use" path="Syntax Style" hit="Type of slashes to use in include directives" />
    <option name="typedefs" path="Naming" hit="Typedefs" />
    <option name="members" path="Naming" hit="Union members" />
    <option name="union" path="Naming" hit="Union members" />
    <option name="unions" path="Naming" hit="Unions" />
    <option name="also" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="and" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="autodetection" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="be" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="can" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="clang-format" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="code" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="configuration" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="configured" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="files" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="format" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="formatter" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="formatting" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="from" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="inspections" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="it" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="manually" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="or" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="read" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="rider" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="run" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="settings" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="to" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="use" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="via" path="General" hit="Use Rider formatter to format code and run formatting inspections. It can be configured manually or via autodetection. It can also read formatting settings from .clang-format configuration files." />
    <option name="angle" path="Syntax Style" hit="Use angle brackets instead of quotes" />
    <option name="brackets" path="Syntax Style" hit="Use angle brackets instead of quotes" />
    <option name="instead" path="Syntax Style" hit="Use angle brackets instead of quotes" />
    <option name="of" path="Syntax Style" hit="Use angle brackets instead of quotes" />
    <option name="quotes" path="Syntax Style" hit="Use angle brackets instead of quotes" />
    <option name="use" path="Syntax Style" hit="Use angle brackets instead of quotes" />
    <option name="and" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="be" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="bundled" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="clang-format" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="code" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="disabled" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="effect" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="external" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="format" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="formatting" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="inspections" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="not" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="options" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="or" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="rider" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="take" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="to" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="use" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="will" path="General" hit="Use bundled or external clang-format to format code. Rider formatting options will not take effect and formatting inspections will be disabled." />
    <option name="and" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="continuous" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="declaration" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="function" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="in" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="indent" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="invocation" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="line" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="parentheses" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="use" path="Indentation and Alignment" hit="Use continuous line indent in function declaration and invocation parentheses" />
    <option name="continuous" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="in" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="indent" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="initializer" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="line" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="lists" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="use" path="Indentation and Alignment" hit="Use continuous line indent in initializer lists" />
    <option name="file" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="paths" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="relative" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="source" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="the" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="to" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="use" path="Syntax Style" hit="Use paths relative to the source file" />
    <option name="in" path="Syntax Style" hit="Use uniform initialization in member initializers" />
    <option name="initialization" path="Syntax Style" hit="Use uniform initialization in member initializers" />
    <option name="initializers" path="Syntax Style" hit="Use uniform initialization in member initializers" />
    <option name="member" path="Syntax Style" hit="Use uniform initialization in member initializers" />
    <option name="uniform" path="Syntax Style" hit="Use uniform initialization in member initializers" />
    <option name="use" path="Syntax Style" hit="Use uniform initialization in member initializers" />
    <option name="angle" path="Spaces" hit="Within angle brackets in template arguments" />
    <option name="arguments" path="Spaces" hit="Within angle brackets in template arguments" />
    <option name="brackets" path="Spaces" hit="Within angle brackets in template arguments" />
    <option name="in" path="Spaces" hit="Within angle brackets in template arguments" />
    <option name="template" path="Spaces" hit="Within angle brackets in template arguments" />
    <option name="within" path="Spaces" hit="Within angle brackets in template arguments" />
    <option name="angle" path="Spaces" hit="Within angle brackets in template parameters" />
    <option name="brackets" path="Spaces" hit="Within angle brackets in template parameters" />
    <option name="in" path="Spaces" hit="Within angle brackets in template parameters" />
    <option name="parameters" path="Spaces" hit="Within angle brackets in template parameters" />
    <option name="template" path="Spaces" hit="Within angle brackets in template parameters" />
    <option name="within" path="Spaces" hit="Within angle brackets in template parameters" />
    <option name="array" path="Spaces" hit="Within array subscript brackets" />
    <option name="brackets" path="Spaces" hit="Within array subscript brackets" />
    <option name="subscript" path="Spaces" hit="Within array subscript brackets" />
    <option name="within" path="Spaces" hit="Within array subscript brackets" />
    <option name="angle" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="brackets" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="empty" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="in" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="parameters" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="template" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="within" path="Spaces" hit="Within empty angle brackets in template parameters" />
    <option name="blocks" path="Spaces" hit="Within empty blocks" />
    <option name="empty" path="Spaces" hit="Within empty blocks" />
    <option name="within" path="Spaces" hit="Within empty blocks" />
    <option name="and" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="call" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="empty" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="function" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="in" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="initialization" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="parentheses" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="within" path="Spaces" hit="Within empty parentheses in function call and initialization" />
    <option name="empty" path="Spaces" hit="Within empty parentheses in function parameters" />
    <option name="function" path="Spaces" hit="Within empty parentheses in function parameters" />
    <option name="in" path="Spaces" hit="Within empty parentheses in function parameters" />
    <option name="parameters" path="Spaces" hit="Within empty parentheses in function parameters" />
    <option name="parentheses" path="Spaces" hit="Within empty parentheses in function parameters" />
    <option name="within" path="Spaces" hit="Within empty parentheses in function parameters" />
    <option name="braces" path="Spaces" hit="Within empty uniform initialization braces" />
    <option name="empty" path="Spaces" hit="Within empty uniform initialization braces" />
    <option name="initialization" path="Spaces" hit="Within empty uniform initialization braces" />
    <option name="uniform" path="Spaces" hit="Within empty uniform initialization braces" />
    <option name="within" path="Spaces" hit="Within empty uniform initialization braces" />
    <option name="parentheses" path="Spaces" hit="Within parentheses" />
    <option name="within" path="Spaces" hit="Within parentheses" />
    <option name="cast" path="Spaces" hit="Within parentheses in cast expressions" />
    <option name="expressions" path="Spaces" hit="Within parentheses in cast expressions" />
    <option name="in" path="Spaces" hit="Within parentheses in cast expressions" />
    <option name="parentheses" path="Spaces" hit="Within parentheses in cast expressions" />
    <option name="within" path="Spaces" hit="Within parentheses in cast expressions" />
    <option name="and" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="call" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="function" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="in" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="initialization" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="parentheses" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="within" path="Spaces" hit="Within parentheses in function call and initialization" />
    <option name="function" path="Spaces" hit="Within parentheses in function parameters" />
    <option name="in" path="Spaces" hit="Within parentheses in function parameters" />
    <option name="parameters" path="Spaces" hit="Within parentheses in function parameters" />
    <option name="parentheses" path="Spaces" hit="Within parentheses in function parameters" />
    <option name="within" path="Spaces" hit="Within parentheses in function parameters" />
    <option name="braces" path="Spaces" hit="Within uniform initialization braces" />
    <option name="initialization" path="Spaces" hit="Within uniform initialization braces" />
    <option name="uniform" path="Spaces" hit="Within uniform initialization braces" />
    <option name="within" path="Spaces" hit="Within uniform initialization braces" />
    <option name="binary" path="Unreal Engine" hit="Wrap Slate binary expressions" />
    <option name="expressions" path="Unreal Engine" hit="Wrap Slate binary expressions" />
    <option name="slate" path="Unreal Engine" hit="Wrap Slate binary expressions" />
    <option name="wrap" path="Unreal Engine" hit="Wrap Slate binary expressions" />
    <option name="calls" path="Unreal Engine" hit="Wrap Slate chained calls" />
    <option name="chained" path="Unreal Engine" hit="Wrap Slate chained calls" />
    <option name="slate" path="Unreal Engine" hit="Wrap Slate chained calls" />
    <option name="wrap" path="Unreal Engine" hit="Wrap Slate chained calls" />
    <option name="base" path="Line Breaks and Wrapping" hit="Wrap base classes list" />
    <option name="classes" path="Line Breaks and Wrapping" hit="Wrap base classes list" />
    <option name="list" path="Line Breaks and Wrapping" hit="Wrap base classes list" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap base classes list" />
    <option name="braced" path="Line Breaks and Wrapping" hit="Wrap braced initializer list" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Wrap braced initializer list" />
    <option name="list" path="Line Breaks and Wrapping" hit="Wrap braced initializer list" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap braced initializer list" />
    <option name="constructor" path="Line Breaks and Wrapping" hit="Wrap constructor initializer" />
    <option name="initializer" path="Line Breaks and Wrapping" hit="Wrap constructor initializer" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap constructor initializer" />
    <option name="definition" path="Line Breaks and Wrapping" hit="Wrap enum definition" />
    <option name="enum" path="Line Breaks and Wrapping" hit="Wrap enum definition" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap enum definition" />
    <option name="formal" path="Line Breaks and Wrapping" hit="Wrap formal parameters" />
    <option name="parameters" path="Line Breaks and Wrapping" hit="Wrap formal parameters" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap formal parameters" />
    <option name="arguments" path="Line Breaks and Wrapping" hit="Wrap invocation arguments" />
    <option name="invocation" path="Line Breaks and Wrapping" hit="Wrap invocation arguments" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap invocation arguments" />
    <option name="lines" path="Line Breaks and Wrapping" hit="Wrap long lines" />
    <option name="long" path="Line Breaks and Wrapping" hit="Wrap long lines" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap long lines" />
    <option name="c++" path="Line Breaks and Wrapping" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="cli" path="Line Breaks and Wrapping" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="constraints" path="Line Breaks and Wrapping" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="generic" path="Line Breaks and Wrapping" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="multiple" path="Line Breaks and Wrapping" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap multiple C++/CLI generic constraints" />
    <option name="expression" path="Line Breaks and Wrapping" hit="Wrap ternary expression" />
    <option name="ternary" path="Line Breaks and Wrapping" hit="Wrap ternary expression" />
    <option name="wrap" path="Line Breaks and Wrapping" hit="Wrap ternary expression" />
    <option name="clang-format" path="General" hit="Write current style to .clang-format…" />
    <option name="current" path="General" hit="Write current style to .clang-format…" />
    <option name="style" path="General" hit="Write current style to .clang-format…" />
    <option name="to" path="General" hit="Write current style to .clang-format…" />
    <option name="write" path="General" hit="Write current style to .clang-format…" />
    <option name="iddqd" path="Unreal Engine" hit="iddqd" />
  </configurable>
  <configurable id="Inspections-C++" configurable_name="C++">
    <option name="#pragma-messages" hit="#pragma-messages clang diagnostic" />
    <option name="clang" hit="#pragma-messages clang diagnostic" />
    <option name="diagnostic" hit="#pragma-messages clang diagnostic" />
    <option name="#warning" hit="#warning directive" />
    <option name="directive" hit="#warning directive" />
    <option name="#warnings" hit="#warnings clang diagnostic" />
    <option name="clang" hit="#warnings clang diagnostic" />
    <option name="diagnostic" hit="#warnings clang diagnostic" />
    <option name="" hit="'contains' member function can be used" />
    <option name="be" hit="'contains' member function can be used" />
    <option name="can" hit="'contains' member function can be used" />
    <option name="contains" hit="'contains' member function can be used" />
    <option name="function" hit="'contains' member function can be used" />
    <option name="member" hit="'contains' member function can be used" />
    <option name="used" hit="'contains' member function can be used" />
    <option name="" hit="'if' can be replaced by 'if consteval'" />
    <option name="be" hit="'if' can be replaced by 'if consteval'" />
    <option name="by" hit="'if' can be replaced by 'if consteval'" />
    <option name="can" hit="'if' can be replaced by 'if consteval'" />
    <option name="consteval" hit="'if' can be replaced by 'if consteval'" />
    <option name="if" hit="'if' can be replaced by 'if consteval'" />
    <option name="replaced" hit="'if' can be replaced by 'if consteval'" />
    <option name="" hit="'long' floats are not allowed by the C++ standard" />
    <option name="allowed" hit="'long' floats are not allowed by the C++ standard" />
    <option name="are" hit="'long' floats are not allowed by the C++ standard" />
    <option name="by" hit="'long' floats are not allowed by the C++ standard" />
    <option name="c++" hit="'long' floats are not allowed by the C++ standard" />
    <option name="floats" hit="'long' floats are not allowed by the C++ standard" />
    <option name="long" hit="'long' floats are not allowed by the C++ standard" />
    <option name="not" hit="'long' floats are not allowed by the C++ standard" />
    <option name="standard" hit="'long' floats are not allowed by the C++ standard" />
    <option name="the" hit="'long' floats are not allowed by the C++ standard" />
    <option name="" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="be" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="can" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="erase" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="eraseif" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="idiom" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="instead" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="of" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="remove-erase" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="std" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="the" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="used" hit="'std::erase'/'std::eraseif' can be used instead of the remove-erase idiom" />
    <option name="" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="always" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="constant" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="evaluate" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="isconstantevaluated" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="std" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="to" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="will" hit="'std::isconstantevaluated' will always evaluate to constant" />
    <option name="" hit=".NET Core" />
    <option name="core" hit=".NET Core" />
    <option name="net" hit=".NET Core" />
    <option name="a" hit="A function or a lambda with non-void return type should return a value" />
    <option name="function" hit="A function or a lambda with non-void return type should return a value" />
    <option name="lambda" hit="A function or a lambda with non-void return type should return a value" />
    <option name="non-void" hit="A function or a lambda with non-void return type should return a value" />
    <option name="or" hit="A function or a lambda with non-void return type should return a value" />
    <option name="return" hit="A function or a lambda with non-void return type should return a value" />
    <option name="should" hit="A function or a lambda with non-void return type should return a value" />
    <option name="type" hit="A function or a lambda with non-void return type should return a value" />
    <option name="value" hit="A function or a lambda with non-void return type should return a value" />
    <option name="with" hit="A function or a lambda with non-void return type should return a value" />
    <option name="abstract" hit="Abstract final class" />
    <option name="class" hit="Abstract final class" />
    <option name="final" hit="Abstract final class" />
    <option name="access" hit="Access specifier does not affect any declaration" />
    <option name="affect" hit="Access specifier does not affect any declaration" />
    <option name="any" hit="Access specifier does not affect any declaration" />
    <option name="declaration" hit="Access specifier does not affect any declaration" />
    <option name="does" hit="Access specifier does not affect any declaration" />
    <option name="not" hit="Access specifier does not affect any declaration" />
    <option name="specifier" hit="Access specifier does not affect any declaration" />
    <option name="access" hit="Access specifier does not change accessibility level" />
    <option name="accessibility" hit="Access specifier does not change accessibility level" />
    <option name="change" hit="Access specifier does not change accessibility level" />
    <option name="does" hit="Access specifier does not change accessibility level" />
    <option name="level" hit="Access specifier does not change accessibility level" />
    <option name="not" hit="Access specifier does not change accessibility level" />
    <option name="specifier" hit="Access specifier does not change accessibility level" />
    <option name="action" hit="Action with this name does not exist" />
    <option name="does" hit="Action with this name does not exist" />
    <option name="exist" hit="Action with this name does not exist" />
    <option name="name" hit="Action with this name does not exist" />
    <option name="not" hit="Action with this name does not exist" />
    <option name="this" hit="Action with this name does not exist" />
    <option name="with" hit="Action with this name does not exist" />
    <option name="adding" hit="Adding cv-qualifiers to references has no effect" />
    <option name="cv-qualifiers" hit="Adding cv-qualifiers to references has no effect" />
    <option name="effect" hit="Adding cv-qualifiers to references has no effect" />
    <option name="has" hit="Adding cv-qualifiers to references has no effect" />
    <option name="no" hit="Adding cv-qualifiers to references has no effect" />
    <option name="references" hit="Adding cv-qualifiers to references has no effect" />
    <option name="to" hit="Adding cv-qualifiers to references has no effect" />
    <option name="a" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="accepting" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="algorithm" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="an" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="and" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="be" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="can" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="count" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="iterator" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="used" hit="Algorithm accepting an iterator and a count can be used" />
    <option name="algorithm" hit="Algorithm operating on ranges can be used" />
    <option name="be" hit="Algorithm operating on ranges can be used" />
    <option name="can" hit="Algorithm operating on ranges can be used" />
    <option name="on" hit="Algorithm operating on ranges can be used" />
    <option name="operating" hit="Algorithm operating on ranges can be used" />
    <option name="ranges" hit="Algorithm operating on ranges can be used" />
    <option name="used" hit="Algorithm operating on ranges can be used" />
    <option name="angle" hit="Around angle brackets" />
    <option name="around" hit="Around angle brackets" />
    <option name="brackets" hit="Around angle brackets" />
    <option name="around" hit="Around braces" />
    <option name="braces" hit="Around braces" />
    <option name="around" hit="Around child statement" />
    <option name="child" hit="Around child statement" />
    <option name="statement" hit="Around child statement" />
    <option name="around" hit="Around colon" />
    <option name="colon" hit="Around colon" />
    <option name="around" hit="Around comma" />
    <option name="comma" hit="Around comma" />
    <option name="around" hit="Around comma in lists" />
    <option name="comma" hit="Around comma in lists" />
    <option name="in" hit="Around comma in lists" />
    <option name="lists" hit="Around comma in lists" />
    <option name="around" hit="Around declaration braces" />
    <option name="braces" hit="Around declaration braces" />
    <option name="declaration" hit="Around declaration braces" />
    <option name="around" hit="Around empty braces" />
    <option name="braces" hit="Around empty braces" />
    <option name="empty" hit="Around empty braces" />
    <option name="around" hit="Around expression braces" />
    <option name="braces" hit="Around expression braces" />
    <option name="expression" hit="Around expression braces" />
    <option name="access" hit="Around member access symbols" />
    <option name="around" hit="Around member access symbols" />
    <option name="member" hit="Around member access symbols" />
    <option name="symbols" hit="Around member access symbols" />
    <option name="around" hit="Around namespace braces" />
    <option name="braces" hit="Around namespace braces" />
    <option name="namespace" hit="Around namespace braces" />
    <option name="around" hit="Around operator symbols" />
    <option name="operator" hit="Around operator symbols" />
    <option name="symbols" hit="Around operator symbols" />
    <option name="around" hit="Around parenthesis" />
    <option name="parenthesis" hit="Around parenthesis" />
    <option name="around" hit="Around semicolon" />
    <option name="semicolon" hit="Around semicolon" />
    <option name="a" hit="Around square brackets within a statement" />
    <option name="around" hit="Around square brackets within a statement" />
    <option name="brackets" hit="Around square brackets within a statement" />
    <option name="square" hit="Around square brackets within a statement" />
    <option name="statement" hit="Around square brackets within a statement" />
    <option name="within" hit="Around square brackets within a statement" />
    <option name="around" hit="Around statement braces" />
    <option name="braces" hit="Around statement braces" />
    <option name="statement" hit="Around statement braces" />
    <option name="around" hit="Around switch statement" />
    <option name="statement" hit="Around switch statement" />
    <option name="switch" hit="Around switch statement" />
    <option name="assigned" hit="Assigned value is never used" />
    <option name="is" hit="Assigned value is never used" />
    <option name="never" hit="Assigned value is never used" />
    <option name="used" hit="Assigned value is never used" />
    <option name="value" hit="Assigned value is never used" />
    <option name="a" hit="Awaiter type is not a class" />
    <option name="awaiter" hit="Awaiter type is not a class" />
    <option name="class" hit="Awaiter type is not a class" />
    <option name="is" hit="Awaiter type is not a class" />
    <option name="not" hit="Awaiter type is not a class" />
    <option name="type" hit="Awaiter type is not a class" />
    <option name="axis" hit="Axis with this name does not exist" />
    <option name="does" hit="Axis with this name does not exist" />
    <option name="exist" hit="Axis with this name does not exist" />
    <option name="name" hit="Axis with this name does not exist" />
    <option name="not" hit="Axis with this name does not exist" />
    <option name="this" hit="Axis with this name does not exist" />
    <option name="with" hit="Axis with this name does not exist" />
    <option name="and" hit="Backslash and newline are separated by space" />
    <option name="are" hit="Backslash and newline are separated by space" />
    <option name="backslash" hit="Backslash and newline are separated by space" />
    <option name="by" hit="Backslash and newline are separated by space" />
    <option name="newline" hit="Backslash and newline are separated by space" />
    <option name="separated" hit="Backslash and newline are separated by space" />
    <option name="space" hit="Backslash and newline are separated by space" />
    <option name="and" hit="Between keyword and parenthesis" />
    <option name="between" hit="Between keyword and parenthesis" />
    <option name="keyword" hit="Between keyword and parenthesis" />
    <option name="parenthesis" hit="Between keyword and parenthesis" />
    <option name="acts" hit="Binary operator acts on equal operands" />
    <option name="binary" hit="Binary operator acts on equal operands" />
    <option name="equal" hit="Binary operator acts on equal operands" />
    <option name="on" hit="Binary operator acts on equal operands" />
    <option name="operands" hit="Binary operator acts on equal operands" />
    <option name="operator" hit="Binary operator acts on equal operands" />
    <option name="acts" hit="Binary operator acts on identical operands" />
    <option name="binary" hit="Binary operator acts on identical operands" />
    <option name="identical" hit="Binary operator acts on identical operands" />
    <option name="on" hit="Binary operator acts on identical operands" />
    <option name="operands" hit="Binary operator acts on identical operands" />
    <option name="operator" hit="Binary operator acts on identical operands" />
    <option name="binding" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="c++" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="extension" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="is" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="l-value" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="microsoft" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="non-standard" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="r-value" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="reference" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="to" hit="Binding r-value to l-value reference is non-standard Microsoft C++ extension" />
    <option name="are" hit="Blank lines are missing elsewhere" />
    <option name="blank" hit="Blank lines are missing elsewhere" />
    <option name="elsewhere" hit="Blank lines are missing elsewhere" />
    <option name="lines" hit="Blank lines are missing elsewhere" />
    <option name="missing" hit="Blank lines are missing elsewhere" />
    <option name="are" hit="Blank lines are redundant elsewhere" />
    <option name="blank" hit="Blank lines are redundant elsewhere" />
    <option name="elsewhere" hit="Blank lines are redundant elsewhere" />
    <option name="lines" hit="Blank lines are redundant elsewhere" />
    <option name="redundant" hit="Blank lines are redundant elsewhere" />
    <option name="be" hit="BlueprintCallable function can be made const" />
    <option name="blueprintcallable" hit="BlueprintCallable function can be made const" />
    <option name="can" hit="BlueprintCallable function can be made const" />
    <option name="const" hit="BlueprintCallable function can be made const" />
    <option name="function" hit="BlueprintCallable function can be made const" />
    <option name="made" hit="BlueprintCallable function can be made const" />
    <option name="be" hit="BlueprintCallable function can be made static" />
    <option name="blueprintcallable" hit="BlueprintCallable function can be made static" />
    <option name="can" hit="BlueprintCallable function can be made static" />
    <option name="function" hit="BlueprintCallable function can be made static" />
    <option name="made" hit="BlueprintCallable function can be made static" />
    <option name="static" hit="BlueprintCallable function can be made static" />
    <option name="blueprint" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="blueprintcallable" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="c++" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="code" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="function" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="in" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="is" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="never" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="or" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="used" hit="BlueprintCallable function is never used in Blueprint or C++ code" />
    <option name="any" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="blueprint" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="blueprintimplementableevent" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="function" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="implemented" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="in" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="is" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="not" hit="BlueprintImplementableEvent function is not implemented in any blueprint" />
    <option name="c++" hit="C++" />
    <option name="c++" hit="C++ standard library headers not found" />
    <option name="found" hit="C++ standard library headers not found" />
    <option name="headers" hit="C++ standard library headers not found" />
    <option name="library" hit="C++ standard library headers not found" />
    <option name="not" hit="C++ standard library headers not found" />
    <option name="standard" hit="C++ standard library headers not found" />
    <option name="a" hit="C-style cast is used instead of a C++ cast" />
    <option name="c++" hit="C-style cast is used instead of a C++ cast" />
    <option name="c-style" hit="C-style cast is used instead of a C++ cast" />
    <option name="cast" hit="C-style cast is used instead of a C++ cast" />
    <option name="instead" hit="C-style cast is used instead of a C++ cast" />
    <option name="is" hit="C-style cast is used instead of a C++ cast" />
    <option name="of" hit="C-style cast is used instead of a C++ cast" />
    <option name="used" hit="C-style cast is used instead of a C++ cast" />
    <option name="cfstring-literal" hit="CFString-literal clang diagnostic" />
    <option name="clang" hit="CFString-literal clang diagnostic" />
    <option name="diagnostic" hit="CFString-literal clang diagnostic" />
    <option name="c++" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="call" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="constructor" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="copy" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="copy-initialization" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="deleted" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="during" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="elided" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="extension" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="is" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="microsoft" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="non-standard" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="of" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="this" hit="Call of deleted copy constructor elided during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="a" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="at" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="call" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="compile" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="constructor" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="destructor" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="function" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="inside" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="is" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="resolved" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="time" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="to" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="virtual" hit="Call to a virtual function inside a constructor/destructor is resolved at compile time" />
    <option name="a" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="call" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="constructor" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="destructor" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="function" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="in" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="inside" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="pure" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="result" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="to" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="virtual" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="will" hit="Call to a virtual function inside a constructor/destructor will result in a pure virtual function call" />
    <option name="a" hit="Cannot resolve a required coroutine function" />
    <option name="cannot" hit="Cannot resolve a required coroutine function" />
    <option name="coroutine" hit="Cannot resolve a required coroutine function" />
    <option name="function" hit="Cannot resolve a required coroutine function" />
    <option name="required" hit="Cannot resolve a required coroutine function" />
    <option name="resolve" hit="Cannot resolve a required coroutine function" />
    <option name="c++" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="casting" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="extension" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="from" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="is" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="microsoft" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="non-standard" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="nullptr" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="pointer" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="reinterpretcast" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="to" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="type" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="with" hit="Casting from nullptr to pointer type with reinterpretcast is non-standard Microsoft C++ extension" />
    <option name="clang" hit="Clang Diagnostics" />
    <option name="diagnostics" hit="Clang Diagnostics" />
    <option name="analyzer" hit="Clang Static Analyzer Checks" />
    <option name="checks" hit="Clang Static Analyzer Checks" />
    <option name="clang" hit="Clang Static Analyzer Checks" />
    <option name="static" hit="Clang Static Analyzer Checks" />
    <option name="clang" hit="Clang compiler error" />
    <option name="compiler" hit="Clang compiler error" />
    <option name="error" hit="Clang compiler error" />
    <option name="checks" hit="Clang-Tidy Checks" />
    <option name="clang-tidy" hit="Clang-Tidy Checks" />
    <option name="be" hit="Class can be made final" />
    <option name="can" hit="Class can be made final" />
    <option name="class" hit="Class can be made final" />
    <option name="final" hit="Class can be made final" />
    <option name="made" hit="Class can be made final" />
    <option name="abstract" hit="Class is abstract but not explicitly declared as such" />
    <option name="as" hit="Class is abstract but not explicitly declared as such" />
    <option name="but" hit="Class is abstract but not explicitly declared as such" />
    <option name="class" hit="Class is abstract but not explicitly declared as such" />
    <option name="declared" hit="Class is abstract but not explicitly declared as such" />
    <option name="explicitly" hit="Class is abstract but not explicitly declared as such" />
    <option name="is" hit="Class is abstract but not explicitly declared as such" />
    <option name="not" hit="Class is abstract but not explicitly declared as such" />
    <option name="such" hit="Class is abstract but not explicitly declared as such" />
    <option name="class" hit="Class is never used" />
    <option name="is" hit="Class is never used" />
    <option name="never" hit="Class is never used" />
    <option name="used" hit="Class is never used" />
    <option name="a" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="base" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="class" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="from" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="function" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="hiding" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="member" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="non-virtual" hit="Class member function hiding a non-virtual function from a base class" />
    <option name="a" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="an" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="because" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="class" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="constructor" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="data" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="have" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="member" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="of" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="should" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="uninitialized" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="user-defined" hit="Class should have a user-defined constructor because of an uninitialized data member" />
    <option name="and" hit="Common Practices and Code Improvements" />
    <option name="code" hit="Common Practices and Code Improvements" />
    <option name="common" hit="Common Practices and Code Improvements" />
    <option name="improvements" hit="Common Practices and Code Improvements" />
    <option name="practices" hit="Common Practices and Code Improvements" />
    <option name="0" hit="Comparison of unsigned expression with 0" />
    <option name="comparison" hit="Comparison of unsigned expression with 0" />
    <option name="expression" hit="Comparison of unsigned expression with 0" />
    <option name="of" hit="Comparison of unsigned expression with 0" />
    <option name="unsigned" hit="Comparison of unsigned expression with 0" />
    <option name="with" hit="Comparison of unsigned expression with 0" />
    <option name="be" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="can" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="compile-time" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="constant" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="either" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="expression" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="false" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="or" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="replaced" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="true" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="with" hit="Compile-time constant expression can be replaced with either 'true' or 'false'" />
    <option name="compiler" hit="Compiler Warnings" />
    <option name="warnings" hit="Compiler Warnings" />
    <option name="concept" hit="Concept is never used" />
    <option name="is" hit="Concept is never used" />
    <option name="never" hit="Concept is never used" />
    <option name="used" hit="Concept is never used" />
    <option name="be" hit="Conditional expression can be simplified" />
    <option name="can" hit="Conditional expression can be simplified" />
    <option name="conditional" hit="Conditional expression can be simplified" />
    <option name="expression" hit="Conditional expression can be simplified" />
    <option name="simplified" hit="Conditional expression can be simplified" />
    <option name="a" hit="Const-qualified parameter in a function declaration" />
    <option name="const-qualified" hit="Const-qualified parameter in a function declaration" />
    <option name="declaration" hit="Const-qualified parameter in a function declaration" />
    <option name="function" hit="Const-qualified parameter in a function declaration" />
    <option name="in" hit="Const-qualified parameter in a function declaration" />
    <option name="parameter" hit="Const-qualified parameter in a function declaration" />
    <option name="constraints" hit="Constraints Violations" />
    <option name="violations" hit="Constraints Violations" />
    <option name="constructor" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="function" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="instead" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="is" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="its" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="make" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="of" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="pointer" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="smart" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="used" hit="Constructor of smart pointer is used instead of its make function" />
    <option name="and" hit="Declaration and assignment can be joined" />
    <option name="assignment" hit="Declaration and assignment can be joined" />
    <option name="be" hit="Declaration and assignment can be joined" />
    <option name="can" hit="Declaration and assignment can be joined" />
    <option name="declaration" hit="Declaration and assignment can be joined" />
    <option name="joined" hit="Declaration and assignment can be joined" />
    <option name="anything" hit="Declaration does not declare anything" />
    <option name="declaration" hit="Declaration does not declare anything" />
    <option name="declare" hit="Declaration does not declare anything" />
    <option name="does" hit="Declaration does not declare anything" />
    <option name="not" hit="Declaration does not declare anything" />
    <option name="a" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="class" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="declaration" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="final" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="function" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="in" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="non-overriding" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="of" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="or" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="sealed" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="virtual" hit="Declaration of a non-overriding virtual function in a final or sealed class" />
    <option name="declaration" hit="Declaration specifier with no declarators" />
    <option name="declarators" hit="Declaration specifier with no declarators" />
    <option name="no" hit="Declaration specifier with no declarators" />
    <option name="specifier" hit="Declaration specifier with no declarators" />
    <option name="with" hit="Declaration specifier with no declarators" />
    <option name="a" hit="Declarator disambiguated as a function declaration" />
    <option name="as" hit="Declarator disambiguated as a function declaration" />
    <option name="declaration" hit="Declarator disambiguated as a function declaration" />
    <option name="declarator" hit="Declarator disambiguated as a function declaration" />
    <option name="disambiguated" hit="Declarator disambiguated as a function declaration" />
    <option name="function" hit="Declarator disambiguated as a function declaration" />
    <option name="declarator" hit="Declarator is never used" />
    <option name="is" hit="Declarator is never used" />
    <option name="never" hit="Declarator is never used" />
    <option name="used" hit="Declarator is never used" />
    <option name="accessed" hit="Declarator is only assigned but never accessed" />
    <option name="assigned" hit="Declarator is only assigned but never accessed" />
    <option name="but" hit="Declarator is only assigned but never accessed" />
    <option name="declarator" hit="Declarator is only assigned but never accessed" />
    <option name="is" hit="Declarator is only assigned but never accessed" />
    <option name="never" hit="Declarator is only assigned but never accessed" />
    <option name="only" hit="Declarator is only assigned but never accessed" />
    <option name="all" hit="Declarator is reassigned in all paths before being read" />
    <option name="before" hit="Declarator is reassigned in all paths before being read" />
    <option name="being" hit="Declarator is reassigned in all paths before being read" />
    <option name="declarator" hit="Declarator is reassigned in all paths before being read" />
    <option name="in" hit="Declarator is reassigned in all paths before being read" />
    <option name="is" hit="Declarator is reassigned in all paths before being read" />
    <option name="paths" hit="Declarator is reassigned in all paths before being read" />
    <option name="read" hit="Declarator is reassigned in all paths before being read" />
    <option name="reassigned" hit="Declarator is reassigned in all paths before being read" />
    <option name="context" hit="Declarator is used only in unevaluated context" />
    <option name="declarator" hit="Declarator is used only in unevaluated context" />
    <option name="in" hit="Declarator is used only in unevaluated context" />
    <option name="is" hit="Declarator is used only in unevaluated context" />
    <option name="only" hit="Declarator is used only in unevaluated context" />
    <option name="unevaluated" hit="Declarator is used only in unevaluated context" />
    <option name="used" hit="Declarator is used only in unevaluated context" />
    <option name="a" hit="Default case is not handled in a switch statement" />
    <option name="case" hit="Default case is not handled in a switch statement" />
    <option name="default" hit="Default case is not handled in a switch statement" />
    <option name="handled" hit="Default case is not handled in a switch statement" />
    <option name="in" hit="Default case is not handled in a switch statement" />
    <option name="is" hit="Default case is not handled in a switch statement" />
    <option name="not" hit="Default case is not handled in a switch statement" />
    <option name="statement" hit="Default case is not handled in a switch statement" />
    <option name="switch" hit="Default case is not handled in a switch statement" />
    <option name="a" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="const-qualified" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="constructor" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="default" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="initialization" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="object" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="of" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="type" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="user-provided" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="without" hit="Default initialization of a const-qualified object of a type without a user-provided default constructor" />
    <option name="defaulted" hit="Defaulted special member function is implicitly deleted" />
    <option name="deleted" hit="Defaulted special member function is implicitly deleted" />
    <option name="function" hit="Defaulted special member function is implicitly deleted" />
    <option name="implicitly" hit="Defaulted special member function is implicitly deleted" />
    <option name="is" hit="Defaulted special member function is implicitly deleted" />
    <option name="member" hit="Defaulted special member function is implicitly deleted" />
    <option name="special" hit="Defaulted special member function is implicitly deleted" />
    <option name="a" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="are" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="by" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="constructors" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="core" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="delegate" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="member" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="net" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="parameter" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="pointer" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="unsupported" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="with" hit="Delegate constructors with a member pointer parameter are unsupported by .NET Core" />
    <option name="a" hit="Deleting a void pointer" />
    <option name="deleting" hit="Deleting a void pointer" />
    <option name="pointer" hit="Deleting a void pointer" />
    <option name="void" hit="Deleting a void pointer" />
    <option name="dependent" hit="Dependent template without 'template' keyword" />
    <option name="keyword" hit="Dependent template without 'template' keyword" />
    <option name="template" hit="Dependent template without 'template' keyword" />
    <option name="without" hit="Dependent template without 'template' keyword" />
    <option name="dependent" hit="Dependent type without 'typename' keyword" />
    <option name="keyword" hit="Dependent type without 'typename' keyword" />
    <option name="type" hit="Dependent type without 'typename' keyword" />
    <option name="typename" hit="Dependent type without 'typename' keyword" />
    <option name="without" hit="Dependent type without 'typename' keyword" />
    <option name="class" hit="Deprecated 'register' storage class specifier" />
    <option name="deprecated" hit="Deprecated 'register' storage class specifier" />
    <option name="register" hit="Deprecated 'register' storage class specifier" />
    <option name="specifier" hit="Deprecated 'register' storage class specifier" />
    <option name="storage" hit="Deprecated 'register' storage class specifier" />
    <option name="dereference" hit="Dereference operator limit is exceeded" />
    <option name="exceeded" hit="Dereference operator limit is exceeded" />
    <option name="is" hit="Dereference operator limit is exceeded" />
    <option name="limit" hit="Dereference operator limit is exceeded" />
    <option name="operator" hit="Dereference operator limit is exceeded" />
    <option name="description" hit="Description" />
    <option name="braces" hit="Enforce braces in 'do-while' statement" />
    <option name="do-while" hit="Enforce braces in 'do-while' statement" />
    <option name="enforce" hit="Enforce braces in 'do-while' statement" />
    <option name="in" hit="Enforce braces in 'do-while' statement" />
    <option name="statement" hit="Enforce braces in 'do-while' statement" />
    <option name="braces" hit="Enforce braces in 'for' statement" />
    <option name="enforce" hit="Enforce braces in 'for' statement" />
    <option name="for" hit="Enforce braces in 'for' statement" />
    <option name="in" hit="Enforce braces in 'for' statement" />
    <option name="statement" hit="Enforce braces in 'for' statement" />
    <option name="braces" hit="Enforce braces in 'if' statement" />
    <option name="enforce" hit="Enforce braces in 'if' statement" />
    <option name="if" hit="Enforce braces in 'if' statement" />
    <option name="in" hit="Enforce braces in 'if' statement" />
    <option name="statement" hit="Enforce braces in 'if' statement" />
    <option name="braces" hit="Enforce braces in 'while' statement" />
    <option name="enforce" hit="Enforce braces in 'while' statement" />
    <option name="in" hit="Enforce braces in 'while' statement" />
    <option name="statement" hit="Enforce braces in 'while' statement" />
    <option name="while" hit="Enforce braces in 'while' statement" />
    <option name="declaration" hit="Enforce function declaration style" />
    <option name="enforce" hit="Enforce function declaration style" />
    <option name="function" hit="Enforce function declaration style" />
    <option name="style" hit="Enforce function declaration style" />
    <option name="enforce" hit="Enforce nested namespaces style" />
    <option name="namespaces" hit="Enforce nested namespaces style" />
    <option name="nested" hit="Enforce nested namespaces style" />
    <option name="style" hit="Enforce nested namespaces style" />
    <option name="destructor" hit="Enforce overriding destructor style" />
    <option name="enforce" hit="Enforce overriding destructor style" />
    <option name="overriding" hit="Enforce overriding destructor style" />
    <option name="style" hit="Enforce overriding destructor style" />
    <option name="enforce" hit="Enforce overriding function style" />
    <option name="function" hit="Enforce overriding function style" />
    <option name="overriding" hit="Enforce overriding function style" />
    <option name="style" hit="Enforce overriding function style" />
    <option name="cv-qualifiers" hit="Enforce the order of cv-qualifiers" />
    <option name="enforce" hit="Enforce the order of cv-qualifiers" />
    <option name="of" hit="Enforce the order of cv-qualifiers" />
    <option name="order" hit="Enforce the order of cv-qualifiers" />
    <option name="the" hit="Enforce the order of cv-qualifiers" />
    <option name="cv-qualifiers" hit="Enforce the placement of cv-qualifiers" />
    <option name="enforce" hit="Enforce the placement of cv-qualifiers" />
    <option name="of" hit="Enforce the placement of cv-qualifiers" />
    <option name="placement" hit="Enforce the placement of cv-qualifiers" />
    <option name="the" hit="Enforce the placement of cv-qualifiers" />
    <option name="alias" hit="Enforce type alias code style" />
    <option name="code" hit="Enforce type alias code style" />
    <option name="enforce" hit="Enforce type alias code style" />
    <option name="style" hit="Enforce type alias code style" />
    <option name="type" hit="Enforce type alias code style" />
    <option name="deprecated" hit="Entity is deprecated" />
    <option name="entity" hit="Entity is deprecated" />
    <option name="is" hit="Entity is deprecated" />
    <option name="enumerator" hit="Enumerator is never used" />
    <option name="is" hit="Enumerator is never used" />
    <option name="never" hit="Enumerator is never used" />
    <option name="used" hit="Enumerator is never used" />
    <option name="explicit" hit="Explicit specialization in non-namespace scope" />
    <option name="in" hit="Explicit specialization in non-namespace scope" />
    <option name="non-namespace" hit="Explicit specialization in non-namespace scope" />
    <option name="scope" hit="Explicit specialization in non-namespace scope" />
    <option name="specialization" hit="Explicit specialization in non-namespace scope" />
    <option name="be" hit="Expression can be simplified" />
    <option name="can" hit="Expression can be simplified" />
    <option name="expression" hit="Expression can be simplified" />
    <option name="simplified" hit="Expression can be simplified" />
    <option name="a" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="as" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="constant" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="evaluates" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="expression" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="is" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="null" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="pointer" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="that" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="to" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="used" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="zero" hit="Expression that evaluates to zero is used as a null pointer constant" />
    <option name="a" hit="Final function in a final class" />
    <option name="class" hit="Final function in a final class" />
    <option name="final" hit="Final function in a final class" />
    <option name="function" hit="Final function in a final class" />
    <option name="in" hit="Final function in a final class" />
    <option name="final" hit="Final non-overriding virtual function" />
    <option name="function" hit="Final non-overriding virtual function" />
    <option name="non-overriding" hit="Final non-overriding virtual function" />
    <option name="virtual" hit="Final non-overriding virtual function" />
    <option name="be" hit="For-loop can be replaced with while-loop" />
    <option name="can" hit="For-loop can be replaced with while-loop" />
    <option name="for-loop" hit="For-loop can be replaced with while-loop" />
    <option name="replaced" hit="For-loop can be replaced with while-loop" />
    <option name="while-loop" hit="For-loop can be replaced with while-loop" />
    <option name="with" hit="For-loop can be replaced with while-loop" />
    <option name="formatting" hit="Formatting" />
    <option name="declaration" hit="Forward enum declaration without underlying type" />
    <option name="enum" hit="Forward enum declaration without underlying type" />
    <option name="forward" hit="Forward enum declaration without underlying type" />
    <option name="type" hit="Forward enum declaration without underlying type" />
    <option name="underlying" hit="Forward enum declaration without underlying type" />
    <option name="without" hit="Forward enum declaration without underlying type" />
    <option name="function" hit="Function is not implemented" />
    <option name="implemented" hit="Function is not implemented" />
    <option name="is" hit="Function is not implemented" />
    <option name="not" hit="Function is not implemented" />
    <option name="be" hit="Function result should be used" />
    <option name="function" hit="Function result should be used" />
    <option name="result" hit="Function result should be used" />
    <option name="should" hit="Function result should be used" />
    <option name="used" hit="Function result should be used" />
    <option name="by" hit="Function returns by const value" />
    <option name="const" hit="Function returns by const value" />
    <option name="function" hit="Function returns by const value" />
    <option name="returns" hit="Function returns by const value" />
    <option name="value" hit="Function returns by const value" />
    <option name="a" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="c++" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="cast" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="functional-style" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="instead" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="is" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="of" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="used" hit="Functional-style cast is used instead of a C++ cast" />
    <option name="already" hit="Guarded header has already been included" />
    <option name="been" hit="Guarded header has already been included" />
    <option name="guarded" hit="Guarded header has already been included" />
    <option name="has" hit="Guarded header has already been included" />
    <option name="header" hit="Guarded header has already been included" />
    <option name="included" hit="Guarded header has already been included" />
    <option name="an" hit="Hiding an uncaptured local declaration" />
    <option name="declaration" hit="Hiding an uncaptured local declaration" />
    <option name="hiding" hit="Hiding an uncaptured local declaration" />
    <option name="local" hit="Hiding an uncaptured local declaration" />
    <option name="uncaptured" hit="Hiding an uncaptured local declaration" />
    <option name="declaration" hit="Hiding local declaration" />
    <option name="hiding" hit="Hiding local declaration" />
    <option name="local" hit="Hiding local declaration" />
    <option name="be" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="can" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="condition" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="constant" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="constexpr" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="if" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="replaced" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="statement" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="with" hit="If statement with constant condition can be replaced with 'if constexpr'" />
    <option name="conversion" hit="Implicit conversion to incompatible pointer type" />
    <option name="implicit" hit="Implicit conversion to incompatible pointer type" />
    <option name="incompatible" hit="Implicit conversion to incompatible pointer type" />
    <option name="pointer" hit="Implicit conversion to incompatible pointer type" />
    <option name="to" hit="Implicit conversion to incompatible pointer type" />
    <option name="type" hit="Implicit conversion to incompatible pointer type" />
    <option name="conversion" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="implicit" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="loss" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="of" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="pointer" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="qualifiers" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="to" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="type" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="with" hit="Implicit conversion to pointer type with loss of qualifiers" />
    <option name="available" hit="Implicit default constructor is not available" />
    <option name="constructor" hit="Implicit default constructor is not available" />
    <option name="default" hit="Implicit default constructor is not available" />
    <option name="implicit" hit="Implicit default constructor is not available" />
    <option name="is" hit="Implicit default constructor is not available" />
    <option name="not" hit="Implicit default constructor is not available" />
    <option name="conversion" hit="Implicit integer to pointer conversion" />
    <option name="implicit" hit="Implicit integer to pointer conversion" />
    <option name="integer" hit="Implicit integer to pointer conversion" />
    <option name="pointer" hit="Implicit integer to pointer conversion" />
    <option name="to" hit="Implicit integer to pointer conversion" />
    <option name="conversion" hit="Implicit pointer to integer conversion" />
    <option name="implicit" hit="Implicit pointer to integer conversion" />
    <option name="integer" hit="Implicit pointer to integer conversion" />
    <option name="pointer" hit="Implicit pointer to integer conversion" />
    <option name="to" hit="Implicit pointer to integer conversion" />
    <option name="inconsistent" hit="Inconsistent Naming" />
    <option name="naming" hit="Inconsistent Naming" />
    <option name="engine" hit="Inconsistent Unreal Engine Naming" />
    <option name="inconsistent" hit="Inconsistent Unreal Engine Naming" />
    <option name="naming" hit="Inconsistent Unreal Engine Naming" />
    <option name="unreal" hit="Inconsistent Unreal Engine Naming" />
    <option name="engine" hit="Inconsistent Unreal Engine UCLASS Naming" />
    <option name="inconsistent" hit="Inconsistent Unreal Engine UCLASS Naming" />
    <option name="naming" hit="Inconsistent Unreal Engine UCLASS Naming" />
    <option name="uclass" hit="Inconsistent Unreal Engine UCLASS Naming" />
    <option name="unreal" hit="Inconsistent Unreal Engine UCLASS Naming" />
    <option name="blank" hit="Incorrect blank lines" />
    <option name="incorrect" hit="Incorrect blank lines" />
    <option name="lines" hit="Incorrect blank lines" />
    <option name="boost" hit="Incorrect format directive in boost::format" />
    <option name="directive" hit="Incorrect format directive in boost::format" />
    <option name="format" hit="Incorrect format directive in boost::format" />
    <option name="in" hit="Incorrect format directive in boost::format" />
    <option name="incorrect" hit="Incorrect format directive in boost::format" />
    <option name="incorrect" hit="Incorrect indent" />
    <option name="indent" hit="Incorrect indent" />
    <option name="incorrect" hit="Incorrect indent size" />
    <option name="indent" hit="Incorrect indent size" />
    <option name="size" hit="Incorrect indent size" />
    <option name="breaks" hit="Incorrect line breaks" />
    <option name="incorrect" hit="Incorrect line breaks" />
    <option name="line" hit="Incorrect line breaks" />
    <option name="blank" hit="Incorrect number of blank lines near braces" />
    <option name="braces" hit="Incorrect number of blank lines near braces" />
    <option name="incorrect" hit="Incorrect number of blank lines near braces" />
    <option name="lines" hit="Incorrect number of blank lines near braces" />
    <option name="near" hit="Incorrect number of blank lines near braces" />
    <option name="number" hit="Incorrect number of blank lines near braces" />
    <option name="of" hit="Incorrect number of blank lines near braces" />
    <option name="incorrect" hit="Incorrect spacing" />
    <option name="spacing" hit="Incorrect spacing" />
    <option name="bool" hit="Incrementing expression of type bool" />
    <option name="expression" hit="Incrementing expression of type bool" />
    <option name="incrementing" hit="Incrementing expression of type bool" />
    <option name="of" hit="Incrementing expression of type bool" />
    <option name="type" hit="Incrementing expression of type bool" />
    <option name="indent" hit="Indent level is not restored" />
    <option name="is" hit="Indent level is not restored" />
    <option name="level" hit="Indent level is not restored" />
    <option name="not" hit="Indent level is not restored" />
    <option name="restored" hit="Indent level is not restored" />
    <option name="clang" hit="IndependentClass-attribute clang diagnostic" />
    <option name="diagnostic" hit="IndependentClass-attribute clang diagnostic" />
    <option name="independentclass-attribute" hit="IndependentClass-attribute clang diagnostic" />
    <option name="format" hit="Invalid printf format specifier" />
    <option name="invalid" hit="Invalid printf format specifier" />
    <option name="printf" hit="Invalid printf format specifier" />
    <option name="specifier" hit="Invalid printf format specifier" />
    <option name="as" hit="Keyword 'default' is used as identifier" />
    <option name="default" hit="Keyword 'default' is used as identifier" />
    <option name="identifier" hit="Keyword 'default' is used as identifier" />
    <option name="is" hit="Keyword 'default' is used as identifier" />
    <option name="keyword" hit="Keyword 'default' is used as identifier" />
    <option name="used" hit="Keyword 'default' is used as identifier" />
    <option name="because" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="declaration" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="enclosing" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="export" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="is" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="keyword" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="redundant" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="there" hit="Keyword 'export' is redundant, because there is enclosing export declaration" />
    <option name="be" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="can" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="explicit" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="lambda" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="parameters" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="rewritten" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="template" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="to" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="use" hit="Lambda can be rewritten to use explicit template parameters" />
    <option name="capture" hit="Lambda capture is never used" />
    <option name="is" hit="Lambda capture is never used" />
    <option name="lambda" hit="Lambda capture is never used" />
    <option name="never" hit="Lambda capture is never used" />
    <option name="used" hit="Lambda capture is never used" />
    <option name="break" hit="Line break is missing elsewhere" />
    <option name="elsewhere" hit="Line break is missing elsewhere" />
    <option name="is" hit="Line break is missing elsewhere" />
    <option name="line" hit="Line break is missing elsewhere" />
    <option name="missing" hit="Line break is missing elsewhere" />
    <option name="break" hit="Line break is redundant elsewhere" />
    <option name="elsewhere" hit="Line break is redundant elsewhere" />
    <option name="is" hit="Line break is redundant elsewhere" />
    <option name="line" hit="Line break is redundant elsewhere" />
    <option name="redundant" hit="Line break is redundant elsewhere" />
    <option name="be" hit="Local variable can be made const" />
    <option name="can" hit="Local variable can be made const" />
    <option name="const" hit="Local variable can be made const" />
    <option name="local" hit="Local variable can be made const" />
    <option name="made" hit="Local variable can be made const" />
    <option name="variable" hit="Local variable can be made const" />
    <option name="but" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="destructor" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="have" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="in" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="is" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="its" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="local" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="may" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="never" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="side-effects" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="used" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="variable" hit="Local variable is never used, but may have side-effects in its destructor" />
    <option name="being" hit="Local variable is used without being initialized" />
    <option name="initialized" hit="Local variable is used without being initialized" />
    <option name="is" hit="Local variable is used without being initialized" />
    <option name="local" hit="Local variable is used without being initialized" />
    <option name="used" hit="Local variable is used without being initialized" />
    <option name="variable" hit="Local variable is used without being initialized" />
    <option name="without" hit="Local variable is used without being initialized" />
    <option name="be" hit="Local variable might not be initialized" />
    <option name="initialized" hit="Local variable might not be initialized" />
    <option name="local" hit="Local variable might not be initialized" />
    <option name="might" hit="Local variable might not be initialized" />
    <option name="not" hit="Local variable might not be initialized" />
    <option name="variable" hit="Local variable might not be initialized" />
    <option name="be" hit="May be missing keyword 'throw'" />
    <option name="keyword" hit="May be missing keyword 'throw'" />
    <option name="may" hit="May be missing keyword 'throw'" />
    <option name="missing" hit="May be missing keyword 'throw'" />
    <option name="throw" hit="May be missing keyword 'throw'" />
    <option name="be" hit="Member function can be made const" />
    <option name="can" hit="Member function can be made const" />
    <option name="const" hit="Member function can be made const" />
    <option name="function" hit="Member function can be made const" />
    <option name="made" hit="Member function can be made const" />
    <option name="member" hit="Member function can be made const" />
    <option name="be" hit="Member function can be made static" />
    <option name="can" hit="Member function can be made static" />
    <option name="function" hit="Member function can be made static" />
    <option name="made" hit="Member function can be made static" />
    <option name="member" hit="Member function can be made static" />
    <option name="static" hit="Member function can be made static" />
    <option name="bound" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="delegate" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="is" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="macro" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="marked" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="method" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="not" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="to" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="ufunction" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="with" hit="Method bound to delegate is not marked with UFUNCTION macro" />
    <option name="a" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="and" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="be" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="c++" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="cli" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="implement" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="interface" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="member" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="method" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="must" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="public" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="to" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="virtual" hit="Method must be public and virtual to implement a C++/CLI interface member" />
    <option name="class" hit="Mismatched class tags" />
    <option name="mismatched" hit="Mismatched class tags" />
    <option name="tags" hit="Mismatched class tags" />
    <option name="#pragma" hit="Missing a matching '#pragma endregion' directive" />
    <option name="a" hit="Missing a matching '#pragma endregion' directive" />
    <option name="directive" hit="Missing a matching '#pragma endregion' directive" />
    <option name="endregion" hit="Missing a matching '#pragma endregion' directive" />
    <option name="matching" hit="Missing a matching '#pragma endregion' directive" />
    <option name="missing" hit="Missing a matching '#pragma endregion' directive" />
    <option name="#pragma" hit="Missing a matching '#pragma region' directive" />
    <option name="a" hit="Missing a matching '#pragma region' directive" />
    <option name="directive" hit="Missing a matching '#pragma region' directive" />
    <option name="matching" hit="Missing a matching '#pragma region' directive" />
    <option name="missing" hit="Missing a matching '#pragma region' directive" />
    <option name="region" hit="Missing a matching '#pragma region' directive" />
    <option name="a" hit="Missing function parameter description in a documentation comment" />
    <option name="comment" hit="Missing function parameter description in a documentation comment" />
    <option name="description" hit="Missing function parameter description in a documentation comment" />
    <option name="documentation" hit="Missing function parameter description in a documentation comment" />
    <option name="function" hit="Missing function parameter description in a documentation comment" />
    <option name="in" hit="Missing function parameter description in a documentation comment" />
    <option name="missing" hit="Missing function parameter description in a documentation comment" />
    <option name="parameter" hit="Missing function parameter description in a documentation comment" />
    <option name="guard" hit="Missing include guard" />
    <option name="include" hit="Missing include guard" />
    <option name="missing" hit="Missing include guard" />
    <option name="elsewhere" hit="Missing indent/outdent elsewhere" />
    <option name="indent" hit="Missing indent/outdent elsewhere" />
    <option name="missing" hit="Missing indent/outdent elsewhere" />
    <option name="outdent" hit="Missing indent/outdent elsewhere" />
    <option name="applied" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="c++" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="conversion" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="copy-initialization" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="during" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="extension" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="implicit" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="is" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="microsoft" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="more" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="non-standard" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="one" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="than" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="this" hit="More than one implicit conversion applied during copy-initialization. This is non-standard Microsoft C++ extension." />
    <option name="character" hit="Multi-character character literal" />
    <option name="literal" hit="Multi-character character literal" />
    <option name="multi-character" hit="Multi-character character literal" />
    <option name="character" hit="Multi-character wide character literal" />
    <option name="literal" hit="Multi-character wide character literal" />
    <option name="multi-character" hit="Multi-character wide character literal" />
    <option name="wide" hit="Multi-character wide character literal" />
    <option name="are" hit="Multiple spaces are prohibited" />
    <option name="multiple" hit="Multiple spaces are prohibited" />
    <option name="prohibited" hit="Multiple spaces are prohibited" />
    <option name="spaces" hit="Multiple spaces are prohibited" />
    <option name="clang" hit="NSObject-attribute clang diagnostic" />
    <option name="diagnostic" hit="NSObject-attribute clang diagnostic" />
    <option name="nsobject-attribute" hit="NSObject-attribute clang diagnostic" />
    <option name="class" hit="Namespace definition containing single class specialization" />
    <option name="containing" hit="Namespace definition containing single class specialization" />
    <option name="definition" hit="Namespace definition containing single class specialization" />
    <option name="namespace" hit="Namespace definition containing single class specialization" />
    <option name="single" hit="Namespace definition containing single class specialization" />
    <option name="specialization" hit="Namespace definition containing single class specialization" />
    <option name="a" hit="No return statement in a function or a lambda returning non-void" />
    <option name="function" hit="No return statement in a function or a lambda returning non-void" />
    <option name="in" hit="No return statement in a function or a lambda returning non-void" />
    <option name="lambda" hit="No return statement in a function or a lambda returning non-void" />
    <option name="no" hit="No return statement in a function or a lambda returning non-void" />
    <option name="non-void" hit="No return statement in a function or a lambda returning non-void" />
    <option name="or" hit="No return statement in a function or a lambda returning non-void" />
    <option name="return" hit="No return statement in a function or a lambda returning non-void" />
    <option name="returning" hit="No return statement in a function or a lambda returning non-void" />
    <option name="statement" hit="No return statement in a function or a lambda returning non-void" />
    <option name="a" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="be" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="can" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="collection" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="destroyed" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="during" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="garbage" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="in" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="member" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="non-uproperty" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="object" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="pointer" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="resulting" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="stale" hit="Non-UProperty object member can be destroyed during garbage collection, resulting in a stale pointer" />
    <option name="conversion" hit="Non-explicit conversion operator" />
    <option name="non-explicit" hit="Non-explicit conversion operator" />
    <option name="operator" hit="Non-explicit conversion operator" />
    <option name="constructor" hit="Non-explicit converting constructor" />
    <option name="converting" hit="Non-explicit converting constructor" />
    <option name="non-explicit" hit="Non-explicit converting constructor" />
    <option name="a" hit="Non-inline function definition in a header file" />
    <option name="definition" hit="Non-inline function definition in a header file" />
    <option name="file" hit="Non-inline function definition in a header file" />
    <option name="function" hit="Non-inline function definition in a header file" />
    <option name="header" hit="Non-inline function definition in a header file" />
    <option name="in" hit="Non-inline function definition in a header file" />
    <option name="non-inline" hit="Non-inline function definition in a header file" />
    <option name="a" hit="Non-inline variable definition in a header file" />
    <option name="definition" hit="Non-inline variable definition in a header file" />
    <option name="file" hit="Non-inline variable definition in a header file" />
    <option name="header" hit="Non-inline variable definition in a header file" />
    <option name="in" hit="Non-inline variable definition in a header file" />
    <option name="non-inline" hit="Non-inline variable definition in a header file" />
    <option name="variable" hit="Non-inline variable definition in a header file" />
    <option name="acquisition" hit="Non-safe resource acquisition" />
    <option name="non-safe" hit="Non-safe resource acquisition" />
    <option name="resource" hit="Non-safe resource acquisition" />
    <option name="data" hit="Non-static data member is uninitialized" />
    <option name="is" hit="Non-static data member is uninitialized" />
    <option name="member" hit="Non-static data member is uninitialized" />
    <option name="non-static" hit="Non-static data member is uninitialized" />
    <option name="uninitialized" hit="Non-static data member is uninitialized" />
    <option name="a" hit="Non-virtual class member function hidden in a derived class" />
    <option name="class" hit="Non-virtual class member function hidden in a derived class" />
    <option name="derived" hit="Non-virtual class member function hidden in a derived class" />
    <option name="function" hit="Non-virtual class member function hidden in a derived class" />
    <option name="hidden" hit="Non-virtual class member function hidden in a derived class" />
    <option name="in" hit="Non-virtual class member function hidden in a derived class" />
    <option name="member" hit="Non-virtual class member function hidden in a derived class" />
    <option name="non-virtual" hit="Non-virtual class member function hidden in a derived class" />
    <option name="a" hit="Not all control paths return a value" />
    <option name="all" hit="Not all control paths return a value" />
    <option name="control" hit="Not all control paths return a value" />
    <option name="not" hit="Not all control paths return a value" />
    <option name="paths" hit="Not all control paths return a value" />
    <option name="return" hit="Not all control paths return a value" />
    <option name="value" hit="Not all control paths return a value" />
    <option name="a" hit="Not enough arguments in a call to boost::format" />
    <option name="arguments" hit="Not enough arguments in a call to boost::format" />
    <option name="boost" hit="Not enough arguments in a call to boost::format" />
    <option name="call" hit="Not enough arguments in a call to boost::format" />
    <option name="enough" hit="Not enough arguments in a call to boost::format" />
    <option name="format" hit="Not enough arguments in a call to boost::format" />
    <option name="in" hit="Not enough arguments in a call to boost::format" />
    <option name="not" hit="Not enough arguments in a call to boost::format" />
    <option name="to" hit="Not enough arguments in a call to boost::format" />
    <option name="a" hit="Not enough arguments in a call to printf" />
    <option name="arguments" hit="Not enough arguments in a call to printf" />
    <option name="call" hit="Not enough arguments in a call to printf" />
    <option name="enough" hit="Not enough arguments in a call to printf" />
    <option name="in" hit="Not enough arguments in a call to printf" />
    <option name="not" hit="Not enough arguments in a call to printf" />
    <option name="printf" hit="Not enough arguments in a call to printf" />
    <option name="to" hit="Not enough arguments in a call to printf" />
    <option name="c++" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="const" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="extension" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="initialized" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="is" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="local" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="microsoft" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="non-standard" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="not" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="of" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="scalar" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="static" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="this" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="type" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="variable" hit="Not initialized static const local variable of scalar type. This is non-standard Microsoft C++ extension." />
    <option name="auto" hit="Numeric type can be replaced with auto" />
    <option name="be" hit="Numeric type can be replaced with auto" />
    <option name="can" hit="Numeric type can be replaced with auto" />
    <option name="numeric" hit="Numeric type can be replaced with auto" />
    <option name="replaced" hit="Numeric type can be replaced with auto" />
    <option name="type" hit="Numeric type can be replaced with auto" />
    <option name="with" hit="Numeric type can be replaced with auto" />
    <option name="be" hit="Object member might not be initialized" />
    <option name="initialized" hit="Object member might not be initialized" />
    <option name="member" hit="Object member might not be initialized" />
    <option name="might" hit="Object member might not be initialized" />
    <option name="not" hit="Object member might not be initialized" />
    <option name="object" hit="Object member might not be initialized" />
    <option name="be" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="can" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="collection" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="destroyed" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="during" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="garbage" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="in" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="member" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="non-uproperty" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="objects" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="pointers" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="resulting" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="stale" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="stored" hit="Objects stored in non-uproperty member can be destroyed during garbage collection, resulting in stale pointers" />
    <option name="#include" hit="Order of #include directives does not match code style settings" />
    <option name="code" hit="Order of #include directives does not match code style settings" />
    <option name="directives" hit="Order of #include directives does not match code style settings" />
    <option name="does" hit="Order of #include directives does not match code style settings" />
    <option name="match" hit="Order of #include directives does not match code style settings" />
    <option name="not" hit="Order of #include directives does not match code style settings" />
    <option name="of" hit="Order of #include directives does not match code style settings" />
    <option name="order" hit="Order of #include directives does not match code style settings" />
    <option name="settings" hit="Order of #include directives does not match code style settings" />
    <option name="style" hit="Order of #include directives does not match code style settings" />
    <option name="does" hit="Order of member initializers does not match the initialization order" />
    <option name="initialization" hit="Order of member initializers does not match the initialization order" />
    <option name="initializers" hit="Order of member initializers does not match the initialization order" />
    <option name="match" hit="Order of member initializers does not match the initialization order" />
    <option name="member" hit="Order of member initializers does not match the initialization order" />
    <option name="not" hit="Order of member initializers does not match the initialization order" />
    <option name="of" hit="Order of member initializers does not match the initialization order" />
    <option name="order" hit="Order of member initializers does not match the initialization order" />
    <option name="the" hit="Order of member initializers does not match the initialization order" />
    <option name="boost" hit="Outdated format directive in boost::format" />
    <option name="directive" hit="Outdated format directive in boost::format" />
    <option name="format" hit="Outdated format directive in boost::format" />
    <option name="in" hit="Outdated format directive in boost::format" />
    <option name="outdated" hit="Outdated format directive in boost::format" />
    <option name="a" hit="Override function redefines a default parameter argument" />
    <option name="argument" hit="Override function redefines a default parameter argument" />
    <option name="default" hit="Override function redefines a default parameter argument" />
    <option name="function" hit="Override function redefines a default parameter argument" />
    <option name="override" hit="Override function redefines a default parameter argument" />
    <option name="parameter" hit="Override function redefines a default parameter argument" />
    <option name="redefines" hit="Override function redefines a default parameter argument" />
    <option name="be" hit="Parameter can be made const" />
    <option name="can" hit="Parameter can be made const" />
    <option name="const" hit="Parameter can be made const" />
    <option name="made" hit="Parameter can be made const" />
    <option name="parameter" hit="Parameter can be made const" />
    <option name="be" hit="Parameter can be made pointer/reference to const" />
    <option name="can" hit="Parameter can be made pointer/reference to const" />
    <option name="const" hit="Parameter can be made pointer/reference to const" />
    <option name="made" hit="Parameter can be made pointer/reference to const" />
    <option name="parameter" hit="Parameter can be made pointer/reference to const" />
    <option name="pointer" hit="Parameter can be made pointer/reference to const" />
    <option name="reference" hit="Parameter can be made pointer/reference to const" />
    <option name="to" hit="Parameter can be made pointer/reference to const" />
    <option name="always" hit="Parameter is always rewritten in function body before being read" />
    <option name="before" hit="Parameter is always rewritten in function body before being read" />
    <option name="being" hit="Parameter is always rewritten in function body before being read" />
    <option name="body" hit="Parameter is always rewritten in function body before being read" />
    <option name="function" hit="Parameter is always rewritten in function body before being read" />
    <option name="in" hit="Parameter is always rewritten in function body before being read" />
    <option name="is" hit="Parameter is always rewritten in function body before being read" />
    <option name="parameter" hit="Parameter is always rewritten in function body before being read" />
    <option name="read" hit="Parameter is always rewritten in function body before being read" />
    <option name="rewritten" hit="Parameter is always rewritten in function body before being read" />
    <option name="is" hit="Parameter is never used" />
    <option name="never" hit="Parameter is never used" />
    <option name="parameter" hit="Parameter is never used" />
    <option name="used" hit="Parameter is never used" />
    <option name="do" hit="Parameter names do not match" />
    <option name="match" hit="Parameter names do not match" />
    <option name="names" hit="Parameter names do not match" />
    <option name="not" hit="Parameter names do not match" />
    <option name="parameter" hit="Parameter names do not match" />
    <option name="by" hit="Pass value parameters by const reference" />
    <option name="const" hit="Pass value parameters by const reference" />
    <option name="parameters" hit="Pass value parameters by const reference" />
    <option name="pass" hit="Pass value parameters by const reference" />
    <option name="reference" hit="Pass value parameters by const reference" />
    <option name="value" hit="Pass value parameters by const reference" />
    <option name="class" hit="Polymorphic class with non-virtual public destructor" />
    <option name="destructor" hit="Polymorphic class with non-virtual public destructor" />
    <option name="non-virtual" hit="Polymorphic class with non-virtual public destructor" />
    <option name="polymorphic" hit="Polymorphic class with non-virtual public destructor" />
    <option name="public" hit="Polymorphic class with non-virtual public destructor" />
    <option name="with" hit="Polymorphic class with non-virtual public destructor" />
    <option name="and" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="arguments" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="boost" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="call" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="format" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="in" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="non-positional" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="positional" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="same" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="the" hit="Positional and non-positional arguments in the same boost::format call" />
    <option name="empty" hit="Possibly erroneous empty statement" />
    <option name="erroneous" hit="Possibly erroneous empty statement" />
    <option name="possibly" hit="Possibly erroneous empty statement" />
    <option name="statement" hit="Possibly erroneous empty statement" />
    <option name="erroneous" hit="Possibly erroneous expression without side-effects" />
    <option name="expression" hit="Possibly erroneous expression without side-effects" />
    <option name="possibly" hit="Possibly erroneous expression without side-effects" />
    <option name="side-effects" hit="Possibly erroneous expression without side-effects" />
    <option name="without" hit="Possibly erroneous expression without side-effects" />
    <option name="erroneous" hit="Possibly erroneous incomplete switch-statement" />
    <option name="incomplete" hit="Possibly erroneous incomplete switch-statement" />
    <option name="possibly" hit="Possibly erroneous incomplete switch-statement" />
    <option name="switch-statement" hit="Possibly erroneous incomplete switch-statement" />
    <option name="format" hit="Possibly invalid printf format specifier" />
    <option name="invalid" hit="Possibly invalid printf format specifier" />
    <option name="possibly" hit="Possibly invalid printf format specifier" />
    <option name="printf" hit="Possibly invalid printf format specifier" />
    <option name="specifier" hit="Possibly invalid printf format specifier" />
    <option name="class" hit="Possibly uninitialized class member" />
    <option name="member" hit="Possibly uninitialized class member" />
    <option name="possibly" hit="Possibly uninitialized class member" />
    <option name="uninitialized" hit="Possibly uninitialized class member" />
    <option name="declaration" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="in" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="incompatible" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="possibly" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="range" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="reference" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="type" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="unintended" hit="Possibly unintended incompatible reference type in range declaration" />
    <option name="object" hit="Possibly unintended object slicing" />
    <option name="possibly" hit="Possibly unintended object slicing" />
    <option name="slicing" hit="Possibly unintended object slicing" />
    <option name="unintended" hit="Possibly unintended object slicing" />
    <option name="#include" hit="Possibly unused #include directive" />
    <option name="directive" hit="Possibly unused #include directive" />
    <option name="possibly" hit="Possibly unused #include directive" />
    <option name="unused" hit="Possibly unused #include directive" />
    <option name="code" hit="Potential Code Quality Issues" />
    <option name="issues" hit="Potential Code Quality Issues" />
    <option name="potential" hit="Potential Code Quality Issues" />
    <option name="quality" hit="Potential Code Quality Issues" />
    <option name="found" hit="Precompiled header is not found" />
    <option name="header" hit="Precompiled header is not found" />
    <option name="is" hit="Precompiled header is not found" />
    <option name="not" hit="Precompiled header is not found" />
    <option name="precompiled" hit="Precompiled header is not found" />
    <option name="header" hit="Precompiled header is not included" />
    <option name="included" hit="Precompiled header is not included" />
    <option name="is" hit="Precompiled header is not included" />
    <option name="not" hit="Precompiled header is not included" />
    <option name="precompiled" hit="Precompiled header is not included" />
    <option name="function" hit="Private special member function is not implemented" />
    <option name="implemented" hit="Private special member function is not implemented" />
    <option name="is" hit="Private special member function is not implemented" />
    <option name="member" hit="Private special member function is not implemented" />
    <option name="not" hit="Private special member function is not implemented" />
    <option name="private" hit="Private special member function is not implemented" />
    <option name="special" hit="Private special member function is not implemented" />
    <option name="a" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="an" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="from" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="of" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="outer" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="parameter" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="redeclaration" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="scope" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="template" hit="Redeclaration of a template parameter from an outer scope" />
    <option name="code" hit="Redundancies in Code" />
    <option name="in" hit="Redundancies in Code" />
    <option name="redundancies" hit="Redundancies in Code" />
    <option name="const" hit="Redundant 'const' specifier" />
    <option name="redundant" hit="Redundant 'const' specifier" />
    <option name="specifier" hit="Redundant 'const' specifier" />
    <option name="else" hit="Redundant 'else' keyword" />
    <option name="keyword" hit="Redundant 'else' keyword" />
    <option name="redundant" hit="Redundant 'else' keyword" />
    <option name="compound" hit="Redundant 'else' keyword inside compound statement" />
    <option name="else" hit="Redundant 'else' keyword inside compound statement" />
    <option name="inside" hit="Redundant 'else' keyword inside compound statement" />
    <option name="keyword" hit="Redundant 'else' keyword inside compound statement" />
    <option name="redundant" hit="Redundant 'else' keyword inside compound statement" />
    <option name="statement" hit="Redundant 'else' keyword inside compound statement" />
    <option name="inline" hit="Redundant 'inline' specifier" />
    <option name="redundant" hit="Redundant 'inline' specifier" />
    <option name="specifier" hit="Redundant 'inline' specifier" />
    <option name="a" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="local" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="on" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="redundant" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="specifier" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="static" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="threadlocal" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="variable" hit="Redundant 'static' specifier on a 'threadlocal' local variable" />
    <option name="a" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="allocation" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="deallocation" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="function" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="member" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="on" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="redundant" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="specifier" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="static" hit="Redundant 'static' specifier on a member allocation/deallocation function" />
    <option name="an" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="anonymous" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="member" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="namespace" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="on" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="redundant" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="specifier" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="static" hit="Redundant 'static' specifier on an anonymous namespace member" />
    <option name="keyword" hit="Redundant 'template' keyword" />
    <option name="redundant" hit="Redundant 'template' keyword" />
    <option name="template" hit="Redundant 'template' keyword" />
    <option name="keyword" hit="Redundant 'typename' keyword" />
    <option name="redundant" hit="Redundant 'typename' keyword" />
    <option name="typename" hit="Redundant 'typename' keyword" />
    <option name="argument" hit="Redundant argument in conditional expression" />
    <option name="conditional" hit="Redundant argument in conditional expression" />
    <option name="expression" hit="Redundant argument in conditional expression" />
    <option name="in" hit="Redundant argument in conditional expression" />
    <option name="redundant" hit="Redundant argument in conditional expression" />
    <option name="access" hit="Redundant base class access specifier" />
    <option name="base" hit="Redundant base class access specifier" />
    <option name="class" hit="Redundant base class access specifier" />
    <option name="redundant" hit="Redundant base class access specifier" />
    <option name="specifier" hit="Redundant base class access specifier" />
    <option name="base" hit="Redundant base class initializer" />
    <option name="class" hit="Redundant base class initializer" />
    <option name="initializer" hit="Redundant base class initializer" />
    <option name="redundant" hit="Redundant base class initializer" />
    <option name="cast" hit="Redundant cast expression" />
    <option name="expression" hit="Redundant cast expression" />
    <option name="redundant" hit="Redundant cast expression" />
    <option name="conditional" hit="Redundant conditional expression" />
    <option name="expression" hit="Redundant conditional expression" />
    <option name="redundant" hit="Redundant conditional expression" />
    <option name="control" hit="Redundant control flow jump statement" />
    <option name="flow" hit="Redundant control flow jump statement" />
    <option name="jump" hit="Redundant control flow jump statement" />
    <option name="redundant" hit="Redundant control flow jump statement" />
    <option name="statement" hit="Redundant control flow jump statement" />
    <option name="address" hit="Redundant dereferencing and taking address" />
    <option name="and" hit="Redundant dereferencing and taking address" />
    <option name="dereferencing" hit="Redundant dereferencing and taking address" />
    <option name="redundant" hit="Redundant dereferencing and taking address" />
    <option name="taking" hit="Redundant dereferencing and taking address" />
    <option name="elaborated" hit="Redundant elaborated type specifier" />
    <option name="redundant" hit="Redundant elaborated type specifier" />
    <option name="specifier" hit="Redundant elaborated type specifier" />
    <option name="type" hit="Redundant elaborated type specifier" />
    <option name="declaration" hit="Redundant empty declaration" />
    <option name="empty" hit="Redundant empty declaration" />
    <option name="redundant" hit="Redundant empty declaration" />
    <option name="empty" hit="Redundant empty statement" />
    <option name="redundant" hit="Redundant empty statement" />
    <option name="statement" hit="Redundant empty statement" />
    <option name="elsewhere" hit="Redundant indent/outdent elsewhere" />
    <option name="indent" hit="Redundant indent/outdent elsewhere" />
    <option name="outdent" hit="Redundant indent/outdent elsewhere" />
    <option name="redundant" hit="Redundant indent/outdent elsewhere" />
    <option name="constructor" hit="Redundant member initializer in constructor initialization list" />
    <option name="in" hit="Redundant member initializer in constructor initialization list" />
    <option name="initialization" hit="Redundant member initializer in constructor initialization list" />
    <option name="initializer" hit="Redundant member initializer in constructor initialization list" />
    <option name="list" hit="Redundant member initializer in constructor initialization list" />
    <option name="member" hit="Redundant member initializer in constructor initialization list" />
    <option name="redundant" hit="Redundant member initializer in constructor initialization list" />
    <option name="declarator" hit="Redundant parameter list in lambda declarator" />
    <option name="in" hit="Redundant parameter list in lambda declarator" />
    <option name="lambda" hit="Redundant parameter list in lambda declarator" />
    <option name="list" hit="Redundant parameter list in lambda declarator" />
    <option name="parameter" hit="Redundant parameter list in lambda declarator" />
    <option name="redundant" hit="Redundant parameter list in lambda declarator" />
    <option name="parentheses" hit="Redundant parentheses" />
    <option name="redundant" hit="Redundant parentheses" />
    <option name="qualifier" hit="Redundant qualifier" />
    <option name="redundant" hit="Redundant qualifier" />
    <option name="arguments" hit="Redundant template arguments" />
    <option name="redundant" hit="Redundant template arguments" />
    <option name="template" hit="Redundant template arguments" />
    <option name="argument" hit="Redundant void argument list" />
    <option name="list" hit="Redundant void argument list" />
    <option name="redundant" hit="Redundant void argument list" />
    <option name="void" hit="Redundant void argument list" />
    <option name="a" hit="Redundant whitespaces at the end of a line" />
    <option name="at" hit="Redundant whitespaces at the end of a line" />
    <option name="end" hit="Redundant whitespaces at the end of a line" />
    <option name="line" hit="Redundant whitespaces at the end of a line" />
    <option name="of" hit="Redundant whitespaces at the end of a line" />
    <option name="redundant" hit="Redundant whitespaces at the end of a line" />
    <option name="the" hit="Redundant whitespaces at the end of a line" />
    <option name="whitespaces" hit="Redundant whitespaces at the end of a line" />
    <option name="aggregate" hit="Redundant zero initializer in aggregate initialization" />
    <option name="in" hit="Redundant zero initializer in aggregate initialization" />
    <option name="initialization" hit="Redundant zero initializer in aggregate initialization" />
    <option name="initializer" hit="Redundant zero initializer in aggregate initialization" />
    <option name="redundant" hit="Redundant zero initializer in aggregate initialization" />
    <option name="zero" hit="Redundant zero initializer in aggregate initialization" />
    <option name="class" hit="Reference class member with 'mutable' specifier" />
    <option name="member" hit="Reference class member with 'mutable' specifier" />
    <option name="mutable" hit="Reference class member with 'mutable' specifier" />
    <option name="reference" hit="Reference class member with 'mutable' specifier" />
    <option name="specifier" hit="Reference class member with 'mutable' specifier" />
    <option name="with" hit="Reference class member with 'mutable' specifier" />
    <option name="braces" hit="Remove redundant braces" />
    <option name="redundant" hit="Remove redundant braces" />
    <option name="remove" hit="Remove redundant braces" />
    <option name="a" hit="Result of a postfix operator is discarded" />
    <option name="discarded" hit="Result of a postfix operator is discarded" />
    <option name="is" hit="Result of a postfix operator is discarded" />
    <option name="of" hit="Result of a postfix operator is discarded" />
    <option name="operator" hit="Result of a postfix operator is discarded" />
    <option name="postfix" hit="Result of a postfix operator is discarded" />
    <option name="result" hit="Result of a postfix operator is discarded" />
    <option name="as" hit="Result of assignment is used as condition" />
    <option name="assignment" hit="Result of assignment is used as condition" />
    <option name="condition" hit="Result of assignment is used as condition" />
    <option name="is" hit="Result of assignment is used as condition" />
    <option name="of" hit="Result of assignment is used as condition" />
    <option name="result" hit="Result of assignment is used as condition" />
    <option name="used" hit="Result of assignment is used as condition" />
    <option name="function" hit="Result of nodiscard function is not used" />
    <option name="is" hit="Result of nodiscard function is not used" />
    <option name="nodiscard" hit="Result of nodiscard function is not used" />
    <option name="not" hit="Result of nodiscard function is not used" />
    <option name="of" hit="Result of nodiscard function is not used" />
    <option name="result" hit="Result of nodiscard function is not used" />
    <option name="used" hit="Result of nodiscard function is not used" />
    <option name="#include" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="code" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="directive" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="does" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="in" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="match" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="not" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="settings" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="slash" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="style" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="symbol" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="used" hit="Slash symbol used in #include directive does not match code style settings" />
    <option name="be" hit="Some object members might not be initialized" />
    <option name="initialized" hit="Some object members might not be initialized" />
    <option name="members" hit="Some object members might not be initialized" />
    <option name="might" hit="Some object members might not be initialized" />
    <option name="not" hit="Some object members might not be initialized" />
    <option name="object" hit="Some object members might not be initialized" />
    <option name="some" hit="Some object members might not be initialized" />
    <option name="elsewhere" hit="Space is missing elsewhere" />
    <option name="is" hit="Space is missing elsewhere" />
    <option name="missing" hit="Space is missing elsewhere" />
    <option name="space" hit="Space is missing elsewhere" />
    <option name="elsewhere" hit="Space is redundant elsewhere" />
    <option name="is" hit="Space is redundant elsewhere" />
    <option name="redundant" hit="Space is redundant elsewhere" />
    <option name="space" hit="Space is redundant elsewhere" />
    <option name="function" hit="Special function without noexcept specification" />
    <option name="noexcept" hit="Special function without noexcept specification" />
    <option name="special" hit="Special function without noexcept specification" />
    <option name="specification" hit="Special function without noexcept specification" />
    <option name="without" hit="Special function without noexcept specification" />
    <option name="engine" hit="Specified version of the engine project is not found" />
    <option name="found" hit="Specified version of the engine project is not found" />
    <option name="is" hit="Specified version of the engine project is not found" />
    <option name="not" hit="Specified version of the engine project is not found" />
    <option name="of" hit="Specified version of the engine project is not found" />
    <option name="project" hit="Specified version of the engine project is not found" />
    <option name="specified" hit="Specified version of the engine project is not found" />
    <option name="the" hit="Specified version of the engine project is not found" />
    <option name="version" hit="Specified version of the engine project is not found" />
    <option name="allowed" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="an" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="anonymous" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="by" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="c++" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="class" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="data" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="in" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="is" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="member" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="not" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="standard" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="static" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="the" hit="Static data member in an anonymous class is not allowed by the C++ standard" />
    <option name="char" hit="String literal to char pointer conversion" />
    <option name="conversion" hit="String literal to char pointer conversion" />
    <option name="literal" hit="String literal to char pointer conversion" />
    <option name="pointer" hit="String literal to char pointer conversion" />
    <option name="string" hit="String literal to char pointer conversion" />
    <option name="to" hit="String literal to char pointer conversion" />
    <option name="be" hit="Structured binding can be used" />
    <option name="binding" hit="Structured binding can be used" />
    <option name="can" hit="Structured binding can be used" />
    <option name="structured" hit="Structured binding can be used" />
    <option name="used" hit="Structured binding can be used" />
    <option name="be" hit="Structured binding can be used instead of tie(..)" />
    <option name="binding" hit="Structured binding can be used instead of tie(..)" />
    <option name="can" hit="Structured binding can be used instead of tie(..)" />
    <option name="instead" hit="Structured binding can be used instead of tie(..)" />
    <option name="of" hit="Structured binding can be used instead of tie(..)" />
    <option name="structured" hit="Structured binding can be used instead of tie(..)" />
    <option name="tie" hit="Structured binding can be used instead of tie(..)" />
    <option name="used" hit="Structured binding can be used instead of tie(..)" />
    <option name="style" hit="Syntax Style" />
    <option name="syntax" hit="Syntax Style" />
    <option name="comment" hit="Syntax error in doxygen comment" />
    <option name="doxygen" hit="Syntax error in doxygen comment" />
    <option name="error" hit="Syntax error in doxygen comment" />
    <option name="in" hit="Syntax error in doxygen comment" />
    <option name="syntax" hit="Syntax error in doxygen comment" />
    <option name="are" hit="Tabs are prohibited" />
    <option name="prohibited" hit="Tabs are prohibited" />
    <option name="tabs" hit="Tabs are prohibited" />
    <option name="are" hit="Tabs are prohibited except for indentation" />
    <option name="except" hit="Tabs are prohibited except for indentation" />
    <option name="for" hit="Tabs are prohibited except for indentation" />
    <option name="indentation" hit="Tabs are prohibited except for indentation" />
    <option name="prohibited" hit="Tabs are prohibited except for indentation" />
    <option name="tabs" hit="Tabs are prohibited except for indentation" />
    <option name="mismatch" hit="Tabs/spaces mismatch" />
    <option name="spaces" hit="Tabs/spaces mismatch" />
    <option name="tabs" hit="Tabs/spaces mismatch" />
    <option name="address" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="an" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="c++" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="class" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="extension" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="is" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="microsoft" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="non-standard" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="of" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="r-value" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="taking" hit="Taking an address of class r-value is non-standard Microsoft C++ extension" />
    <option name="arguments" hit="Template arguments can be deduced" />
    <option name="be" hit="Template arguments can be deduced" />
    <option name="can" hit="Template arguments can be deduced" />
    <option name="deduced" hit="Template arguments can be deduced" />
    <option name="template" hit="Template arguments can be deduced" />
    <option name="is" hit="Template parameter is never used" />
    <option name="never" hit="Template parameter is never used" />
    <option name="parameter" hit="Template parameter is never used" />
    <option name="template" hit="Template parameter is never used" />
    <option name="used" hit="Template parameter is never used" />
    <option name="assigned" hit="The 'out' parameter must be assigned" />
    <option name="be" hit="The 'out' parameter must be assigned" />
    <option name="must" hit="The 'out' parameter must be assigned" />
    <option name="out" hit="The 'out' parameter must be assigned" />
    <option name="parameter" hit="The 'out' parameter must be assigned" />
    <option name="the" hit="The 'out' parameter must be assigned" />
    <option name="a" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="be" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="can" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="expression" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="replaced" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="rethrow" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="throw" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="with" hit="Throw expression can be replaced with a rethrow expression" />
    <option name="a" hit="Too many arguments in a call to boost::format" />
    <option name="arguments" hit="Too many arguments in a call to boost::format" />
    <option name="boost" hit="Too many arguments in a call to boost::format" />
    <option name="call" hit="Too many arguments in a call to boost::format" />
    <option name="format" hit="Too many arguments in a call to boost::format" />
    <option name="in" hit="Too many arguments in a call to boost::format" />
    <option name="many" hit="Too many arguments in a call to boost::format" />
    <option name="to" hit="Too many arguments in a call to boost::format" />
    <option name="too" hit="Too many arguments in a call to boost::format" />
    <option name="a" hit="Too many arguments in a call to printf" />
    <option name="arguments" hit="Too many arguments in a call to printf" />
    <option name="call" hit="Too many arguments in a call to printf" />
    <option name="in" hit="Too many arguments in a call to printf" />
    <option name="many" hit="Too many arguments in a call to printf" />
    <option name="printf" hit="Too many arguments in a call to printf" />
    <option name="to" hit="Too many arguments in a call to printf" />
    <option name="too" hit="Too many arguments in a call to printf" />
    <option name="alias" hit="Type alias is never used" />
    <option name="is" hit="Type alias is never used" />
    <option name="never" hit="Type alias is never used" />
    <option name="type" hit="Type alias is never used" />
    <option name="used" hit="Type alias is never used" />
    <option name="auto" hit="Type can be replaced with auto" />
    <option name="be" hit="Type can be replaced with auto" />
    <option name="can" hit="Type can be replaced with auto" />
    <option name="replaced" hit="Type can be replaced with auto" />
    <option name="type" hit="Type can be replaced with auto" />
    <option name="with" hit="Type can be replaced with auto" />
    <option name="a" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="alias" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="be" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="can" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="or" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="simplified" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="template" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="trait" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="type" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="using" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="variable" hit="Type trait can be simplified using a template alias or a variable template" />
    <option name="defaults" hit="Type-specifier missing, defaults to int" />
    <option name="int" hit="Type-specifier missing, defaults to int" />
    <option name="missing" hit="Type-specifier missing, defaults to int" />
    <option name="to" hit="Type-specifier missing, defaults to int" />
    <option name="type-specifier" hit="Type-specifier missing, defaults to int" />
    <option name="call" hit="UFUNCTION macro call has no effect" />
    <option name="effect" hit="UFUNCTION macro call has no effect" />
    <option name="has" hit="UFUNCTION macro call has no effect" />
    <option name="macro" hit="UFUNCTION macro call has no effect" />
    <option name="no" hit="UFUNCTION macro call has no effect" />
    <option name="ufunction" hit="UFUNCTION macro call has no effect" />
    <option name="call" hit="UPROPERTY macro call has no effect" />
    <option name="effect" hit="UPROPERTY macro call has no effect" />
    <option name="has" hit="UPROPERTY macro call has no effect" />
    <option name="macro" hit="UPROPERTY macro call has no effect" />
    <option name="no" hit="UPROPERTY macro call has no effect" />
    <option name="uproperty" hit="UPROPERTY macro call has no effect" />
    <option name="base" hit="Uninitialized dependent base class" />
    <option name="class" hit="Uninitialized dependent base class" />
    <option name="dependent" hit="Uninitialized dependent base class" />
    <option name="uninitialized" hit="Uninitialized dependent base class" />
    <option name="member" hit="Union member of reference type" />
    <option name="of" hit="Union member of reference type" />
    <option name="reference" hit="Union member of reference type" />
    <option name="type" hit="Union member of reference type" />
    <option name="union" hit="Union member of reference type" />
    <option name="checks" hit="Unknown clang-tidy checks" />
    <option name="clang-tidy" hit="Unknown clang-tidy checks" />
    <option name="unknown" hit="Unknown clang-tidy checks" />
    <option name="a" hit="Unnamed namespace in a header file" />
    <option name="file" hit="Unnamed namespace in a header file" />
    <option name="header" hit="Unnamed namespace in a header file" />
    <option name="in" hit="Unnamed namespace in a header file" />
    <option name="namespace" hit="Unnamed namespace in a header file" />
    <option name="unnamed" hit="Unnamed namespace in a header file" />
    <option name="code" hit="Unreachable code" />
    <option name="unreachable" hit="Unreachable code" />
    <option name="engine" hit="Unreal Engine" />
    <option name="unreal" hit="Unreal Engine" />
    <option name="engine" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="file" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="macros" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="predefined" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="source" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="unreal" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="without" hit="Unreal Engine source file without predefined Unreal macros" />
    <option name="does" hit="Unreal Engine version file does not exist" />
    <option name="engine" hit="Unreal Engine version file does not exist" />
    <option name="exist" hit="Unreal Engine version file does not exist" />
    <option name="file" hit="Unreal Engine version file does not exist" />
    <option name="not" hit="Unreal Engine version file does not exist" />
    <option name="unreal" hit="Unreal Engine version file does not exist" />
    <option name="version" hit="Unreal Engine version file does not exist" />
    <option name="unrealheadertool" hit="UnrealHeaderTool" />
    <option name="errors" hit="UnrealHeaderTool errors" />
    <option name="unrealheadertool" hit="UnrealHeaderTool errors" />
    <option name="unrealheadertool" hit="UnrealHeaderTool warnings" />
    <option name="warnings" hit="UnrealHeaderTool warnings" />
    <option name="comment" hit="Unresolved reference in doxygen comment" />
    <option name="doxygen" hit="Unresolved reference in doxygen comment" />
    <option name="in" hit="Unresolved reference in doxygen comment" />
    <option name="reference" hit="Unresolved reference in doxygen comment" />
    <option name="unresolved" hit="Unresolved reference in doxygen comment" />
    <option name="a" hit="Use of a class that has not been declared previously" />
    <option name="been" hit="Use of a class that has not been declared previously" />
    <option name="class" hit="Use of a class that has not been declared previously" />
    <option name="declared" hit="Use of a class that has not been declared previously" />
    <option name="has" hit="Use of a class that has not been declared previously" />
    <option name="not" hit="Use of a class that has not been declared previously" />
    <option name="of" hit="Use of a class that has not been declared previously" />
    <option name="previously" hit="Use of a class that has not been declared previously" />
    <option name="that" hit="Use of a class that has not been declared previously" />
    <option name="use" hit="Use of a class that has not been declared previously" />
    <option name="a" hit="Use of an incomplete type inside a template" />
    <option name="an" hit="Use of an incomplete type inside a template" />
    <option name="incomplete" hit="Use of an incomplete type inside a template" />
    <option name="inside" hit="Use of an incomplete type inside a template" />
    <option name="of" hit="Use of an incomplete type inside a template" />
    <option name="template" hit="Use of an incomplete type inside a template" />
    <option name="type" hit="Use of an incomplete type inside a template" />
    <option name="use" hit="Use of an incomplete type inside a template" />
    <option name="auto" hit="Use preferred 'auto' style" />
    <option name="preferred" hit="Use preferred 'auto' style" />
    <option name="style" hit="Use preferred 'auto' style" />
    <option name="use" hit="Use preferred 'auto' style" />
    <option name="braces" hit="Use preferred braces style" />
    <option name="preferred" hit="Use preferred braces style" />
    <option name="style" hit="Use preferred braces style" />
    <option name="use" hit="Use preferred braces style" />
    <option name="cv-qualifiers" hit="Use preferred cv-qualifiers style" />
    <option name="preferred" hit="Use preferred cv-qualifiers style" />
    <option name="style" hit="Use preferred cv-qualifiers style" />
    <option name="use" hit="Use preferred cv-qualifiers style" />
    <option name="declaration" hit="Use preferred declaration style" />
    <option name="preferred" hit="Use preferred declaration style" />
    <option name="style" hit="Use preferred declaration style" />
    <option name="use" hit="Use preferred declaration style" />
    <option name="directive" hit="Use preferred include directive style" />
    <option name="include" hit="Use preferred include directive style" />
    <option name="preferred" hit="Use preferred include directive style" />
    <option name="style" hit="Use preferred include directive style" />
    <option name="use" hit="Use preferred include directive style" />
    <option name="initialization" hit="Use preferred initialization style" />
    <option name="preferred" hit="Use preferred initialization style" />
    <option name="style" hit="Use preferred initialization style" />
    <option name="use" hit="Use preferred initialization style" />
    <option name="function" hit="Use preferred overriding function style" />
    <option name="overriding" hit="Use preferred overriding function style" />
    <option name="preferred" hit="Use preferred overriding function style" />
    <option name="style" hit="Use preferred overriding function style" />
    <option name="use" hit="Use preferred overriding function style" />
    <option name="an" hit="User-defined literal suffixes must start with an underscore" />
    <option name="literal" hit="User-defined literal suffixes must start with an underscore" />
    <option name="must" hit="User-defined literal suffixes must start with an underscore" />
    <option name="start" hit="User-defined literal suffixes must start with an underscore" />
    <option name="suffixes" hit="User-defined literal suffixes must start with an underscore" />
    <option name="underscore" hit="User-defined literal suffixes must start with an underscore" />
    <option name="user-defined" hit="User-defined literal suffixes must start with an underscore" />
    <option name="with" hit="User-defined literal suffixes must start with an underscore" />
    <option name="be" hit="Variable can be made constexpr" />
    <option name="can" hit="Variable can be made constexpr" />
    <option name="constexpr" hit="Variable can be made constexpr" />
    <option name="made" hit="Variable can be made constexpr" />
    <option name="variable" hit="Variable can be made constexpr" />
    <option name="be" hit="Variable can be moved to init statement" />
    <option name="can" hit="Variable can be moved to init statement" />
    <option name="init" hit="Variable can be moved to init statement" />
    <option name="moved" hit="Variable can be moved to init statement" />
    <option name="statement" hit="Variable can be moved to init statement" />
    <option name="to" hit="Variable can be moved to init statement" />
    <option name="variable" hit="Variable can be moved to init statement" />
    <option name="be" hit="Variable can be moved to inner scope" />
    <option name="can" hit="Variable can be moved to inner scope" />
    <option name="inner" hit="Variable can be moved to inner scope" />
    <option name="moved" hit="Variable can be moved to inner scope" />
    <option name="scope" hit="Variable can be moved to inner scope" />
    <option name="to" hit="Variable can be moved to inner scope" />
    <option name="variable" hit="Variable can be moved to inner scope" />
    <option name="a" hit="Volatile-qualified parameter in a function declaration" />
    <option name="declaration" hit="Volatile-qualified parameter in a function declaration" />
    <option name="function" hit="Volatile-qualified parameter in a function declaration" />
    <option name="in" hit="Volatile-qualified parameter in a function declaration" />
    <option name="parameter" hit="Volatile-qualified parameter in a function declaration" />
    <option name="volatile-qualified" hit="Volatile-qualified parameter in a function declaration" />
    <option name="be" hit="Zero constant can be replaced with nullptr" />
    <option name="can" hit="Zero constant can be replaced with nullptr" />
    <option name="constant" hit="Zero constant can be replaced with nullptr" />
    <option name="nullptr" hit="Zero constant can be replaced with nullptr" />
    <option name="replaced" hit="Zero constant can be replaced with nullptr" />
    <option name="with" hit="Zero constant can be replaced with nullptr" />
    <option name="zero" hit="Zero constant can be replaced with nullptr" />
    <option name="be" hit="Zero initialization can be used instead of memset" />
    <option name="can" hit="Zero initialization can be used instead of memset" />
    <option name="initialization" hit="Zero initialization can be used instead of memset" />
    <option name="instead" hit="Zero initialization can be used instead of memset" />
    <option name="memset" hit="Zero initialization can be used instead of memset" />
    <option name="of" hit="Zero initialization can be used instead of memset" />
    <option name="used" hit="Zero initialization can be used instead of memset" />
    <option name="zero" hit="Zero initialization can be used instead of memset" />
    <option name="" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="a" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="applied" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="be" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="cannot" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="functions" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="nodiscard" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="return" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="to" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="value" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="without" hit="[[nodiscard]] cannot be applied to functions without a return value" />
    <option name="abseil-cleanup-ctad" hit="abseil-cleanup-ctad clang-tidy check" />
    <option name="check" hit="abseil-cleanup-ctad clang-tidy check" />
    <option name="clang-tidy" hit="abseil-cleanup-ctad clang-tidy check" />
    <option name="abseil-duration-addition" hit="abseil-duration-addition clang-tidy check" />
    <option name="check" hit="abseil-duration-addition clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-addition clang-tidy check" />
    <option name="abseil-duration-comparison" hit="abseil-duration-comparison clang-tidy check" />
    <option name="check" hit="abseil-duration-comparison clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-comparison clang-tidy check" />
    <option name="abseil-duration-conversion-cast" hit="abseil-duration-conversion-cast clang-tidy check" />
    <option name="check" hit="abseil-duration-conversion-cast clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-conversion-cast clang-tidy check" />
    <option name="abseil-duration-division" hit="abseil-duration-division clang-tidy check" />
    <option name="check" hit="abseil-duration-division clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-division clang-tidy check" />
    <option name="abseil-duration-factory-float" hit="abseil-duration-factory-float clang-tidy check" />
    <option name="check" hit="abseil-duration-factory-float clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-factory-float clang-tidy check" />
    <option name="abseil-duration-factory-scale" hit="abseil-duration-factory-scale clang-tidy check" />
    <option name="check" hit="abseil-duration-factory-scale clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-factory-scale clang-tidy check" />
    <option name="abseil-duration-subtraction" hit="abseil-duration-subtraction clang-tidy check" />
    <option name="check" hit="abseil-duration-subtraction clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-subtraction clang-tidy check" />
    <option name="abseil-duration-unnecessary-conversion" hit="abseil-duration-unnecessary-conversion clang-tidy check" />
    <option name="check" hit="abseil-duration-unnecessary-conversion clang-tidy check" />
    <option name="clang-tidy" hit="abseil-duration-unnecessary-conversion clang-tidy check" />
    <option name="abseil-faster-strsplit-delimiter" hit="abseil-faster-strsplit-delimiter clang-tidy check" />
    <option name="check" hit="abseil-faster-strsplit-delimiter clang-tidy check" />
    <option name="clang-tidy" hit="abseil-faster-strsplit-delimiter clang-tidy check" />
    <option name="abseil-no-internal-dependencies" hit="abseil-no-internal-dependencies clang-tidy check" />
    <option name="check" hit="abseil-no-internal-dependencies clang-tidy check" />
    <option name="clang-tidy" hit="abseil-no-internal-dependencies clang-tidy check" />
    <option name="abseil-no-namespace" hit="abseil-no-namespace clang-tidy check" />
    <option name="check" hit="abseil-no-namespace clang-tidy check" />
    <option name="clang-tidy" hit="abseil-no-namespace clang-tidy check" />
    <option name="abseil-redundant-strcat-calls" hit="abseil-redundant-strcat-calls clang-tidy check" />
    <option name="check" hit="abseil-redundant-strcat-calls clang-tidy check" />
    <option name="clang-tidy" hit="abseil-redundant-strcat-calls clang-tidy check" />
    <option name="abseil-str-cat-append" hit="abseil-str-cat-append clang-tidy check" />
    <option name="check" hit="abseil-str-cat-append clang-tidy check" />
    <option name="clang-tidy" hit="abseil-str-cat-append clang-tidy check" />
    <option name="abseil-string-find-startswith" hit="abseil-string-find-startswith clang-tidy check" />
    <option name="check" hit="abseil-string-find-startswith clang-tidy check" />
    <option name="clang-tidy" hit="abseil-string-find-startswith clang-tidy check" />
    <option name="abseil-string-find-str-contains" hit="abseil-string-find-str-contains clang-tidy check" />
    <option name="check" hit="abseil-string-find-str-contains clang-tidy check" />
    <option name="clang-tidy" hit="abseil-string-find-str-contains clang-tidy check" />
    <option name="abseil-time-comparison" hit="abseil-time-comparison clang-tidy check" />
    <option name="check" hit="abseil-time-comparison clang-tidy check" />
    <option name="clang-tidy" hit="abseil-time-comparison clang-tidy check" />
    <option name="abseil-time-subtraction" hit="abseil-time-subtraction clang-tidy check" />
    <option name="check" hit="abseil-time-subtraction clang-tidy check" />
    <option name="clang-tidy" hit="abseil-time-subtraction clang-tidy check" />
    <option name="abseil-upgrade-duration-conversions" hit="abseil-upgrade-duration-conversions clang-tidy check" />
    <option name="check" hit="abseil-upgrade-duration-conversions clang-tidy check" />
    <option name="clang-tidy" hit="abseil-upgrade-duration-conversions clang-tidy check" />
    <option name="absolute-value" hit="absolute-value clang diagnostic" />
    <option name="clang" hit="absolute-value clang diagnostic" />
    <option name="diagnostic" hit="absolute-value clang diagnostic" />
    <option name="abstract-final-class" hit="abstract-final-class clang diagnostic" />
    <option name="clang" hit="abstract-final-class clang diagnostic" />
    <option name="diagnostic" hit="abstract-final-class clang diagnostic" />
    <option name="abstract-vbase-init" hit="abstract-vbase-init clang diagnostic" />
    <option name="clang" hit="abstract-vbase-init clang diagnostic" />
    <option name="diagnostic" hit="abstract-vbase-init clang diagnostic" />
    <option name="address-of-packed-member" hit="address-of-packed-member clang diagnostic" />
    <option name="clang" hit="address-of-packed-member clang diagnostic" />
    <option name="diagnostic" hit="address-of-packed-member clang diagnostic" />
    <option name="address-of-temporary" hit="address-of-temporary clang diagnostic" />
    <option name="clang" hit="address-of-temporary clang diagnostic" />
    <option name="diagnostic" hit="address-of-temporary clang diagnostic" />
    <option name="aix-compat" hit="aix-compat clang diagnostic" />
    <option name="clang" hit="aix-compat clang diagnostic" />
    <option name="diagnostic" hit="aix-compat clang diagnostic" />
    <option name="align-mismatch" hit="align-mismatch clang diagnostic" />
    <option name="clang" hit="align-mismatch clang diagnostic" />
    <option name="diagnostic" hit="align-mismatch clang diagnostic" />
    <option name="alloca" hit="alloca clang diagnostic" />
    <option name="clang" hit="alloca clang diagnostic" />
    <option name="diagnostic" hit="alloca clang diagnostic" />
    <option name="alloca-with-align-alignof" hit="alloca-with-align-alignof clang diagnostic" />
    <option name="clang" hit="alloca-with-align-alignof clang diagnostic" />
    <option name="diagnostic" hit="alloca-with-align-alignof clang diagnostic" />
    <option name="altera-id-dependent-backward-branch" hit="altera-id-dependent-backward-branch clang-tidy check" />
    <option name="check" hit="altera-id-dependent-backward-branch clang-tidy check" />
    <option name="clang-tidy" hit="altera-id-dependent-backward-branch clang-tidy check" />
    <option name="altera-kernel-name-restriction" hit="altera-kernel-name-restriction clang-tidy check" />
    <option name="check" hit="altera-kernel-name-restriction clang-tidy check" />
    <option name="clang-tidy" hit="altera-kernel-name-restriction clang-tidy check" />
    <option name="altera-single-work-item-barrier" hit="altera-single-work-item-barrier clang-tidy check" />
    <option name="check" hit="altera-single-work-item-barrier clang-tidy check" />
    <option name="clang-tidy" hit="altera-single-work-item-barrier clang-tidy check" />
    <option name="altera-struct-pack-align" hit="altera-struct-pack-align clang-tidy check" />
    <option name="check" hit="altera-struct-pack-align clang-tidy check" />
    <option name="clang-tidy" hit="altera-struct-pack-align clang-tidy check" />
    <option name="altera-unroll-loops" hit="altera-unroll-loops clang-tidy check" />
    <option name="check" hit="altera-unroll-loops clang-tidy check" />
    <option name="clang-tidy" hit="altera-unroll-loops clang-tidy check" />
    <option name="always-inline-coroutine" hit="always-inline-coroutine clang diagnostic" />
    <option name="clang" hit="always-inline-coroutine clang diagnostic" />
    <option name="diagnostic" hit="always-inline-coroutine clang diagnostic" />
    <option name="ambiguous-delete" hit="ambiguous-delete clang diagnostic" />
    <option name="clang" hit="ambiguous-delete clang diagnostic" />
    <option name="diagnostic" hit="ambiguous-delete clang diagnostic" />
    <option name="ambiguous-ellipsis" hit="ambiguous-ellipsis clang diagnostic" />
    <option name="clang" hit="ambiguous-ellipsis clang diagnostic" />
    <option name="diagnostic" hit="ambiguous-ellipsis clang diagnostic" />
    <option name="ambiguous-macro" hit="ambiguous-macro clang diagnostic" />
    <option name="clang" hit="ambiguous-macro clang diagnostic" />
    <option name="diagnostic" hit="ambiguous-macro clang diagnostic" />
    <option name="ambiguous-member-template" hit="ambiguous-member-template clang diagnostic" />
    <option name="clang" hit="ambiguous-member-template clang diagnostic" />
    <option name="diagnostic" hit="ambiguous-member-template clang diagnostic" />
    <option name="ambiguous-reversed-operator" hit="ambiguous-reversed-operator clang diagnostic" />
    <option name="clang" hit="ambiguous-reversed-operator clang diagnostic" />
    <option name="diagnostic" hit="ambiguous-reversed-operator clang diagnostic" />
    <option name="analyzer-incompatible-plugin" hit="analyzer-incompatible-plugin clang diagnostic" />
    <option name="clang" hit="analyzer-incompatible-plugin clang diagnostic" />
    <option name="diagnostic" hit="analyzer-incompatible-plugin clang diagnostic" />
    <option name="android-cloexec-accept" hit="android-cloexec-accept clang-tidy check" />
    <option name="check" hit="android-cloexec-accept clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-accept clang-tidy check" />
    <option name="android-cloexec-accept4" hit="android-cloexec-accept4 clang-tidy check" />
    <option name="check" hit="android-cloexec-accept4 clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-accept4 clang-tidy check" />
    <option name="android-cloexec-creat" hit="android-cloexec-creat clang-tidy check" />
    <option name="check" hit="android-cloexec-creat clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-creat clang-tidy check" />
    <option name="android-cloexec-dup" hit="android-cloexec-dup clang-tidy check" />
    <option name="check" hit="android-cloexec-dup clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-dup clang-tidy check" />
    <option name="android-cloexec-epoll-create" hit="android-cloexec-epoll-create clang-tidy check" />
    <option name="check" hit="android-cloexec-epoll-create clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-epoll-create clang-tidy check" />
    <option name="android-cloexec-epoll-create1" hit="android-cloexec-epoll-create1 clang-tidy check" />
    <option name="check" hit="android-cloexec-epoll-create1 clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-epoll-create1 clang-tidy check" />
    <option name="android-cloexec-fopen" hit="android-cloexec-fopen clang-tidy check" />
    <option name="check" hit="android-cloexec-fopen clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-fopen clang-tidy check" />
    <option name="android-cloexec-inotify-init" hit="android-cloexec-inotify-init clang-tidy check" />
    <option name="check" hit="android-cloexec-inotify-init clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-inotify-init clang-tidy check" />
    <option name="android-cloexec-inotify-init1" hit="android-cloexec-inotify-init1 clang-tidy check" />
    <option name="check" hit="android-cloexec-inotify-init1 clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-inotify-init1 clang-tidy check" />
    <option name="android-cloexec-memfd-create" hit="android-cloexec-memfd-create clang-tidy check" />
    <option name="check" hit="android-cloexec-memfd-create clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-memfd-create clang-tidy check" />
    <option name="android-cloexec-open" hit="android-cloexec-open clang-tidy check" />
    <option name="check" hit="android-cloexec-open clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-open clang-tidy check" />
    <option name="android-cloexec-pipe" hit="android-cloexec-pipe clang-tidy check" />
    <option name="check" hit="android-cloexec-pipe clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-pipe clang-tidy check" />
    <option name="android-cloexec-pipe2" hit="android-cloexec-pipe2 clang-tidy check" />
    <option name="check" hit="android-cloexec-pipe2 clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-pipe2 clang-tidy check" />
    <option name="android-cloexec-socket" hit="android-cloexec-socket clang-tidy check" />
    <option name="check" hit="android-cloexec-socket clang-tidy check" />
    <option name="clang-tidy" hit="android-cloexec-socket clang-tidy check" />
    <option name="android-comparison-in-temp-failure-retry" hit="android-comparison-in-temp-failure-retry clang-tidy check" />
    <option name="check" hit="android-comparison-in-temp-failure-retry clang-tidy check" />
    <option name="clang-tidy" hit="android-comparison-in-temp-failure-retry clang-tidy check" />
    <option name="anon-enum-enum-conversion" hit="anon-enum-enum-conversion clang diagnostic" />
    <option name="clang" hit="anon-enum-enum-conversion clang diagnostic" />
    <option name="diagnostic" hit="anon-enum-enum-conversion clang diagnostic" />
    <option name="anonymous-pack-parens" hit="anonymous-pack-parens clang diagnostic" />
    <option name="clang" hit="anonymous-pack-parens clang diagnostic" />
    <option name="diagnostic" hit="anonymous-pack-parens clang diagnostic" />
    <option name="analyzer" hit="apiModeling.Errno clang static analyzer check" />
    <option name="apimodeling" hit="apiModeling.Errno clang static analyzer check" />
    <option name="check" hit="apiModeling.Errno clang static analyzer check" />
    <option name="clang" hit="apiModeling.Errno clang static analyzer check" />
    <option name="errno" hit="apiModeling.Errno clang static analyzer check" />
    <option name="static" hit="apiModeling.Errno clang static analyzer check" />
    <option name="analyzer" hit="apiModeling.TrustNonnull clang static analyzer check" />
    <option name="apimodeling" hit="apiModeling.TrustNonnull clang static analyzer check" />
    <option name="check" hit="apiModeling.TrustNonnull clang static analyzer check" />
    <option name="clang" hit="apiModeling.TrustNonnull clang static analyzer check" />
    <option name="static" hit="apiModeling.TrustNonnull clang static analyzer check" />
    <option name="trustnonnull" hit="apiModeling.TrustNonnull clang static analyzer check" />
    <option name="analyzer" hit="apiModeling.TrustReturnsNonnull clang static analyzer check" />
    <option name="apimodeling" hit="apiModeling.TrustReturnsNonnull clang static analyzer check" />
    <option name="check" hit="apiModeling.TrustReturnsNonnull clang static analyzer check" />
    <option name="clang" hit="apiModeling.TrustReturnsNonnull clang static analyzer check" />
    <option name="static" hit="apiModeling.TrustReturnsNonnull clang static analyzer check" />
    <option name="trustreturnsnonnull" hit="apiModeling.TrustReturnsNonnull clang static analyzer check" />
    <option name="analyzer" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="apimodeling" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="check" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="clang" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="google" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="gtest" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="static" hit="apiModeling.google.GTest clang static analyzer check" />
    <option name="analyzer" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="apimodeling" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="castvalue" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="check" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="clang" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="llvm" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="static" hit="apiModeling.llvm.CastValue clang static analyzer check" />
    <option name="analyzer" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="apimodeling" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="check" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="clang" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="llvm" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="returnvalue" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="static" hit="apiModeling.llvm.ReturnValue clang static analyzer check" />
    <option name="arc-bridge-casts-disallowed-in-nonarc" hit="arc-bridge-casts-disallowed-in-nonarc clang diagnostic" />
    <option name="clang" hit="arc-bridge-casts-disallowed-in-nonarc clang diagnostic" />
    <option name="diagnostic" hit="arc-bridge-casts-disallowed-in-nonarc clang diagnostic" />
    <option name="arc-maybe-repeated-use-of-weak" hit="arc-maybe-repeated-use-of-weak clang diagnostic" />
    <option name="clang" hit="arc-maybe-repeated-use-of-weak clang diagnostic" />
    <option name="diagnostic" hit="arc-maybe-repeated-use-of-weak clang diagnostic" />
    <option name="arc-non-pod-memaccess" hit="arc-non-pod-memaccess clang diagnostic" />
    <option name="clang" hit="arc-non-pod-memaccess clang diagnostic" />
    <option name="diagnostic" hit="arc-non-pod-memaccess clang diagnostic" />
    <option name="arc-performselector-leaks" hit="arc-performSelector-leaks clang diagnostic" />
    <option name="clang" hit="arc-performSelector-leaks clang diagnostic" />
    <option name="diagnostic" hit="arc-performSelector-leaks clang diagnostic" />
    <option name="arc-repeated-use-of-weak" hit="arc-repeated-use-of-weak clang diagnostic" />
    <option name="clang" hit="arc-repeated-use-of-weak clang diagnostic" />
    <option name="diagnostic" hit="arc-repeated-use-of-weak clang diagnostic" />
    <option name="arc-retain-cycles" hit="arc-retain-cycles clang diagnostic" />
    <option name="clang" hit="arc-retain-cycles clang diagnostic" />
    <option name="diagnostic" hit="arc-retain-cycles clang diagnostic" />
    <option name="arc-unsafe-retained-assign" hit="arc-unsafe-retained-assign clang diagnostic" />
    <option name="clang" hit="arc-unsafe-retained-assign clang diagnostic" />
    <option name="diagnostic" hit="arc-unsafe-retained-assign clang diagnostic" />
    <option name="argument-outside-range" hit="argument-outside-range clang diagnostic" />
    <option name="clang" hit="argument-outside-range clang diagnostic" />
    <option name="diagnostic" hit="argument-outside-range clang diagnostic" />
    <option name="argument-undefined-behaviour" hit="argument-undefined-behaviour clang diagnostic" />
    <option name="clang" hit="argument-undefined-behaviour clang diagnostic" />
    <option name="diagnostic" hit="argument-undefined-behaviour clang diagnostic" />
    <option name="array-bounds" hit="array-bounds clang diagnostic" />
    <option name="clang" hit="array-bounds clang diagnostic" />
    <option name="diagnostic" hit="array-bounds clang diagnostic" />
    <option name="array-bounds-pointer-arithmetic" hit="array-bounds-pointer-arithmetic clang diagnostic" />
    <option name="clang" hit="array-bounds-pointer-arithmetic clang diagnostic" />
    <option name="diagnostic" hit="array-bounds-pointer-arithmetic clang diagnostic" />
    <option name="array-parameter" hit="array-parameter clang diagnostic" />
    <option name="clang" hit="array-parameter clang diagnostic" />
    <option name="diagnostic" hit="array-parameter clang diagnostic" />
    <option name="asm-operand-widths" hit="asm-operand-widths clang diagnostic" />
    <option name="clang" hit="asm-operand-widths clang diagnostic" />
    <option name="diagnostic" hit="asm-operand-widths clang diagnostic" />
    <option name="assign-enum" hit="assign-enum clang diagnostic" />
    <option name="clang" hit="assign-enum clang diagnostic" />
    <option name="diagnostic" hit="assign-enum clang diagnostic" />
    <option name="assume" hit="assume clang diagnostic" />
    <option name="clang" hit="assume clang diagnostic" />
    <option name="diagnostic" hit="assume clang diagnostic" />
    <option name="at-protocol" hit="at-protocol clang diagnostic" />
    <option name="clang" hit="at-protocol clang diagnostic" />
    <option name="diagnostic" hit="at-protocol clang diagnostic" />
    <option name="atimport-in-framework-header" hit="atimport-in-framework-header clang diagnostic" />
    <option name="clang" hit="atimport-in-framework-header clang diagnostic" />
    <option name="diagnostic" hit="atimport-in-framework-header clang diagnostic" />
    <option name="atomic-access" hit="atomic-access clang diagnostic" />
    <option name="clang" hit="atomic-access clang diagnostic" />
    <option name="diagnostic" hit="atomic-access clang diagnostic" />
    <option name="atomic-alignment" hit="atomic-alignment clang diagnostic" />
    <option name="clang" hit="atomic-alignment clang diagnostic" />
    <option name="diagnostic" hit="atomic-alignment clang diagnostic" />
    <option name="atomic-implicit-seq-cst" hit="atomic-implicit-seq-cst clang diagnostic" />
    <option name="clang" hit="atomic-implicit-seq-cst clang diagnostic" />
    <option name="diagnostic" hit="atomic-implicit-seq-cst clang diagnostic" />
    <option name="atomic-memory-ordering" hit="atomic-memory-ordering clang diagnostic" />
    <option name="clang" hit="atomic-memory-ordering clang diagnostic" />
    <option name="diagnostic" hit="atomic-memory-ordering clang diagnostic" />
    <option name="atomic-property-with-user-defined-accessor" hit="atomic-property-with-user-defined-accessor clang diagnostic" />
    <option name="clang" hit="atomic-property-with-user-defined-accessor clang diagnostic" />
    <option name="diagnostic" hit="atomic-property-with-user-defined-accessor clang diagnostic" />
    <option name="attribute-packed-for-bitfield" hit="attribute-packed-for-bitfield clang diagnostic" />
    <option name="clang" hit="attribute-packed-for-bitfield clang diagnostic" />
    <option name="diagnostic" hit="attribute-packed-for-bitfield clang diagnostic" />
    <option name="attribute-warning" hit="attribute-warning clang diagnostic" />
    <option name="clang" hit="attribute-warning clang diagnostic" />
    <option name="diagnostic" hit="attribute-warning clang diagnostic" />
    <option name="auto-disable-vptr-sanitizer" hit="auto-disable-vptr-sanitizer clang diagnostic" />
    <option name="clang" hit="auto-disable-vptr-sanitizer clang diagnostic" />
    <option name="diagnostic" hit="auto-disable-vptr-sanitizer clang diagnostic" />
    <option name="auto-import" hit="auto-import clang diagnostic" />
    <option name="clang" hit="auto-import clang diagnostic" />
    <option name="diagnostic" hit="auto-import clang diagnostic" />
    <option name="auto-storage-class" hit="auto-storage-class clang diagnostic" />
    <option name="clang" hit="auto-storage-class clang diagnostic" />
    <option name="diagnostic" hit="auto-storage-class clang diagnostic" />
    <option name="auto-var-id" hit="auto-var-id clang diagnostic" />
    <option name="clang" hit="auto-var-id clang diagnostic" />
    <option name="diagnostic" hit="auto-var-id clang diagnostic" />
    <option name="availability" hit="availability clang diagnostic" />
    <option name="clang" hit="availability clang diagnostic" />
    <option name="diagnostic" hit="availability clang diagnostic" />
    <option name="avr-rtlib-linking-quirks" hit="avr-rtlib-linking-quirks clang diagnostic" />
    <option name="clang" hit="avr-rtlib-linking-quirks clang diagnostic" />
    <option name="diagnostic" hit="avr-rtlib-linking-quirks clang diagnostic" />
    <option name="backslash-newline-escape" hit="backslash-newline-escape clang diagnostic" />
    <option name="clang" hit="backslash-newline-escape clang diagnostic" />
    <option name="diagnostic" hit="backslash-newline-escape clang diagnostic" />
    <option name="bad-function-cast" hit="bad-function-cast clang diagnostic" />
    <option name="clang" hit="bad-function-cast clang diagnostic" />
    <option name="diagnostic" hit="bad-function-cast clang diagnostic" />
    <option name="bind-to-temporary-copy" hit="bind-to-temporary-copy clang diagnostic" />
    <option name="clang" hit="bind-to-temporary-copy clang diagnostic" />
    <option name="diagnostic" hit="bind-to-temporary-copy clang diagnostic" />
    <option name="binding-in-condition" hit="binding-in-condition clang diagnostic" />
    <option name="clang" hit="binding-in-condition clang diagnostic" />
    <option name="diagnostic" hit="binding-in-condition clang diagnostic" />
    <option name="bit-int-extension" hit="bit-int-extension clang diagnostic" />
    <option name="clang" hit="bit-int-extension clang diagnostic" />
    <option name="diagnostic" hit="bit-int-extension clang diagnostic" />
    <option name="bitfield-constant-conversion" hit="bitfield-constant-conversion clang diagnostic" />
    <option name="clang" hit="bitfield-constant-conversion clang diagnostic" />
    <option name="diagnostic" hit="bitfield-constant-conversion clang diagnostic" />
    <option name="bitfield-enum-conversion" hit="bitfield-enum-conversion clang diagnostic" />
    <option name="clang" hit="bitfield-enum-conversion clang diagnostic" />
    <option name="diagnostic" hit="bitfield-enum-conversion clang diagnostic" />
    <option name="bitfield-width" hit="bitfield-width clang diagnostic" />
    <option name="clang" hit="bitfield-width clang diagnostic" />
    <option name="diagnostic" hit="bitfield-width clang diagnostic" />
    <option name="bitwise-conditional-parentheses" hit="bitwise-conditional-parentheses clang diagnostic" />
    <option name="clang" hit="bitwise-conditional-parentheses clang diagnostic" />
    <option name="diagnostic" hit="bitwise-conditional-parentheses clang diagnostic" />
    <option name="bitwise-instead-of-logical" hit="bitwise-instead-of-logical clang diagnostic" />
    <option name="clang" hit="bitwise-instead-of-logical clang diagnostic" />
    <option name="diagnostic" hit="bitwise-instead-of-logical clang diagnostic" />
    <option name="bitwise-op-parentheses" hit="bitwise-op-parentheses clang diagnostic" />
    <option name="clang" hit="bitwise-op-parentheses clang diagnostic" />
    <option name="diagnostic" hit="bitwise-op-parentheses clang diagnostic" />
    <option name="block-capture-autoreleasing" hit="block-capture-autoreleasing clang diagnostic" />
    <option name="clang" hit="block-capture-autoreleasing clang diagnostic" />
    <option name="diagnostic" hit="block-capture-autoreleasing clang diagnostic" />
    <option name="bool-conversion" hit="bool-conversion clang diagnostic" />
    <option name="clang" hit="bool-conversion clang diagnostic" />
    <option name="diagnostic" hit="bool-conversion clang diagnostic" />
    <option name="bool-operation" hit="bool-operation clang diagnostic" />
    <option name="clang" hit="bool-operation clang diagnostic" />
    <option name="diagnostic" hit="bool-operation clang diagnostic" />
    <option name="boost-use-to-string" hit="boost-use-to-string clang-tidy check" />
    <option name="check" hit="boost-use-to-string clang-tidy check" />
    <option name="clang-tidy" hit="boost-use-to-string clang-tidy check" />
    <option name="braced-scalar-init" hit="braced-scalar-init clang diagnostic" />
    <option name="clang" hit="braced-scalar-init clang diagnostic" />
    <option name="diagnostic" hit="braced-scalar-init clang diagnostic" />
    <option name="branch-protection" hit="branch-protection clang diagnostic" />
    <option name="clang" hit="branch-protection clang diagnostic" />
    <option name="diagnostic" hit="branch-protection clang diagnostic" />
    <option name="bridge-cast" hit="bridge-cast clang diagnostic" />
    <option name="clang" hit="bridge-cast clang diagnostic" />
    <option name="diagnostic" hit="bridge-cast clang diagnostic" />
    <option name="bugprone-argument-comment" hit="bugprone-argument-comment clang-tidy check" />
    <option name="check" hit="bugprone-argument-comment clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-argument-comment clang-tidy check" />
    <option name="bugprone-assert-side-effect" hit="bugprone-assert-side-effect clang-tidy check" />
    <option name="check" hit="bugprone-assert-side-effect clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-assert-side-effect clang-tidy check" />
    <option name="bugprone-assignment-in-if-condition" hit="bugprone-assignment-in-if-condition clang-tidy check" />
    <option name="check" hit="bugprone-assignment-in-if-condition clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-assignment-in-if-condition clang-tidy check" />
    <option name="bugprone-bad-signal-to-kill-thread" hit="bugprone-bad-signal-to-kill-thread clang-tidy check" />
    <option name="check" hit="bugprone-bad-signal-to-kill-thread clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-bad-signal-to-kill-thread clang-tidy check" />
    <option name="bugprone-bool-pointer-implicit-conversion" hit="bugprone-bool-pointer-implicit-conversion clang-tidy check" />
    <option name="check" hit="bugprone-bool-pointer-implicit-conversion clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-bool-pointer-implicit-conversion clang-tidy check" />
    <option name="bugprone-branch-clone" hit="bugprone-branch-clone clang-tidy check" />
    <option name="check" hit="bugprone-branch-clone clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-branch-clone clang-tidy check" />
    <option name="bugprone-copy-constructor-init" hit="bugprone-copy-constructor-init clang-tidy check" />
    <option name="check" hit="bugprone-copy-constructor-init clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-copy-constructor-init clang-tidy check" />
    <option name="bugprone-dangling-handle" hit="bugprone-dangling-handle clang-tidy check" />
    <option name="check" hit="bugprone-dangling-handle clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-dangling-handle clang-tidy check" />
    <option name="bugprone-dynamic-static-initializers" hit="bugprone-dynamic-static-initializers clang-tidy check" />
    <option name="check" hit="bugprone-dynamic-static-initializers clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-dynamic-static-initializers clang-tidy check" />
    <option name="bugprone-easily-swappable-parameters" hit="bugprone-easily-swappable-parameters clang-tidy check" />
    <option name="check" hit="bugprone-easily-swappable-parameters clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-easily-swappable-parameters clang-tidy check" />
    <option name="bugprone-empty-catch" hit="bugprone-empty-catch clang-tidy check" />
    <option name="check" hit="bugprone-empty-catch clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-empty-catch clang-tidy check" />
    <option name="bugprone-exception-escape" hit="bugprone-exception-escape clang-tidy check" />
    <option name="check" hit="bugprone-exception-escape clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-exception-escape clang-tidy check" />
    <option name="bugprone-fold-init-type" hit="bugprone-fold-init-type clang-tidy check" />
    <option name="check" hit="bugprone-fold-init-type clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-fold-init-type clang-tidy check" />
    <option name="bugprone-forward-declaration-namespace" hit="bugprone-forward-declaration-namespace clang-tidy check" />
    <option name="check" hit="bugprone-forward-declaration-namespace clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-forward-declaration-namespace clang-tidy check" />
    <option name="bugprone-forwarding-reference-overload" hit="bugprone-forwarding-reference-overload clang-tidy check" />
    <option name="check" hit="bugprone-forwarding-reference-overload clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-forwarding-reference-overload clang-tidy check" />
    <option name="bugprone-implicit-widening-of-multiplication-result" hit="bugprone-implicit-widening-of-multiplication-result clang-tidy check" />
    <option name="check" hit="bugprone-implicit-widening-of-multiplication-result clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-implicit-widening-of-multiplication-result clang-tidy check" />
    <option name="bugprone-inaccurate-erase" hit="bugprone-inaccurate-erase clang-tidy check" />
    <option name="check" hit="bugprone-inaccurate-erase clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-inaccurate-erase clang-tidy check" />
    <option name="bugprone-incorrect-roundings" hit="bugprone-incorrect-roundings clang-tidy check" />
    <option name="check" hit="bugprone-incorrect-roundings clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-incorrect-roundings clang-tidy check" />
    <option name="bugprone-infinite-loop" hit="bugprone-infinite-loop clang-tidy check" />
    <option name="check" hit="bugprone-infinite-loop clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-infinite-loop clang-tidy check" />
    <option name="bugprone-integer-division" hit="bugprone-integer-division clang-tidy check" />
    <option name="check" hit="bugprone-integer-division clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-integer-division clang-tidy check" />
    <option name="bugprone-lambda-function-name" hit="bugprone-lambda-function-name clang-tidy check" />
    <option name="check" hit="bugprone-lambda-function-name clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-lambda-function-name clang-tidy check" />
    <option name="bugprone-macro-parentheses" hit="bugprone-macro-parentheses clang-tidy check" />
    <option name="check" hit="bugprone-macro-parentheses clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-macro-parentheses clang-tidy check" />
    <option name="bugprone-macro-repeated-side-effects" hit="bugprone-macro-repeated-side-effects clang-tidy check" />
    <option name="check" hit="bugprone-macro-repeated-side-effects clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-macro-repeated-side-effects clang-tidy check" />
    <option name="bugprone-misplaced-operator-in-strlen-in-alloc" hit="bugprone-misplaced-operator-in-strlen-in-alloc clang-tidy check" />
    <option name="check" hit="bugprone-misplaced-operator-in-strlen-in-alloc clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-misplaced-operator-in-strlen-in-alloc clang-tidy check" />
    <option name="bugprone-misplaced-pointer-arithmetic-in-alloc" hit="bugprone-misplaced-pointer-arithmetic-in-alloc clang-tidy check" />
    <option name="check" hit="bugprone-misplaced-pointer-arithmetic-in-alloc clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-misplaced-pointer-arithmetic-in-alloc clang-tidy check" />
    <option name="bugprone-misplaced-widening-cast" hit="bugprone-misplaced-widening-cast clang-tidy check" />
    <option name="check" hit="bugprone-misplaced-widening-cast clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-misplaced-widening-cast clang-tidy check" />
    <option name="bugprone-move-forwarding-reference" hit="bugprone-move-forwarding-reference clang-tidy check" />
    <option name="check" hit="bugprone-move-forwarding-reference clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-move-forwarding-reference clang-tidy check" />
    <option name="bugprone-multiple-new-in-one-expression" hit="bugprone-multiple-new-in-one-expression clang-tidy check" />
    <option name="check" hit="bugprone-multiple-new-in-one-expression clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-multiple-new-in-one-expression clang-tidy check" />
    <option name="bugprone-multiple-statement-macro" hit="bugprone-multiple-statement-macro clang-tidy check" />
    <option name="check" hit="bugprone-multiple-statement-macro clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-multiple-statement-macro clang-tidy check" />
    <option name="bugprone-narrowing-conversions" hit="bugprone-narrowing-conversions clang-tidy check" />
    <option name="check" hit="bugprone-narrowing-conversions clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-narrowing-conversions clang-tidy check" />
    <option name="bugprone-no-escape" hit="bugprone-no-escape clang-tidy check" />
    <option name="check" hit="bugprone-no-escape clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-no-escape clang-tidy check" />
    <option name="bugprone-non-zero-enum-to-bool-conversion" hit="bugprone-non-zero-enum-to-bool-conversion clang-tidy check" />
    <option name="check" hit="bugprone-non-zero-enum-to-bool-conversion clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-non-zero-enum-to-bool-conversion clang-tidy check" />
    <option name="bugprone-not-null-terminated-result" hit="bugprone-not-null-terminated-result clang-tidy check" />
    <option name="check" hit="bugprone-not-null-terminated-result clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-not-null-terminated-result clang-tidy check" />
    <option name="bugprone-parent-virtual-call" hit="bugprone-parent-virtual-call clang-tidy check" />
    <option name="check" hit="bugprone-parent-virtual-call clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-parent-virtual-call clang-tidy check" />
    <option name="bugprone-posix-return" hit="bugprone-posix-return clang-tidy check" />
    <option name="check" hit="bugprone-posix-return clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-posix-return clang-tidy check" />
    <option name="bugprone-redundant-branch-condition" hit="bugprone-redundant-branch-condition clang-tidy check" />
    <option name="check" hit="bugprone-redundant-branch-condition clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-redundant-branch-condition clang-tidy check" />
    <option name="bugprone-reserved-identifier" hit="bugprone-reserved-identifier clang-tidy check" />
    <option name="check" hit="bugprone-reserved-identifier clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-reserved-identifier clang-tidy check" />
    <option name="bugprone-shared-ptr-array-mismatch" hit="bugprone-shared-ptr-array-mismatch clang-tidy check" />
    <option name="check" hit="bugprone-shared-ptr-array-mismatch clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-shared-ptr-array-mismatch clang-tidy check" />
    <option name="bugprone-signal-handler" hit="bugprone-signal-handler clang-tidy check" />
    <option name="check" hit="bugprone-signal-handler clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-signal-handler clang-tidy check" />
    <option name="bugprone-signed-char-misuse" hit="bugprone-signed-char-misuse clang-tidy check" />
    <option name="check" hit="bugprone-signed-char-misuse clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-signed-char-misuse clang-tidy check" />
    <option name="bugprone-sizeof-container" hit="bugprone-sizeof-container clang-tidy check" />
    <option name="check" hit="bugprone-sizeof-container clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-sizeof-container clang-tidy check" />
    <option name="bugprone-sizeof-expression" hit="bugprone-sizeof-expression clang-tidy check" />
    <option name="check" hit="bugprone-sizeof-expression clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-sizeof-expression clang-tidy check" />
    <option name="bugprone-spuriously-wake-up-functions" hit="bugprone-spuriously-wake-up-functions clang-tidy check" />
    <option name="check" hit="bugprone-spuriously-wake-up-functions clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-spuriously-wake-up-functions clang-tidy check" />
    <option name="bugprone-standalone-empty" hit="bugprone-standalone-empty clang-tidy check" />
    <option name="check" hit="bugprone-standalone-empty clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-standalone-empty clang-tidy check" />
    <option name="bugprone-string-constructor" hit="bugprone-string-constructor clang-tidy check" />
    <option name="check" hit="bugprone-string-constructor clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-string-constructor clang-tidy check" />
    <option name="bugprone-string-integer-assignment" hit="bugprone-string-integer-assignment clang-tidy check" />
    <option name="check" hit="bugprone-string-integer-assignment clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-string-integer-assignment clang-tidy check" />
    <option name="bugprone-string-literal-with-embedded-nul" hit="bugprone-string-literal-with-embedded-nul clang-tidy check" />
    <option name="check" hit="bugprone-string-literal-with-embedded-nul clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-string-literal-with-embedded-nul clang-tidy check" />
    <option name="bugprone-stringview-nullptr" hit="bugprone-stringview-nullptr clang-tidy check" />
    <option name="check" hit="bugprone-stringview-nullptr clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-stringview-nullptr clang-tidy check" />
    <option name="bugprone-suspicious-enum-usage" hit="bugprone-suspicious-enum-usage clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-enum-usage clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-enum-usage clang-tidy check" />
    <option name="bugprone-suspicious-include" hit="bugprone-suspicious-include clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-include clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-include clang-tidy check" />
    <option name="bugprone-suspicious-memory-comparison" hit="bugprone-suspicious-memory-comparison clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-memory-comparison clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-memory-comparison clang-tidy check" />
    <option name="bugprone-suspicious-memset-usage" hit="bugprone-suspicious-memset-usage clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-memset-usage clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-memset-usage clang-tidy check" />
    <option name="bugprone-suspicious-missing-comma" hit="bugprone-suspicious-missing-comma clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-missing-comma clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-missing-comma clang-tidy check" />
    <option name="bugprone-suspicious-realloc-usage" hit="bugprone-suspicious-realloc-usage clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-realloc-usage clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-realloc-usage clang-tidy check" />
    <option name="bugprone-suspicious-semicolon" hit="bugprone-suspicious-semicolon clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-semicolon clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-semicolon clang-tidy check" />
    <option name="bugprone-suspicious-string-compare" hit="bugprone-suspicious-string-compare clang-tidy check" />
    <option name="check" hit="bugprone-suspicious-string-compare clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-suspicious-string-compare clang-tidy check" />
    <option name="bugprone-swapped-arguments" hit="bugprone-swapped-arguments clang-tidy check" />
    <option name="check" hit="bugprone-swapped-arguments clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-swapped-arguments clang-tidy check" />
    <option name="bugprone-switch-missing-default-case" hit="bugprone-switch-missing-default-case clang-tidy check" />
    <option name="check" hit="bugprone-switch-missing-default-case clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-switch-missing-default-case clang-tidy check" />
    <option name="bugprone-terminating-continue" hit="bugprone-terminating-continue clang-tidy check" />
    <option name="check" hit="bugprone-terminating-continue clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-terminating-continue clang-tidy check" />
    <option name="bugprone-throw-keyword-missing" hit="bugprone-throw-keyword-missing clang-tidy check" />
    <option name="check" hit="bugprone-throw-keyword-missing clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-throw-keyword-missing clang-tidy check" />
    <option name="bugprone-too-small-loop-variable" hit="bugprone-too-small-loop-variable clang-tidy check" />
    <option name="check" hit="bugprone-too-small-loop-variable clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-too-small-loop-variable clang-tidy check" />
    <option name="bugprone-unchecked-optional-access" hit="bugprone-unchecked-optional-access clang-tidy check" />
    <option name="check" hit="bugprone-unchecked-optional-access clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unchecked-optional-access clang-tidy check" />
    <option name="bugprone-undefined-memory-manipulation" hit="bugprone-undefined-memory-manipulation clang-tidy check" />
    <option name="check" hit="bugprone-undefined-memory-manipulation clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-undefined-memory-manipulation clang-tidy check" />
    <option name="bugprone-undelegated-constructor" hit="bugprone-undelegated-constructor clang-tidy check" />
    <option name="check" hit="bugprone-undelegated-constructor clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-undelegated-constructor clang-tidy check" />
    <option name="bugprone-unhandled-exception-at-new" hit="bugprone-unhandled-exception-at-new clang-tidy check" />
    <option name="check" hit="bugprone-unhandled-exception-at-new clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unhandled-exception-at-new clang-tidy check" />
    <option name="bugprone-unhandled-self-assignment" hit="bugprone-unhandled-self-assignment clang-tidy check" />
    <option name="check" hit="bugprone-unhandled-self-assignment clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unhandled-self-assignment clang-tidy check" />
    <option name="bugprone-unique-ptr-array-mismatch" hit="bugprone-unique-ptr-array-mismatch clang-tidy check" />
    <option name="check" hit="bugprone-unique-ptr-array-mismatch clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unique-ptr-array-mismatch clang-tidy check" />
    <option name="bugprone-unsafe-functions" hit="bugprone-unsafe-functions clang-tidy check" />
    <option name="check" hit="bugprone-unsafe-functions clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unsafe-functions clang-tidy check" />
    <option name="bugprone-unused-raii" hit="bugprone-unused-raii clang-tidy check" />
    <option name="check" hit="bugprone-unused-raii clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unused-raii clang-tidy check" />
    <option name="bugprone-unused-return-value" hit="bugprone-unused-return-value clang-tidy check" />
    <option name="check" hit="bugprone-unused-return-value clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-unused-return-value clang-tidy check" />
    <option name="bugprone-use-after-move" hit="bugprone-use-after-move clang-tidy check" />
    <option name="check" hit="bugprone-use-after-move clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-use-after-move clang-tidy check" />
    <option name="bugprone-virtual-near-miss" hit="bugprone-virtual-near-miss clang-tidy check" />
    <option name="check" hit="bugprone-virtual-near-miss clang-tidy check" />
    <option name="clang-tidy" hit="bugprone-virtual-near-miss clang-tidy check" />
    <option name="builtin-assume-aligned-alignment" hit="builtin-assume-aligned-alignment clang diagnostic" />
    <option name="clang" hit="builtin-assume-aligned-alignment clang diagnostic" />
    <option name="diagnostic" hit="builtin-assume-aligned-alignment clang diagnostic" />
    <option name="builtin-macro-redefined" hit="builtin-macro-redefined clang diagnostic" />
    <option name="clang" hit="builtin-macro-redefined clang diagnostic" />
    <option name="diagnostic" hit="builtin-macro-redefined clang diagnostic" />
    <option name="builtin-memcpy-chk-size" hit="builtin-memcpy-chk-size clang diagnostic" />
    <option name="clang" hit="builtin-memcpy-chk-size clang diagnostic" />
    <option name="diagnostic" hit="builtin-memcpy-chk-size clang diagnostic" />
    <option name="builtin-requires-header" hit="builtin-requires-header clang diagnostic" />
    <option name="clang" hit="builtin-requires-header clang diagnostic" />
    <option name="diagnostic" hit="builtin-requires-header clang diagnostic" />
    <option name="c++-compat" hit="c++-compat clang diagnostic" />
    <option name="clang" hit="c++-compat clang diagnostic" />
    <option name="diagnostic" hit="c++-compat clang diagnostic" />
    <option name="c++11-compat" hit="c++11-compat clang diagnostic" />
    <option name="clang" hit="c++11-compat clang diagnostic" />
    <option name="diagnostic" hit="c++11-compat clang diagnostic" />
    <option name="c++11-compat-deprecated-writable-strings" hit="c++11-compat-deprecated-writable-strings clang diagnostic" />
    <option name="clang" hit="c++11-compat-deprecated-writable-strings clang diagnostic" />
    <option name="diagnostic" hit="c++11-compat-deprecated-writable-strings clang diagnostic" />
    <option name="c++11-compat-pedantic" hit="c++11-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++11-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++11-compat-pedantic clang diagnostic" />
    <option name="c++11-compat-reserved-user-defined-literal" hit="c++11-compat-reserved-user-defined-literal clang diagnostic" />
    <option name="clang" hit="c++11-compat-reserved-user-defined-literal clang diagnostic" />
    <option name="diagnostic" hit="c++11-compat-reserved-user-defined-literal clang diagnostic" />
    <option name="c++11-extensions" hit="c++11-extensions clang diagnostic" />
    <option name="clang" hit="c++11-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++11-extensions clang diagnostic" />
    <option name="c++11-extra-semi" hit="c++11-extra-semi clang diagnostic" />
    <option name="clang" hit="c++11-extra-semi clang diagnostic" />
    <option name="diagnostic" hit="c++11-extra-semi clang diagnostic" />
    <option name="c++11-inline-namespace" hit="c++11-inline-namespace clang diagnostic" />
    <option name="clang" hit="c++11-inline-namespace clang diagnostic" />
    <option name="diagnostic" hit="c++11-inline-namespace clang diagnostic" />
    <option name="c++11-long-long" hit="c++11-long-long clang diagnostic" />
    <option name="clang" hit="c++11-long-long clang diagnostic" />
    <option name="diagnostic" hit="c++11-long-long clang diagnostic" />
    <option name="c++11-narrowing" hit="c++11-narrowing clang diagnostic" />
    <option name="clang" hit="c++11-narrowing clang diagnostic" />
    <option name="diagnostic" hit="c++11-narrowing clang diagnostic" />
    <option name="c++14-attribute-extensions" hit="c++14-attribute-extensions clang diagnostic" />
    <option name="clang" hit="c++14-attribute-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++14-attribute-extensions clang diagnostic" />
    <option name="c++14-binary-literal" hit="c++14-binary-literal clang diagnostic" />
    <option name="clang" hit="c++14-binary-literal clang diagnostic" />
    <option name="diagnostic" hit="c++14-binary-literal clang diagnostic" />
    <option name="c++14-compat" hit="c++14-compat clang diagnostic" />
    <option name="clang" hit="c++14-compat clang diagnostic" />
    <option name="diagnostic" hit="c++14-compat clang diagnostic" />
    <option name="c++14-compat-pedantic" hit="c++14-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++14-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++14-compat-pedantic clang diagnostic" />
    <option name="c++14-extensions" hit="c++14-extensions clang diagnostic" />
    <option name="clang" hit="c++14-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++14-extensions clang diagnostic" />
    <option name="c++17-attribute-extensions" hit="c++17-attribute-extensions clang diagnostic" />
    <option name="clang" hit="c++17-attribute-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++17-attribute-extensions clang diagnostic" />
    <option name="c++17-compat" hit="c++17-compat clang diagnostic" />
    <option name="clang" hit="c++17-compat clang diagnostic" />
    <option name="diagnostic" hit="c++17-compat clang diagnostic" />
    <option name="c++17-compat-mangling" hit="c++17-compat-mangling clang diagnostic" />
    <option name="clang" hit="c++17-compat-mangling clang diagnostic" />
    <option name="diagnostic" hit="c++17-compat-mangling clang diagnostic" />
    <option name="c++17-compat-pedantic" hit="c++17-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++17-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++17-compat-pedantic clang diagnostic" />
    <option name="c++17-extensions" hit="c++17-extensions clang diagnostic" />
    <option name="clang" hit="c++17-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++17-extensions clang diagnostic" />
    <option name="c++20-attribute-extensions" hit="c++20-attribute-extensions clang diagnostic" />
    <option name="clang" hit="c++20-attribute-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++20-attribute-extensions clang diagnostic" />
    <option name="c++20-compat" hit="c++20-compat clang diagnostic" />
    <option name="clang" hit="c++20-compat clang diagnostic" />
    <option name="diagnostic" hit="c++20-compat clang diagnostic" />
    <option name="c++20-compat-pedantic" hit="c++20-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++20-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++20-compat-pedantic clang diagnostic" />
    <option name="c++20-designator" hit="c++20-designator clang diagnostic" />
    <option name="clang" hit="c++20-designator clang diagnostic" />
    <option name="diagnostic" hit="c++20-designator clang diagnostic" />
    <option name="c++20-extensions" hit="c++20-extensions clang diagnostic" />
    <option name="clang" hit="c++20-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++20-extensions clang diagnostic" />
    <option name="c++23-default-comp-relaxed-constexpr" hit="c++23-default-comp-relaxed-constexpr clang diagnostic" />
    <option name="clang" hit="c++23-default-comp-relaxed-constexpr clang diagnostic" />
    <option name="diagnostic" hit="c++23-default-comp-relaxed-constexpr clang diagnostic" />
    <option name="c++23-extensions" hit="c++23-extensions clang diagnostic" />
    <option name="clang" hit="c++23-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++23-extensions clang diagnostic" />
    <option name="c++26-extensions" hit="c++26-extensions clang diagnostic" />
    <option name="clang" hit="c++26-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++26-extensions clang diagnostic" />
    <option name="c++2a-compat-pedantic" hit="c++2a-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++2a-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++2a-compat-pedantic clang diagnostic" />
    <option name="c++2a-extensions" hit="c++2a-extensions clang diagnostic" />
    <option name="clang" hit="c++2a-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++2a-extensions clang diagnostic" />
    <option name="c++2b-extensions" hit="c++2b-extensions clang diagnostic" />
    <option name="clang" hit="c++2b-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++2b-extensions clang diagnostic" />
    <option name="c++2c-extensions" hit="c++2c-extensions clang diagnostic" />
    <option name="clang" hit="c++2c-extensions clang diagnostic" />
    <option name="diagnostic" hit="c++2c-extensions clang diagnostic" />
    <option name="c++98-c++11-c++14-c++17-compat" hit="c++98-c++11-c++14-c++17-compat clang diagnostic" />
    <option name="clang" hit="c++98-c++11-c++14-c++17-compat clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-c++14-c++17-compat clang diagnostic" />
    <option name="c++98-c++11-c++14-c++17-compat-pedantic" hit="c++98-c++11-c++14-c++17-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++98-c++11-c++14-c++17-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-c++14-c++17-compat-pedantic clang diagnostic" />
    <option name="c++98-c++11-c++14-compat" hit="c++98-c++11-c++14-compat clang diagnostic" />
    <option name="clang" hit="c++98-c++11-c++14-compat clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-c++14-compat clang diagnostic" />
    <option name="c++98-c++11-c++14-compat-pedantic" hit="c++98-c++11-c++14-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++98-c++11-c++14-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-c++14-compat-pedantic clang diagnostic" />
    <option name="c++98-c++11-compat" hit="c++98-c++11-compat clang diagnostic" />
    <option name="clang" hit="c++98-c++11-compat clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-compat clang diagnostic" />
    <option name="c++98-c++11-compat-binary-literal" hit="c++98-c++11-compat-binary-literal clang diagnostic" />
    <option name="clang" hit="c++98-c++11-compat-binary-literal clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-compat-binary-literal clang diagnostic" />
    <option name="c++98-c++11-compat-pedantic" hit="c++98-c++11-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++98-c++11-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++98-c++11-compat-pedantic clang diagnostic" />
    <option name="c++98-compat" hit="c++98-compat clang diagnostic" />
    <option name="clang" hit="c++98-compat clang diagnostic" />
    <option name="diagnostic" hit="c++98-compat clang diagnostic" />
    <option name="c++98-compat-bind-to-temporary-copy" hit="c++98-compat-bind-to-temporary-copy clang diagnostic" />
    <option name="clang" hit="c++98-compat-bind-to-temporary-copy clang diagnostic" />
    <option name="diagnostic" hit="c++98-compat-bind-to-temporary-copy clang diagnostic" />
    <option name="c++98-compat-extra-semi" hit="c++98-compat-extra-semi clang diagnostic" />
    <option name="clang" hit="c++98-compat-extra-semi clang diagnostic" />
    <option name="diagnostic" hit="c++98-compat-extra-semi clang diagnostic" />
    <option name="c++98-compat-local-type-template-args" hit="c++98-compat-local-type-template-args clang diagnostic" />
    <option name="clang" hit="c++98-compat-local-type-template-args clang diagnostic" />
    <option name="diagnostic" hit="c++98-compat-local-type-template-args clang diagnostic" />
    <option name="c++98-compat-pedantic" hit="c++98-compat-pedantic clang diagnostic" />
    <option name="clang" hit="c++98-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="c++98-compat-pedantic clang diagnostic" />
    <option name="c++98-compat-unnamed-type-template-args" hit="c++98-compat-unnamed-type-template-args clang diagnostic" />
    <option name="clang" hit="c++98-compat-unnamed-type-template-args clang diagnostic" />
    <option name="diagnostic" hit="c++98-compat-unnamed-type-template-args clang diagnostic" />
    <option name="c11-extensions" hit="c11-extensions clang diagnostic" />
    <option name="clang" hit="c11-extensions clang diagnostic" />
    <option name="diagnostic" hit="c11-extensions clang diagnostic" />
    <option name="c2x-compat" hit="c2x-compat clang diagnostic" />
    <option name="clang" hit="c2x-compat clang diagnostic" />
    <option name="diagnostic" hit="c2x-compat clang diagnostic" />
    <option name="c2x-extensions" hit="c2x-extensions clang diagnostic" />
    <option name="clang" hit="c2x-extensions clang diagnostic" />
    <option name="diagnostic" hit="c2x-extensions clang diagnostic" />
    <option name="c99-compat" hit="c99-compat clang diagnostic" />
    <option name="clang" hit="c99-compat clang diagnostic" />
    <option name="diagnostic" hit="c99-compat clang diagnostic" />
    <option name="c99-designator" hit="c99-designator clang diagnostic" />
    <option name="clang" hit="c99-designator clang diagnostic" />
    <option name="diagnostic" hit="c99-designator clang diagnostic" />
    <option name="c99-extensions" hit="c99-extensions clang diagnostic" />
    <option name="clang" hit="c99-extensions clang diagnostic" />
    <option name="diagnostic" hit="c99-extensions clang diagnostic" />
    <option name="call-to-pure-virtual-from-ctor-dtor" hit="call-to-pure-virtual-from-ctor-dtor clang diagnostic" />
    <option name="clang" hit="call-to-pure-virtual-from-ctor-dtor clang diagnostic" />
    <option name="diagnostic" hit="call-to-pure-virtual-from-ctor-dtor clang diagnostic" />
    <option name="called-once-parameter" hit="called-once-parameter clang diagnostic" />
    <option name="clang" hit="called-once-parameter clang diagnostic" />
    <option name="diagnostic" hit="called-once-parameter clang diagnostic" />
    <option name="cast-align" hit="cast-align clang diagnostic" />
    <option name="clang" hit="cast-align clang diagnostic" />
    <option name="diagnostic" hit="cast-align clang diagnostic" />
    <option name="cast-calling-convention" hit="cast-calling-convention clang diagnostic" />
    <option name="clang" hit="cast-calling-convention clang diagnostic" />
    <option name="diagnostic" hit="cast-calling-convention clang diagnostic" />
    <option name="cast-function-type" hit="cast-function-type clang diagnostic" />
    <option name="clang" hit="cast-function-type clang diagnostic" />
    <option name="diagnostic" hit="cast-function-type clang diagnostic" />
    <option name="cast-function-type-strict" hit="cast-function-type-strict clang diagnostic" />
    <option name="clang" hit="cast-function-type-strict clang diagnostic" />
    <option name="diagnostic" hit="cast-function-type-strict clang diagnostic" />
    <option name="cast-of-sel-type" hit="cast-of-sel-type clang diagnostic" />
    <option name="clang" hit="cast-of-sel-type clang diagnostic" />
    <option name="diagnostic" hit="cast-of-sel-type clang diagnostic" />
    <option name="cast-qual" hit="cast-qual clang diagnostic" />
    <option name="clang" hit="cast-qual clang diagnostic" />
    <option name="diagnostic" hit="cast-qual clang diagnostic" />
    <option name="cast-qual-unrelated" hit="cast-qual-unrelated clang diagnostic" />
    <option name="clang" hit="cast-qual-unrelated clang diagnostic" />
    <option name="diagnostic" hit="cast-qual-unrelated clang diagnostic" />
    <option name="cert-con36-c" hit="cert-con36-c clang-tidy check" />
    <option name="check" hit="cert-con36-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-con36-c clang-tidy check" />
    <option name="cert-con54-cpp" hit="cert-con54-cpp clang-tidy check" />
    <option name="check" hit="cert-con54-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-con54-cpp clang-tidy check" />
    <option name="cert-dcl03-c" hit="cert-dcl03-c clang-tidy check" />
    <option name="check" hit="cert-dcl03-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl03-c clang-tidy check" />
    <option name="cert-dcl16-c" hit="cert-dcl16-c clang-tidy check" />
    <option name="check" hit="cert-dcl16-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl16-c clang-tidy check" />
    <option name="cert-dcl21-cpp" hit="cert-dcl21-cpp clang-tidy check" />
    <option name="check" hit="cert-dcl21-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl21-cpp clang-tidy check" />
    <option name="cert-dcl37-c" hit="cert-dcl37-c clang-tidy check" />
    <option name="check" hit="cert-dcl37-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl37-c clang-tidy check" />
    <option name="cert-dcl50-cpp" hit="cert-dcl50-cpp clang-tidy check" />
    <option name="check" hit="cert-dcl50-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl50-cpp clang-tidy check" />
    <option name="cert-dcl51-cpp" hit="cert-dcl51-cpp clang-tidy check" />
    <option name="check" hit="cert-dcl51-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl51-cpp clang-tidy check" />
    <option name="cert-dcl54-cpp" hit="cert-dcl54-cpp clang-tidy check" />
    <option name="check" hit="cert-dcl54-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl54-cpp clang-tidy check" />
    <option name="cert-dcl58-cpp" hit="cert-dcl58-cpp clang-tidy check" />
    <option name="check" hit="cert-dcl58-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl58-cpp clang-tidy check" />
    <option name="cert-dcl59-cpp" hit="cert-dcl59-cpp clang-tidy check" />
    <option name="check" hit="cert-dcl59-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-dcl59-cpp clang-tidy check" />
    <option name="cert-env33-c" hit="cert-env33-c clang-tidy check" />
    <option name="check" hit="cert-env33-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-env33-c clang-tidy check" />
    <option name="cert-err09-cpp" hit="cert-err09-cpp clang-tidy check" />
    <option name="check" hit="cert-err09-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-err09-cpp clang-tidy check" />
    <option name="cert-err33-c" hit="cert-err33-c clang-tidy check" />
    <option name="check" hit="cert-err33-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-err33-c clang-tidy check" />
    <option name="cert-err34-c" hit="cert-err34-c clang-tidy check" />
    <option name="check" hit="cert-err34-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-err34-c clang-tidy check" />
    <option name="cert-err52-cpp" hit="cert-err52-cpp clang-tidy check" />
    <option name="check" hit="cert-err52-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-err52-cpp clang-tidy check" />
    <option name="cert-err58-cpp" hit="cert-err58-cpp clang-tidy check" />
    <option name="check" hit="cert-err58-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-err58-cpp clang-tidy check" />
    <option name="cert-err60-cpp" hit="cert-err60-cpp clang-tidy check" />
    <option name="check" hit="cert-err60-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-err60-cpp clang-tidy check" />
    <option name="cert-err61-cpp" hit="cert-err61-cpp clang-tidy check" />
    <option name="check" hit="cert-err61-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-err61-cpp clang-tidy check" />
    <option name="cert-exp42-c" hit="cert-exp42-c clang-tidy check" />
    <option name="check" hit="cert-exp42-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-exp42-c clang-tidy check" />
    <option name="cert-fio38-c" hit="cert-fio38-c clang-tidy check" />
    <option name="check" hit="cert-fio38-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-fio38-c clang-tidy check" />
    <option name="cert-flp30-c" hit="cert-flp30-c clang-tidy check" />
    <option name="check" hit="cert-flp30-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-flp30-c clang-tidy check" />
    <option name="cert-flp37-c" hit="cert-flp37-c clang-tidy check" />
    <option name="check" hit="cert-flp37-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-flp37-c clang-tidy check" />
    <option name="cert-mem57-cpp" hit="cert-mem57-cpp clang-tidy check" />
    <option name="check" hit="cert-mem57-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-mem57-cpp clang-tidy check" />
    <option name="cert-msc24-c" hit="cert-msc24-c clang-tidy check" />
    <option name="check" hit="cert-msc24-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc24-c clang-tidy check" />
    <option name="cert-msc30-c" hit="cert-msc30-c clang-tidy check" />
    <option name="check" hit="cert-msc30-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc30-c clang-tidy check" />
    <option name="cert-msc32-c" hit="cert-msc32-c clang-tidy check" />
    <option name="check" hit="cert-msc32-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc32-c clang-tidy check" />
    <option name="cert-msc33-c" hit="cert-msc33-c clang-tidy check" />
    <option name="check" hit="cert-msc33-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc33-c clang-tidy check" />
    <option name="cert-msc50-cpp" hit="cert-msc50-cpp clang-tidy check" />
    <option name="check" hit="cert-msc50-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc50-cpp clang-tidy check" />
    <option name="cert-msc51-cpp" hit="cert-msc51-cpp clang-tidy check" />
    <option name="check" hit="cert-msc51-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc51-cpp clang-tidy check" />
    <option name="cert-msc54-cpp" hit="cert-msc54-cpp clang-tidy check" />
    <option name="check" hit="cert-msc54-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-msc54-cpp clang-tidy check" />
    <option name="cert-oop11-cpp" hit="cert-oop11-cpp clang-tidy check" />
    <option name="check" hit="cert-oop11-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-oop11-cpp clang-tidy check" />
    <option name="cert-oop54-cpp" hit="cert-oop54-cpp clang-tidy check" />
    <option name="check" hit="cert-oop54-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-oop54-cpp clang-tidy check" />
    <option name="cert-oop57-cpp" hit="cert-oop57-cpp clang-tidy check" />
    <option name="check" hit="cert-oop57-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-oop57-cpp clang-tidy check" />
    <option name="cert-oop58-cpp" hit="cert-oop58-cpp clang-tidy check" />
    <option name="check" hit="cert-oop58-cpp clang-tidy check" />
    <option name="clang-tidy" hit="cert-oop58-cpp clang-tidy check" />
    <option name="cert-pos44-c" hit="cert-pos44-c clang-tidy check" />
    <option name="check" hit="cert-pos44-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-pos44-c clang-tidy check" />
    <option name="cert-pos47-c" hit="cert-pos47-c clang-tidy check" />
    <option name="check" hit="cert-pos47-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-pos47-c clang-tidy check" />
    <option name="cert-sig30-c" hit="cert-sig30-c clang-tidy check" />
    <option name="check" hit="cert-sig30-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-sig30-c clang-tidy check" />
    <option name="cert-str34-c" hit="cert-str34-c clang-tidy check" />
    <option name="check" hit="cert-str34-c clang-tidy check" />
    <option name="clang-tidy" hit="cert-str34-c clang-tidy check" />
    <option name="char-subscripts" hit="char-subscripts clang diagnostic" />
    <option name="clang" hit="char-subscripts clang diagnostic" />
    <option name="diagnostic" hit="char-subscripts clang diagnostic" />
    <option name="clang" hit="clang-cl-pch clang diagnostic" />
    <option name="clang-cl-pch" hit="clang-cl-pch clang diagnostic" />
    <option name="diagnostic" hit="clang-cl-pch clang diagnostic" />
    <option name="clang" hit="class-conversion clang diagnostic" />
    <option name="class-conversion" hit="class-conversion clang diagnostic" />
    <option name="diagnostic" hit="class-conversion clang diagnostic" />
    <option name="clang" hit="class-varargs clang diagnostic" />
    <option name="class-varargs" hit="class-varargs clang diagnostic" />
    <option name="diagnostic" hit="class-varargs clang diagnostic" />
    <option name="clang" hit="cmse-union-leak clang diagnostic" />
    <option name="cmse-union-leak" hit="cmse-union-leak clang diagnostic" />
    <option name="diagnostic" hit="cmse-union-leak clang diagnostic" />
    <option name="clang" hit="comma clang diagnostic" />
    <option name="comma" hit="comma clang diagnostic" />
    <option name="diagnostic" hit="comma clang diagnostic" />
    <option name="clang" hit="comment clang diagnostic" />
    <option name="comment" hit="comment clang diagnostic" />
    <option name="diagnostic" hit="comment clang diagnostic" />
    <option name="clang" hit="compare-distinct-pointer-types clang diagnostic" />
    <option name="compare-distinct-pointer-types" hit="compare-distinct-pointer-types clang diagnostic" />
    <option name="diagnostic" hit="compare-distinct-pointer-types clang diagnostic" />
    <option name="clang" hit="completion-handler clang diagnostic" />
    <option name="completion-handler" hit="completion-handler clang diagnostic" />
    <option name="diagnostic" hit="completion-handler clang diagnostic" />
    <option name="clang" hit="complex-component-init clang diagnostic" />
    <option name="complex-component-init" hit="complex-component-init clang diagnostic" />
    <option name="diagnostic" hit="complex-component-init clang diagnostic" />
    <option name="clang" hit="compound-token-split clang diagnostic" />
    <option name="compound-token-split" hit="compound-token-split clang diagnostic" />
    <option name="diagnostic" hit="compound-token-split clang diagnostic" />
    <option name="clang" hit="compound-token-split-by-macro clang diagnostic" />
    <option name="compound-token-split-by-macro" hit="compound-token-split-by-macro clang diagnostic" />
    <option name="diagnostic" hit="compound-token-split-by-macro clang diagnostic" />
    <option name="clang" hit="compound-token-split-by-space clang diagnostic" />
    <option name="compound-token-split-by-space" hit="compound-token-split-by-space clang diagnostic" />
    <option name="diagnostic" hit="compound-token-split-by-space clang diagnostic" />
    <option name="check" hit="concurrency-mt-unsafe clang-tidy check" />
    <option name="clang-tidy" hit="concurrency-mt-unsafe clang-tidy check" />
    <option name="concurrency-mt-unsafe" hit="concurrency-mt-unsafe clang-tidy check" />
    <option name="check" hit="concurrency-thread-canceltype-asynchronous clang-tidy check" />
    <option name="clang-tidy" hit="concurrency-thread-canceltype-asynchronous clang-tidy check" />
    <option name="concurrency-thread-canceltype-asynchronous" hit="concurrency-thread-canceltype-asynchronous clang-tidy check" />
    <option name="clang" hit="conditional-type-mismatch clang diagnostic" />
    <option name="conditional-type-mismatch" hit="conditional-type-mismatch clang diagnostic" />
    <option name="diagnostic" hit="conditional-type-mismatch clang diagnostic" />
    <option name="clang" hit="conditional-uninitialized clang diagnostic" />
    <option name="conditional-uninitialized" hit="conditional-uninitialized clang diagnostic" />
    <option name="diagnostic" hit="conditional-uninitialized clang diagnostic" />
    <option name="clang" hit="config-macros clang diagnostic" />
    <option name="config-macros" hit="config-macros clang diagnostic" />
    <option name="diagnostic" hit="config-macros clang diagnostic" />
    <option name="clang" hit="constant-conversion clang diagnostic" />
    <option name="constant-conversion" hit="constant-conversion clang diagnostic" />
    <option name="diagnostic" hit="constant-conversion clang diagnostic" />
    <option name="clang" hit="constant-evaluated clang diagnostic" />
    <option name="constant-evaluated" hit="constant-evaluated clang diagnostic" />
    <option name="diagnostic" hit="constant-evaluated clang diagnostic" />
    <option name="clang" hit="constant-logical-operand clang diagnostic" />
    <option name="constant-logical-operand" hit="constant-logical-operand clang diagnostic" />
    <option name="diagnostic" hit="constant-logical-operand clang diagnostic" />
    <option name="always" hit="consteval if is always constant" />
    <option name="constant" hit="consteval if is always constant" />
    <option name="consteval" hit="consteval if is always constant" />
    <option name="if" hit="consteval if is always constant" />
    <option name="is" hit="consteval if is always constant" />
    <option name="clang" hit="constexpr-not-const clang diagnostic" />
    <option name="constexpr-not-const" hit="constexpr-not-const clang diagnostic" />
    <option name="diagnostic" hit="constexpr-not-const clang diagnostic" />
    <option name="clang" hit="consumed clang diagnostic" />
    <option name="consumed" hit="consumed clang diagnostic" />
    <option name="diagnostic" hit="consumed clang diagnostic" />
    <option name="clang" hit="conversion clang diagnostic" />
    <option name="conversion" hit="conversion clang diagnostic" />
    <option name="diagnostic" hit="conversion clang diagnostic" />
    <option name="analyzer" hit="core.CallAndMessage clang static analyzer check" />
    <option name="callandmessage" hit="core.CallAndMessage clang static analyzer check" />
    <option name="check" hit="core.CallAndMessage clang static analyzer check" />
    <option name="clang" hit="core.CallAndMessage clang static analyzer check" />
    <option name="core" hit="core.CallAndMessage clang static analyzer check" />
    <option name="static" hit="core.CallAndMessage clang static analyzer check" />
    <option name="analyzer" hit="core.CallAndMessageModeling clang static analyzer check" />
    <option name="callandmessagemodeling" hit="core.CallAndMessageModeling clang static analyzer check" />
    <option name="check" hit="core.CallAndMessageModeling clang static analyzer check" />
    <option name="clang" hit="core.CallAndMessageModeling clang static analyzer check" />
    <option name="core" hit="core.CallAndMessageModeling clang static analyzer check" />
    <option name="static" hit="core.CallAndMessageModeling clang static analyzer check" />
    <option name="analyzer" hit="core.DivideZero clang static analyzer check" />
    <option name="check" hit="core.DivideZero clang static analyzer check" />
    <option name="clang" hit="core.DivideZero clang static analyzer check" />
    <option name="core" hit="core.DivideZero clang static analyzer check" />
    <option name="dividezero" hit="core.DivideZero clang static analyzer check" />
    <option name="static" hit="core.DivideZero clang static analyzer check" />
    <option name="analyzer" hit="core.DynamicTypePropagation clang static analyzer check" />
    <option name="check" hit="core.DynamicTypePropagation clang static analyzer check" />
    <option name="clang" hit="core.DynamicTypePropagation clang static analyzer check" />
    <option name="core" hit="core.DynamicTypePropagation clang static analyzer check" />
    <option name="dynamictypepropagation" hit="core.DynamicTypePropagation clang static analyzer check" />
    <option name="static" hit="core.DynamicTypePropagation clang static analyzer check" />
    <option name="analyzer" hit="core.NonNullParamChecker clang static analyzer check" />
    <option name="check" hit="core.NonNullParamChecker clang static analyzer check" />
    <option name="clang" hit="core.NonNullParamChecker clang static analyzer check" />
    <option name="core" hit="core.NonNullParamChecker clang static analyzer check" />
    <option name="nonnullparamchecker" hit="core.NonNullParamChecker clang static analyzer check" />
    <option name="static" hit="core.NonNullParamChecker clang static analyzer check" />
    <option name="analyzer" hit="core.NonnilStringConstants clang static analyzer check" />
    <option name="check" hit="core.NonnilStringConstants clang static analyzer check" />
    <option name="clang" hit="core.NonnilStringConstants clang static analyzer check" />
    <option name="core" hit="core.NonnilStringConstants clang static analyzer check" />
    <option name="nonnilstringconstants" hit="core.NonnilStringConstants clang static analyzer check" />
    <option name="static" hit="core.NonnilStringConstants clang static analyzer check" />
    <option name="analyzer" hit="core.NullDereference clang static analyzer check" />
    <option name="check" hit="core.NullDereference clang static analyzer check" />
    <option name="clang" hit="core.NullDereference clang static analyzer check" />
    <option name="core" hit="core.NullDereference clang static analyzer check" />
    <option name="nulldereference" hit="core.NullDereference clang static analyzer check" />
    <option name="static" hit="core.NullDereference clang static analyzer check" />
    <option name="analyzer" hit="core.StackAddrEscapeBase clang static analyzer check" />
    <option name="check" hit="core.StackAddrEscapeBase clang static analyzer check" />
    <option name="clang" hit="core.StackAddrEscapeBase clang static analyzer check" />
    <option name="core" hit="core.StackAddrEscapeBase clang static analyzer check" />
    <option name="stackaddrescapebase" hit="core.StackAddrEscapeBase clang static analyzer check" />
    <option name="static" hit="core.StackAddrEscapeBase clang static analyzer check" />
    <option name="analyzer" hit="core.StackAddressEscape clang static analyzer check" />
    <option name="check" hit="core.StackAddressEscape clang static analyzer check" />
    <option name="clang" hit="core.StackAddressEscape clang static analyzer check" />
    <option name="core" hit="core.StackAddressEscape clang static analyzer check" />
    <option name="stackaddressescape" hit="core.StackAddressEscape clang static analyzer check" />
    <option name="static" hit="core.StackAddressEscape clang static analyzer check" />
    <option name="analyzer" hit="core.UndefinedBinaryOperatorResult clang static analyzer check" />
    <option name="check" hit="core.UndefinedBinaryOperatorResult clang static analyzer check" />
    <option name="clang" hit="core.UndefinedBinaryOperatorResult clang static analyzer check" />
    <option name="core" hit="core.UndefinedBinaryOperatorResult clang static analyzer check" />
    <option name="static" hit="core.UndefinedBinaryOperatorResult clang static analyzer check" />
    <option name="undefinedbinaryoperatorresult" hit="core.UndefinedBinaryOperatorResult clang static analyzer check" />
    <option name="analyzer" hit="core.VLASize clang static analyzer check" />
    <option name="check" hit="core.VLASize clang static analyzer check" />
    <option name="clang" hit="core.VLASize clang static analyzer check" />
    <option name="core" hit="core.VLASize clang static analyzer check" />
    <option name="static" hit="core.VLASize clang static analyzer check" />
    <option name="vlasize" hit="core.VLASize clang static analyzer check" />
    <option name="analyzer" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="builtin" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="builtinfunctions" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="check" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="clang" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="core" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="static" hit="core.builtin.BuiltinFunctions clang static analyzer check" />
    <option name="analyzer" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="builtin" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="check" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="clang" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="core" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="noreturnfunctions" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="static" hit="core.builtin.NoReturnFunctions clang static analyzer check" />
    <option name="analyzer" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="arraysubscript" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="check" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="clang" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="core" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="static" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="uninitialized" hit="core.uninitialized.ArraySubscript clang static analyzer check" />
    <option name="analyzer" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="assign" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="check" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="clang" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="core" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="static" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="uninitialized" hit="core.uninitialized.Assign clang static analyzer check" />
    <option name="analyzer" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="branch" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="check" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="clang" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="core" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="static" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="uninitialized" hit="core.uninitialized.Branch clang static analyzer check" />
    <option name="analyzer" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="capturedblockvariable" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="check" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="clang" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="core" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="static" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="uninitialized" hit="core.uninitialized.CapturedBlockVariable clang static analyzer check" />
    <option name="analyzer" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="check" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="clang" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="core" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="newarraysize" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="static" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="uninitialized" hit="core.uninitialized.NewArraySize clang static analyzer check" />
    <option name="analyzer" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="check" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="clang" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="core" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="static" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="undefreturn" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="uninitialized" hit="core.uninitialized.UndefReturn clang static analyzer check" />
    <option name="clang" hit="coro-non-aligned-allocation-function clang diagnostic" />
    <option name="coro-non-aligned-allocation-function" hit="coro-non-aligned-allocation-function clang diagnostic" />
    <option name="diagnostic" hit="coro-non-aligned-allocation-function clang diagnostic" />
    <option name="clang" hit="coroutine-missing-unhandled-exception clang diagnostic" />
    <option name="coroutine-missing-unhandled-exception" hit="coroutine-missing-unhandled-exception clang diagnostic" />
    <option name="diagnostic" hit="coroutine-missing-unhandled-exception clang diagnostic" />
    <option name="clang" hit="covered-switch-default clang diagnostic" />
    <option name="covered-switch-default" hit="covered-switch-default clang diagnostic" />
    <option name="diagnostic" hit="covered-switch-default clang diagnostic" />
    <option name="analyzer" hit="cplusplus.InnerPointer clang static analyzer check" />
    <option name="check" hit="cplusplus.InnerPointer clang static analyzer check" />
    <option name="clang" hit="cplusplus.InnerPointer clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.InnerPointer clang static analyzer check" />
    <option name="innerpointer" hit="cplusplus.InnerPointer clang static analyzer check" />
    <option name="static" hit="cplusplus.InnerPointer clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.Move clang static analyzer check" />
    <option name="check" hit="cplusplus.Move clang static analyzer check" />
    <option name="clang" hit="cplusplus.Move clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.Move clang static analyzer check" />
    <option name="move" hit="cplusplus.Move clang static analyzer check" />
    <option name="static" hit="cplusplus.Move clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.NewDelete clang static analyzer check" />
    <option name="check" hit="cplusplus.NewDelete clang static analyzer check" />
    <option name="clang" hit="cplusplus.NewDelete clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.NewDelete clang static analyzer check" />
    <option name="newdelete" hit="cplusplus.NewDelete clang static analyzer check" />
    <option name="static" hit="cplusplus.NewDelete clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.NewDeleteLeaks clang static analyzer check" />
    <option name="check" hit="cplusplus.NewDeleteLeaks clang static analyzer check" />
    <option name="clang" hit="cplusplus.NewDeleteLeaks clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.NewDeleteLeaks clang static analyzer check" />
    <option name="newdeleteleaks" hit="cplusplus.NewDeleteLeaks clang static analyzer check" />
    <option name="static" hit="cplusplus.NewDeleteLeaks clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.PlacementNew clang static analyzer check" />
    <option name="check" hit="cplusplus.PlacementNew clang static analyzer check" />
    <option name="clang" hit="cplusplus.PlacementNew clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.PlacementNew clang static analyzer check" />
    <option name="placementnew" hit="cplusplus.PlacementNew clang static analyzer check" />
    <option name="static" hit="cplusplus.PlacementNew clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.PureVirtualCall clang static analyzer check" />
    <option name="check" hit="cplusplus.PureVirtualCall clang static analyzer check" />
    <option name="clang" hit="cplusplus.PureVirtualCall clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.PureVirtualCall clang static analyzer check" />
    <option name="purevirtualcall" hit="cplusplus.PureVirtualCall clang static analyzer check" />
    <option name="static" hit="cplusplus.PureVirtualCall clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.SelfAssignment clang static analyzer check" />
    <option name="check" hit="cplusplus.SelfAssignment clang static analyzer check" />
    <option name="clang" hit="cplusplus.SelfAssignment clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.SelfAssignment clang static analyzer check" />
    <option name="selfassignment" hit="cplusplus.SelfAssignment clang static analyzer check" />
    <option name="static" hit="cplusplus.SelfAssignment clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.SmartPtrModeling clang static analyzer check" />
    <option name="check" hit="cplusplus.SmartPtrModeling clang static analyzer check" />
    <option name="clang" hit="cplusplus.SmartPtrModeling clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.SmartPtrModeling clang static analyzer check" />
    <option name="smartptrmodeling" hit="cplusplus.SmartPtrModeling clang static analyzer check" />
    <option name="static" hit="cplusplus.SmartPtrModeling clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.StringChecker clang static analyzer check" />
    <option name="check" hit="cplusplus.StringChecker clang static analyzer check" />
    <option name="clang" hit="cplusplus.StringChecker clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.StringChecker clang static analyzer check" />
    <option name="static" hit="cplusplus.StringChecker clang static analyzer check" />
    <option name="stringchecker" hit="cplusplus.StringChecker clang static analyzer check" />
    <option name="analyzer" hit="cplusplus.VirtualCallModeling clang static analyzer check" />
    <option name="check" hit="cplusplus.VirtualCallModeling clang static analyzer check" />
    <option name="clang" hit="cplusplus.VirtualCallModeling clang static analyzer check" />
    <option name="cplusplus" hit="cplusplus.VirtualCallModeling clang static analyzer check" />
    <option name="static" hit="cplusplus.VirtualCallModeling clang static analyzer check" />
    <option name="virtualcallmodeling" hit="cplusplus.VirtualCallModeling clang static analyzer check" />
    <option name="check" hit="cppcoreguidelines-avoid-c-arrays clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-c-arrays clang-tidy check" />
    <option name="cppcoreguidelines-avoid-c-arrays" hit="cppcoreguidelines-avoid-c-arrays clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-capturing-lambda-coroutines clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-capturing-lambda-coroutines clang-tidy check" />
    <option name="cppcoreguidelines-avoid-capturing-lambda-coroutines" hit="cppcoreguidelines-avoid-capturing-lambda-coroutines clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-const-or-ref-data-members clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-const-or-ref-data-members clang-tidy check" />
    <option name="cppcoreguidelines-avoid-const-or-ref-data-members" hit="cppcoreguidelines-avoid-const-or-ref-data-members clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-do-while clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-do-while clang-tidy check" />
    <option name="cppcoreguidelines-avoid-do-while" hit="cppcoreguidelines-avoid-do-while clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-goto clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-goto clang-tidy check" />
    <option name="cppcoreguidelines-avoid-goto" hit="cppcoreguidelines-avoid-goto clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-magic-numbers clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-magic-numbers clang-tidy check" />
    <option name="cppcoreguidelines-avoid-magic-numbers" hit="cppcoreguidelines-avoid-magic-numbers clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-non-const-global-variables clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-non-const-global-variables clang-tidy check" />
    <option name="cppcoreguidelines-avoid-non-const-global-variables" hit="cppcoreguidelines-avoid-non-const-global-variables clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-avoid-reference-coroutine-parameters clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-avoid-reference-coroutine-parameters clang-tidy check" />
    <option name="cppcoreguidelines-avoid-reference-coroutine-parameters" hit="cppcoreguidelines-avoid-reference-coroutine-parameters clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-c-copy-assignment-signature clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-c-copy-assignment-signature clang-tidy check" />
    <option name="cppcoreguidelines-c-copy-assignment-signature" hit="cppcoreguidelines-c-copy-assignment-signature clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-explicit-virtual-functions clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-explicit-virtual-functions clang-tidy check" />
    <option name="cppcoreguidelines-explicit-virtual-functions" hit="cppcoreguidelines-explicit-virtual-functions clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-init-variables clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-init-variables clang-tidy check" />
    <option name="cppcoreguidelines-init-variables" hit="cppcoreguidelines-init-variables clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-interfaces-global-init clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-interfaces-global-init clang-tidy check" />
    <option name="cppcoreguidelines-interfaces-global-init" hit="cppcoreguidelines-interfaces-global-init clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-macro-usage clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-macro-usage clang-tidy check" />
    <option name="cppcoreguidelines-macro-usage" hit="cppcoreguidelines-macro-usage clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-misleading-capture-default-by-value clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-misleading-capture-default-by-value clang-tidy check" />
    <option name="cppcoreguidelines-misleading-capture-default-by-value" hit="cppcoreguidelines-misleading-capture-default-by-value clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-missing-std-forward clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-missing-std-forward clang-tidy check" />
    <option name="cppcoreguidelines-missing-std-forward" hit="cppcoreguidelines-missing-std-forward clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-narrowing-conversions clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-narrowing-conversions clang-tidy check" />
    <option name="cppcoreguidelines-narrowing-conversions" hit="cppcoreguidelines-narrowing-conversions clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-no-malloc clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-no-malloc clang-tidy check" />
    <option name="cppcoreguidelines-no-malloc" hit="cppcoreguidelines-no-malloc clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-noexcept-destructor clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-noexcept-destructor clang-tidy check" />
    <option name="cppcoreguidelines-noexcept-destructor" hit="cppcoreguidelines-noexcept-destructor clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-noexcept-move-operations clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-noexcept-move-operations clang-tidy check" />
    <option name="cppcoreguidelines-noexcept-move-operations" hit="cppcoreguidelines-noexcept-move-operations clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-noexcept-swap clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-noexcept-swap clang-tidy check" />
    <option name="cppcoreguidelines-noexcept-swap" hit="cppcoreguidelines-noexcept-swap clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-non-private-member-variables-in-classes clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-non-private-member-variables-in-classes clang-tidy check" />
    <option name="cppcoreguidelines-non-private-member-variables-in-classes" hit="cppcoreguidelines-non-private-member-variables-in-classes clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-owning-memory clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-owning-memory clang-tidy check" />
    <option name="cppcoreguidelines-owning-memory" hit="cppcoreguidelines-owning-memory clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-prefer-member-initializer clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-prefer-member-initializer clang-tidy check" />
    <option name="cppcoreguidelines-prefer-member-initializer" hit="cppcoreguidelines-prefer-member-initializer clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-bounds-array-to-pointer-decay clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-bounds-array-to-pointer-decay clang-tidy check" />
    <option name="cppcoreguidelines-pro-bounds-array-to-pointer-decay" hit="cppcoreguidelines-pro-bounds-array-to-pointer-decay clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-bounds-constant-array-index clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-bounds-constant-array-index clang-tidy check" />
    <option name="cppcoreguidelines-pro-bounds-constant-array-index" hit="cppcoreguidelines-pro-bounds-constant-array-index clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-bounds-pointer-arithmetic clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-bounds-pointer-arithmetic clang-tidy check" />
    <option name="cppcoreguidelines-pro-bounds-pointer-arithmetic" hit="cppcoreguidelines-pro-bounds-pointer-arithmetic clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-const-cast clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-const-cast clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-const-cast" hit="cppcoreguidelines-pro-type-const-cast clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-cstyle-cast clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-cstyle-cast clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-cstyle-cast" hit="cppcoreguidelines-pro-type-cstyle-cast clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-member-init clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-member-init clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-member-init" hit="cppcoreguidelines-pro-type-member-init clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-reinterpret-cast clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-reinterpret-cast clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-reinterpret-cast" hit="cppcoreguidelines-pro-type-reinterpret-cast clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-static-cast-downcast clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-static-cast-downcast clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-static-cast-downcast" hit="cppcoreguidelines-pro-type-static-cast-downcast clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-union-access clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-union-access clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-union-access" hit="cppcoreguidelines-pro-type-union-access clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-pro-type-vararg clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-pro-type-vararg clang-tidy check" />
    <option name="cppcoreguidelines-pro-type-vararg" hit="cppcoreguidelines-pro-type-vararg clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-rvalue-reference-param-not-moved clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-rvalue-reference-param-not-moved clang-tidy check" />
    <option name="cppcoreguidelines-rvalue-reference-param-not-moved" hit="cppcoreguidelines-rvalue-reference-param-not-moved clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-slicing clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-slicing clang-tidy check" />
    <option name="cppcoreguidelines-slicing" hit="cppcoreguidelines-slicing clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-special-member-functions clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-special-member-functions clang-tidy check" />
    <option name="cppcoreguidelines-special-member-functions" hit="cppcoreguidelines-special-member-functions clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-use-default-member-init clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-use-default-member-init clang-tidy check" />
    <option name="cppcoreguidelines-use-default-member-init" hit="cppcoreguidelines-use-default-member-init clang-tidy check" />
    <option name="check" hit="cppcoreguidelines-virtual-class-destructor clang-tidy check" />
    <option name="clang-tidy" hit="cppcoreguidelines-virtual-class-destructor clang-tidy check" />
    <option name="cppcoreguidelines-virtual-class-destructor" hit="cppcoreguidelines-virtual-class-destructor clang-tidy check" />
    <option name="clang" hit="cstring-format-directive clang diagnostic" />
    <option name="cstring-format-directive" hit="cstring-format-directive clang diagnostic" />
    <option name="diagnostic" hit="cstring-format-directive clang diagnostic" />
    <option name="clang" hit="ctad-maybe-unsupported clang diagnostic" />
    <option name="ctad-maybe-unsupported" hit="ctad-maybe-unsupported clang diagnostic" />
    <option name="diagnostic" hit="ctad-maybe-unsupported clang diagnostic" />
    <option name="clang" hit="ctu clang diagnostic" />
    <option name="ctu" hit="ctu clang diagnostic" />
    <option name="diagnostic" hit="ctu clang diagnostic" />
    <option name="clang" hit="cuda-compat clang diagnostic" />
    <option name="cuda-compat" hit="cuda-compat clang diagnostic" />
    <option name="diagnostic" hit="cuda-compat clang diagnostic" />
    <option name="clang" hit="custom-atomic-properties clang diagnostic" />
    <option name="custom-atomic-properties" hit="custom-atomic-properties clang diagnostic" />
    <option name="diagnostic" hit="custom-atomic-properties clang diagnostic" />
    <option name="clang" hit="cxx-attribute-extension clang diagnostic" />
    <option name="cxx-attribute-extension" hit="cxx-attribute-extension clang diagnostic" />
    <option name="diagnostic" hit="cxx-attribute-extension clang diagnostic" />
    <option name="clang" hit="dangling clang diagnostic" />
    <option name="dangling" hit="dangling clang diagnostic" />
    <option name="diagnostic" hit="dangling clang diagnostic" />
    <option name="clang" hit="dangling-else clang diagnostic" />
    <option name="dangling-else" hit="dangling-else clang diagnostic" />
    <option name="diagnostic" hit="dangling-else clang diagnostic" />
    <option name="clang" hit="dangling-field clang diagnostic" />
    <option name="dangling-field" hit="dangling-field clang diagnostic" />
    <option name="diagnostic" hit="dangling-field clang diagnostic" />
    <option name="clang" hit="dangling-gsl clang diagnostic" />
    <option name="dangling-gsl" hit="dangling-gsl clang diagnostic" />
    <option name="diagnostic" hit="dangling-gsl clang diagnostic" />
    <option name="clang" hit="dangling-initializer-list clang diagnostic" />
    <option name="dangling-initializer-list" hit="dangling-initializer-list clang diagnostic" />
    <option name="diagnostic" hit="dangling-initializer-list clang diagnostic" />
    <option name="check" hit="darwin-avoid-spinlock clang-tidy check" />
    <option name="clang-tidy" hit="darwin-avoid-spinlock clang-tidy check" />
    <option name="darwin-avoid-spinlock" hit="darwin-avoid-spinlock clang-tidy check" />
    <option name="check" hit="darwin-dispatch-once-nonstatic clang-tidy check" />
    <option name="clang-tidy" hit="darwin-dispatch-once-nonstatic clang-tidy check" />
    <option name="darwin-dispatch-once-nonstatic" hit="darwin-dispatch-once-nonstatic clang-tidy check" />
    <option name="clang" hit="darwin-sdk-settings clang diagnostic" />
    <option name="darwin-sdk-settings" hit="darwin-sdk-settings clang diagnostic" />
    <option name="diagnostic" hit="darwin-sdk-settings clang diagnostic" />
    <option name="clang" hit="date-time clang diagnostic" />
    <option name="date-time" hit="date-time clang diagnostic" />
    <option name="diagnostic" hit="date-time clang diagnostic" />
    <option name="analyzer" hit="deadcode.DeadStores clang static analyzer check" />
    <option name="check" hit="deadcode.DeadStores clang static analyzer check" />
    <option name="clang" hit="deadcode.DeadStores clang static analyzer check" />
    <option name="deadcode" hit="deadcode.DeadStores clang static analyzer check" />
    <option name="deadstores" hit="deadcode.DeadStores clang static analyzer check" />
    <option name="static" hit="deadcode.DeadStores clang static analyzer check" />
    <option name="clang" hit="dealloc-in-category clang diagnostic" />
    <option name="dealloc-in-category" hit="dealloc-in-category clang diagnostic" />
    <option name="diagnostic" hit="dealloc-in-category clang diagnostic" />
    <option name="clang" hit="debug-compression-unavailable clang diagnostic" />
    <option name="debug-compression-unavailable" hit="debug-compression-unavailable clang diagnostic" />
    <option name="diagnostic" hit="debug-compression-unavailable clang diagnostic" />
    <option name="clang" hit="declaration-after-statement clang diagnostic" />
    <option name="declaration-after-statement" hit="declaration-after-statement clang diagnostic" />
    <option name="diagnostic" hit="declaration-after-statement clang diagnostic" />
    <option name="clang" hit="defaulted-function-deleted clang diagnostic" />
    <option name="defaulted-function-deleted" hit="defaulted-function-deleted clang diagnostic" />
    <option name="diagnostic" hit="defaulted-function-deleted clang diagnostic" />
    <option name="clang" hit="delegating-ctor-cycles clang diagnostic" />
    <option name="delegating-ctor-cycles" hit="delegating-ctor-cycles clang diagnostic" />
    <option name="diagnostic" hit="delegating-ctor-cycles clang diagnostic" />
    <option name="clang" hit="delete-abstract-non-virtual-dtor clang diagnostic" />
    <option name="delete-abstract-non-virtual-dtor" hit="delete-abstract-non-virtual-dtor clang diagnostic" />
    <option name="diagnostic" hit="delete-abstract-non-virtual-dtor clang diagnostic" />
    <option name="clang" hit="delete-incomplete clang diagnostic" />
    <option name="delete-incomplete" hit="delete-incomplete clang diagnostic" />
    <option name="diagnostic" hit="delete-incomplete clang diagnostic" />
    <option name="clang" hit="delete-non-abstract-non-virtual-dtor clang diagnostic" />
    <option name="delete-non-abstract-non-virtual-dtor" hit="delete-non-abstract-non-virtual-dtor clang diagnostic" />
    <option name="diagnostic" hit="delete-non-abstract-non-virtual-dtor clang diagnostic" />
    <option name="clang" hit="delete-non-virtual-dtor clang diagnostic" />
    <option name="delete-non-virtual-dtor" hit="delete-non-virtual-dtor clang diagnostic" />
    <option name="diagnostic" hit="delete-non-virtual-dtor clang diagnostic" />
    <option name="clang" hit="delimited-escape-sequence-extension clang diagnostic" />
    <option name="delimited-escape-sequence-extension" hit="delimited-escape-sequence-extension clang diagnostic" />
    <option name="diagnostic" hit="delimited-escape-sequence-extension clang diagnostic" />
    <option name="clang" hit="deprecate-lax-vec-conv-all clang diagnostic" />
    <option name="deprecate-lax-vec-conv-all" hit="deprecate-lax-vec-conv-all clang diagnostic" />
    <option name="diagnostic" hit="deprecate-lax-vec-conv-all clang diagnostic" />
    <option name="clang" hit="deprecated clang diagnostic" />
    <option name="deprecated" hit="deprecated clang diagnostic" />
    <option name="diagnostic" hit="deprecated clang diagnostic" />
    <option name="clang" hit="deprecated-altivec-src-compat clang diagnostic" />
    <option name="deprecated-altivec-src-compat" hit="deprecated-altivec-src-compat clang diagnostic" />
    <option name="diagnostic" hit="deprecated-altivec-src-compat clang diagnostic" />
    <option name="clang" hit="deprecated-anon-enum-enum-conversion clang diagnostic" />
    <option name="deprecated-anon-enum-enum-conversion" hit="deprecated-anon-enum-enum-conversion clang diagnostic" />
    <option name="diagnostic" hit="deprecated-anon-enum-enum-conversion clang diagnostic" />
    <option name="clang" hit="deprecated-array-compare clang diagnostic" />
    <option name="deprecated-array-compare" hit="deprecated-array-compare clang diagnostic" />
    <option name="diagnostic" hit="deprecated-array-compare clang diagnostic" />
    <option name="clang" hit="deprecated-attributes clang diagnostic" />
    <option name="deprecated-attributes" hit="deprecated-attributes clang diagnostic" />
    <option name="diagnostic" hit="deprecated-attributes clang diagnostic" />
    <option name="clang" hit="deprecated-builtins clang diagnostic" />
    <option name="deprecated-builtins" hit="deprecated-builtins clang diagnostic" />
    <option name="diagnostic" hit="deprecated-builtins clang diagnostic" />
    <option name="clang" hit="deprecated-comma-subscript clang diagnostic" />
    <option name="deprecated-comma-subscript" hit="deprecated-comma-subscript clang diagnostic" />
    <option name="diagnostic" hit="deprecated-comma-subscript clang diagnostic" />
    <option name="clang" hit="deprecated-copy clang diagnostic" />
    <option name="deprecated-copy" hit="deprecated-copy clang diagnostic" />
    <option name="diagnostic" hit="deprecated-copy clang diagnostic" />
    <option name="clang" hit="deprecated-copy-with-dtor clang diagnostic" />
    <option name="deprecated-copy-with-dtor" hit="deprecated-copy-with-dtor clang diagnostic" />
    <option name="diagnostic" hit="deprecated-copy-with-dtor clang diagnostic" />
    <option name="clang" hit="deprecated-copy-with-user-provided-copy clang diagnostic" />
    <option name="deprecated-copy-with-user-provided-copy" hit="deprecated-copy-with-user-provided-copy clang diagnostic" />
    <option name="diagnostic" hit="deprecated-copy-with-user-provided-copy clang diagnostic" />
    <option name="clang" hit="deprecated-copy-with-user-provided-dtor clang diagnostic" />
    <option name="deprecated-copy-with-user-provided-dtor" hit="deprecated-copy-with-user-provided-dtor clang diagnostic" />
    <option name="diagnostic" hit="deprecated-copy-with-user-provided-dtor clang diagnostic" />
    <option name="clang" hit="deprecated-coroutine clang diagnostic" />
    <option name="deprecated-coroutine" hit="deprecated-coroutine clang diagnostic" />
    <option name="diagnostic" hit="deprecated-coroutine clang diagnostic" />
    <option name="clang" hit="deprecated-declarations clang diagnostic" />
    <option name="deprecated-declarations" hit="deprecated-declarations clang diagnostic" />
    <option name="diagnostic" hit="deprecated-declarations clang diagnostic" />
    <option name="clang" hit="deprecated-dynamic-exception-spec clang diagnostic" />
    <option name="deprecated-dynamic-exception-spec" hit="deprecated-dynamic-exception-spec clang diagnostic" />
    <option name="diagnostic" hit="deprecated-dynamic-exception-spec clang diagnostic" />
    <option name="clang" hit="deprecated-enum-compare clang diagnostic" />
    <option name="deprecated-enum-compare" hit="deprecated-enum-compare clang diagnostic" />
    <option name="diagnostic" hit="deprecated-enum-compare clang diagnostic" />
    <option name="clang" hit="deprecated-enum-compare-conditional clang diagnostic" />
    <option name="deprecated-enum-compare-conditional" hit="deprecated-enum-compare-conditional clang diagnostic" />
    <option name="diagnostic" hit="deprecated-enum-compare-conditional clang diagnostic" />
    <option name="clang" hit="deprecated-enum-enum-conversion clang diagnostic" />
    <option name="deprecated-enum-enum-conversion" hit="deprecated-enum-enum-conversion clang diagnostic" />
    <option name="diagnostic" hit="deprecated-enum-enum-conversion clang diagnostic" />
    <option name="clang" hit="deprecated-enum-float-conversion clang diagnostic" />
    <option name="deprecated-enum-float-conversion" hit="deprecated-enum-float-conversion clang diagnostic" />
    <option name="diagnostic" hit="deprecated-enum-float-conversion clang diagnostic" />
    <option name="clang" hit="deprecated-implementations clang diagnostic" />
    <option name="deprecated-implementations" hit="deprecated-implementations clang diagnostic" />
    <option name="diagnostic" hit="deprecated-implementations clang diagnostic" />
    <option name="clang" hit="deprecated-increment-bool clang diagnostic" />
    <option name="deprecated-increment-bool" hit="deprecated-increment-bool clang diagnostic" />
    <option name="diagnostic" hit="deprecated-increment-bool clang diagnostic" />
    <option name="clang" hit="deprecated-literal-operator clang diagnostic" />
    <option name="deprecated-literal-operator" hit="deprecated-literal-operator clang diagnostic" />
    <option name="diagnostic" hit="deprecated-literal-operator clang diagnostic" />
    <option name="clang" hit="deprecated-non-prototype clang diagnostic" />
    <option name="deprecated-non-prototype" hit="deprecated-non-prototype clang diagnostic" />
    <option name="diagnostic" hit="deprecated-non-prototype clang diagnostic" />
    <option name="clang" hit="deprecated-objc-isa-usage clang diagnostic" />
    <option name="deprecated-objc-isa-usage" hit="deprecated-objc-isa-usage clang diagnostic" />
    <option name="diagnostic" hit="deprecated-objc-isa-usage clang diagnostic" />
    <option name="clang" hit="deprecated-objc-pointer-introspection clang diagnostic" />
    <option name="deprecated-objc-pointer-introspection" hit="deprecated-objc-pointer-introspection clang diagnostic" />
    <option name="diagnostic" hit="deprecated-objc-pointer-introspection clang diagnostic" />
    <option name="clang" hit="deprecated-objc-pointer-introspection-performSelector clang diagnostic" />
    <option name="deprecated-objc-pointer-introspection-performselector" hit="deprecated-objc-pointer-introspection-performSelector clang diagnostic" />
    <option name="diagnostic" hit="deprecated-objc-pointer-introspection-performSelector clang diagnostic" />
    <option name="clang" hit="deprecated-pragma clang diagnostic" />
    <option name="deprecated-pragma" hit="deprecated-pragma clang diagnostic" />
    <option name="diagnostic" hit="deprecated-pragma clang diagnostic" />
    <option name="clang" hit="deprecated-redundant-constexpr-static-def clang diagnostic" />
    <option name="deprecated-redundant-constexpr-static-def" hit="deprecated-redundant-constexpr-static-def clang diagnostic" />
    <option name="diagnostic" hit="deprecated-redundant-constexpr-static-def clang diagnostic" />
    <option name="clang" hit="deprecated-register clang diagnostic" />
    <option name="deprecated-register" hit="deprecated-register clang diagnostic" />
    <option name="diagnostic" hit="deprecated-register clang diagnostic" />
    <option name="clang" hit="deprecated-static-analyzer-flag clang diagnostic" />
    <option name="deprecated-static-analyzer-flag" hit="deprecated-static-analyzer-flag clang diagnostic" />
    <option name="diagnostic" hit="deprecated-static-analyzer-flag clang diagnostic" />
    <option name="clang" hit="deprecated-this-capture clang diagnostic" />
    <option name="deprecated-this-capture" hit="deprecated-this-capture clang diagnostic" />
    <option name="diagnostic" hit="deprecated-this-capture clang diagnostic" />
    <option name="clang" hit="deprecated-type clang diagnostic" />
    <option name="deprecated-type" hit="deprecated-type clang diagnostic" />
    <option name="diagnostic" hit="deprecated-type clang diagnostic" />
    <option name="clang" hit="deprecated-volatile clang diagnostic" />
    <option name="deprecated-volatile" hit="deprecated-volatile clang diagnostic" />
    <option name="diagnostic" hit="deprecated-volatile clang diagnostic" />
    <option name="clang" hit="direct-ivar-access clang diagnostic" />
    <option name="diagnostic" hit="direct-ivar-access clang diagnostic" />
    <option name="direct-ivar-access" hit="direct-ivar-access clang diagnostic" />
    <option name="clang" hit="disabled-macro-expansion clang diagnostic" />
    <option name="diagnostic" hit="disabled-macro-expansion clang diagnostic" />
    <option name="disabled-macro-expansion" hit="disabled-macro-expansion clang diagnostic" />
    <option name="clang" hit="distributed-object-modifiers clang diagnostic" />
    <option name="diagnostic" hit="distributed-object-modifiers clang diagnostic" />
    <option name="distributed-object-modifiers" hit="distributed-object-modifiers clang diagnostic" />
    <option name="clang" hit="division-by-zero clang diagnostic" />
    <option name="diagnostic" hit="division-by-zero clang diagnostic" />
    <option name="division-by-zero" hit="division-by-zero clang diagnostic" />
    <option name="clang" hit="dll-attribute-on-redeclaration clang diagnostic" />
    <option name="diagnostic" hit="dll-attribute-on-redeclaration clang diagnostic" />
    <option name="dll-attribute-on-redeclaration" hit="dll-attribute-on-redeclaration clang diagnostic" />
    <option name="clang" hit="dllexport-explicit-instantiation-decl clang diagnostic" />
    <option name="diagnostic" hit="dllexport-explicit-instantiation-decl clang diagnostic" />
    <option name="dllexport-explicit-instantiation-decl" hit="dllexport-explicit-instantiation-decl clang diagnostic" />
    <option name="clang" hit="dllimport-static-field-def clang diagnostic" />
    <option name="diagnostic" hit="dllimport-static-field-def clang diagnostic" />
    <option name="dllimport-static-field-def" hit="dllimport-static-field-def clang diagnostic" />
    <option name="clang" hit="documentation clang diagnostic" />
    <option name="diagnostic" hit="documentation clang diagnostic" />
    <option name="documentation" hit="documentation clang diagnostic" />
    <option name="clang" hit="documentation-deprecated-sync clang diagnostic" />
    <option name="diagnostic" hit="documentation-deprecated-sync clang diagnostic" />
    <option name="documentation-deprecated-sync" hit="documentation-deprecated-sync clang diagnostic" />
    <option name="clang" hit="documentation-html clang diagnostic" />
    <option name="diagnostic" hit="documentation-html clang diagnostic" />
    <option name="documentation-html" hit="documentation-html clang diagnostic" />
    <option name="clang" hit="documentation-pedantic clang diagnostic" />
    <option name="diagnostic" hit="documentation-pedantic clang diagnostic" />
    <option name="documentation-pedantic" hit="documentation-pedantic clang diagnostic" />
    <option name="clang" hit="documentation-unknown-command clang diagnostic" />
    <option name="diagnostic" hit="documentation-unknown-command clang diagnostic" />
    <option name="documentation-unknown-command" hit="documentation-unknown-command clang diagnostic" />
    <option name="clang" hit="dollar-in-identifier-extension clang diagnostic" />
    <option name="diagnostic" hit="dollar-in-identifier-extension clang diagnostic" />
    <option name="dollar-in-identifier-extension" hit="dollar-in-identifier-extension clang diagnostic" />
    <option name="clang" hit="double-promotion clang diagnostic" />
    <option name="diagnostic" hit="double-promotion clang diagnostic" />
    <option name="double-promotion" hit="double-promotion clang diagnostic" />
    <option name="clang" hit="dtor-name clang diagnostic" />
    <option name="diagnostic" hit="dtor-name clang diagnostic" />
    <option name="dtor-name" hit="dtor-name clang diagnostic" />
    <option name="clang" hit="dtor-typedef clang diagnostic" />
    <option name="diagnostic" hit="dtor-typedef clang diagnostic" />
    <option name="dtor-typedef" hit="dtor-typedef clang diagnostic" />
    <option name="clang" hit="duplicate-decl-specifier clang diagnostic" />
    <option name="diagnostic" hit="duplicate-decl-specifier clang diagnostic" />
    <option name="duplicate-decl-specifier" hit="duplicate-decl-specifier clang diagnostic" />
    <option name="clang" hit="duplicate-enum clang diagnostic" />
    <option name="diagnostic" hit="duplicate-enum clang diagnostic" />
    <option name="duplicate-enum" hit="duplicate-enum clang diagnostic" />
    <option name="clang" hit="duplicate-method-arg clang diagnostic" />
    <option name="diagnostic" hit="duplicate-method-arg clang diagnostic" />
    <option name="duplicate-method-arg" hit="duplicate-method-arg clang diagnostic" />
    <option name="clang" hit="duplicate-method-match clang diagnostic" />
    <option name="diagnostic" hit="duplicate-method-match clang diagnostic" />
    <option name="duplicate-method-match" hit="duplicate-method-match clang diagnostic" />
    <option name="clang" hit="duplicate-protocol clang diagnostic" />
    <option name="diagnostic" hit="duplicate-protocol clang diagnostic" />
    <option name="duplicate-protocol" hit="duplicate-protocol clang diagnostic" />
    <option name="clang" hit="dxil-validation clang diagnostic" />
    <option name="diagnostic" hit="dxil-validation clang diagnostic" />
    <option name="dxil-validation" hit="dxil-validation clang diagnostic" />
    <option name="clang" hit="dynamic-class-memaccess clang diagnostic" />
    <option name="diagnostic" hit="dynamic-class-memaccess clang diagnostic" />
    <option name="dynamic-class-memaccess" hit="dynamic-class-memaccess clang diagnostic" />
    <option name="clang" hit="dynamic-exception-spec clang diagnostic" />
    <option name="diagnostic" hit="dynamic-exception-spec clang diagnostic" />
    <option name="dynamic-exception-spec" hit="dynamic-exception-spec clang diagnostic" />
    <option name="clang" hit="eager-load-cxx-named-modules clang diagnostic" />
    <option name="diagnostic" hit="eager-load-cxx-named-modules clang diagnostic" />
    <option name="eager-load-cxx-named-modules" hit="eager-load-cxx-named-modules clang diagnostic" />
    <option name="clang" hit="embedded-directive clang diagnostic" />
    <option name="diagnostic" hit="embedded-directive clang diagnostic" />
    <option name="embedded-directive" hit="embedded-directive clang diagnostic" />
    <option name="clang" hit="empty-body clang diagnostic" />
    <option name="diagnostic" hit="empty-body clang diagnostic" />
    <option name="empty-body" hit="empty-body clang diagnostic" />
    <option name="clang" hit="empty-decomposition clang diagnostic" />
    <option name="diagnostic" hit="empty-decomposition clang diagnostic" />
    <option name="empty-decomposition" hit="empty-decomposition clang diagnostic" />
    <option name="clang" hit="empty-init-stmt clang diagnostic" />
    <option name="diagnostic" hit="empty-init-stmt clang diagnostic" />
    <option name="empty-init-stmt" hit="empty-init-stmt clang diagnostic" />
    <option name="clang" hit="empty-translation-unit clang diagnostic" />
    <option name="diagnostic" hit="empty-translation-unit clang diagnostic" />
    <option name="empty-translation-unit" hit="empty-translation-unit clang diagnostic" />
    <option name="clang" hit="encode-type clang diagnostic" />
    <option name="diagnostic" hit="encode-type clang diagnostic" />
    <option name="encode-type" hit="encode-type clang diagnostic" />
    <option name="clang" hit="enum-compare clang diagnostic" />
    <option name="diagnostic" hit="enum-compare clang diagnostic" />
    <option name="enum-compare" hit="enum-compare clang diagnostic" />
    <option name="clang" hit="enum-compare-conditional clang diagnostic" />
    <option name="diagnostic" hit="enum-compare-conditional clang diagnostic" />
    <option name="enum-compare-conditional" hit="enum-compare-conditional clang diagnostic" />
    <option name="clang" hit="enum-compare-switch clang diagnostic" />
    <option name="diagnostic" hit="enum-compare-switch clang diagnostic" />
    <option name="enum-compare-switch" hit="enum-compare-switch clang diagnostic" />
    <option name="clang" hit="enum-constexpr-conversion clang diagnostic" />
    <option name="diagnostic" hit="enum-constexpr-conversion clang diagnostic" />
    <option name="enum-constexpr-conversion" hit="enum-constexpr-conversion clang diagnostic" />
    <option name="clang" hit="enum-conversion clang diagnostic" />
    <option name="diagnostic" hit="enum-conversion clang diagnostic" />
    <option name="enum-conversion" hit="enum-conversion clang diagnostic" />
    <option name="clang" hit="enum-enum-conversion clang diagnostic" />
    <option name="diagnostic" hit="enum-enum-conversion clang diagnostic" />
    <option name="enum-enum-conversion" hit="enum-enum-conversion clang diagnostic" />
    <option name="clang" hit="enum-float-conversion clang diagnostic" />
    <option name="diagnostic" hit="enum-float-conversion clang diagnostic" />
    <option name="enum-float-conversion" hit="enum-float-conversion clang diagnostic" />
    <option name="clang" hit="enum-too-large clang diagnostic" />
    <option name="diagnostic" hit="enum-too-large clang diagnostic" />
    <option name="enum-too-large" hit="enum-too-large clang diagnostic" />
    <option name="clang" hit="exceptions clang diagnostic" />
    <option name="diagnostic" hit="exceptions clang diagnostic" />
    <option name="exceptions" hit="exceptions clang diagnostic" />
    <option name="clang" hit="excess-initializers clang diagnostic" />
    <option name="diagnostic" hit="excess-initializers clang diagnostic" />
    <option name="excess-initializers" hit="excess-initializers clang diagnostic" />
    <option name="clang" hit="exit-time-destructors clang diagnostic" />
    <option name="diagnostic" hit="exit-time-destructors clang diagnostic" />
    <option name="exit-time-destructors" hit="exit-time-destructors clang diagnostic" />
    <option name="clang" hit="expansion-to-defined clang diagnostic" />
    <option name="diagnostic" hit="expansion-to-defined clang diagnostic" />
    <option name="expansion-to-defined" hit="expansion-to-defined clang diagnostic" />
    <option name="clang" hit="experimental-header-units clang diagnostic" />
    <option name="diagnostic" hit="experimental-header-units clang diagnostic" />
    <option name="experimental-header-units" hit="experimental-header-units clang diagnostic" />
    <option name="clang" hit="explicit-initialize-call clang diagnostic" />
    <option name="diagnostic" hit="explicit-initialize-call clang diagnostic" />
    <option name="explicit-initialize-call" hit="explicit-initialize-call clang diagnostic" />
    <option name="clang" hit="explicit-ownership-type clang diagnostic" />
    <option name="diagnostic" hit="explicit-ownership-type clang diagnostic" />
    <option name="explicit-ownership-type" hit="explicit-ownership-type clang diagnostic" />
    <option name="clang" hit="export-unnamed clang diagnostic" />
    <option name="diagnostic" hit="export-unnamed clang diagnostic" />
    <option name="export-unnamed" hit="export-unnamed clang diagnostic" />
    <option name="clang" hit="extern-c-compat clang diagnostic" />
    <option name="diagnostic" hit="extern-c-compat clang diagnostic" />
    <option name="extern-c-compat" hit="extern-c-compat clang diagnostic" />
    <option name="clang" hit="extern-initializer clang diagnostic" />
    <option name="diagnostic" hit="extern-initializer clang diagnostic" />
    <option name="extern-initializer" hit="extern-initializer clang diagnostic" />
    <option name="clang" hit="extra-qualification clang diagnostic" />
    <option name="diagnostic" hit="extra-qualification clang diagnostic" />
    <option name="extra-qualification" hit="extra-qualification clang diagnostic" />
    <option name="clang" hit="extra-semi clang diagnostic" />
    <option name="diagnostic" hit="extra-semi clang diagnostic" />
    <option name="extra-semi" hit="extra-semi clang diagnostic" />
    <option name="clang" hit="extra-semi-stmt clang diagnostic" />
    <option name="diagnostic" hit="extra-semi-stmt clang diagnostic" />
    <option name="extra-semi-stmt" hit="extra-semi-stmt clang diagnostic" />
    <option name="clang" hit="extra-tokens clang diagnostic" />
    <option name="diagnostic" hit="extra-tokens clang diagnostic" />
    <option name="extra-tokens" hit="extra-tokens clang diagnostic" />
    <option name="clang" hit="final-dtor-non-final-class clang diagnostic" />
    <option name="diagnostic" hit="final-dtor-non-final-class clang diagnostic" />
    <option name="final-dtor-non-final-class" hit="final-dtor-non-final-class clang diagnostic" />
    <option name="clang" hit="final-macro clang diagnostic" />
    <option name="diagnostic" hit="final-macro clang diagnostic" />
    <option name="final-macro" hit="final-macro clang diagnostic" />
    <option name="clang" hit="fixed-enum-extension clang diagnostic" />
    <option name="diagnostic" hit="fixed-enum-extension clang diagnostic" />
    <option name="fixed-enum-extension" hit="fixed-enum-extension clang diagnostic" />
    <option name="clang" hit="fixed-point-overflow clang diagnostic" />
    <option name="diagnostic" hit="fixed-point-overflow clang diagnostic" />
    <option name="fixed-point-overflow" hit="fixed-point-overflow clang diagnostic" />
    <option name="clang" hit="flag-enum clang diagnostic" />
    <option name="diagnostic" hit="flag-enum clang diagnostic" />
    <option name="flag-enum" hit="flag-enum clang diagnostic" />
    <option name="clang" hit="flexible-array-extensions clang diagnostic" />
    <option name="diagnostic" hit="flexible-array-extensions clang diagnostic" />
    <option name="flexible-array-extensions" hit="flexible-array-extensions clang diagnostic" />
    <option name="clang" hit="float-conversion clang diagnostic" />
    <option name="diagnostic" hit="float-conversion clang diagnostic" />
    <option name="float-conversion" hit="float-conversion clang diagnostic" />
    <option name="clang" hit="float-equal clang diagnostic" />
    <option name="diagnostic" hit="float-equal clang diagnostic" />
    <option name="float-equal" hit="float-equal clang diagnostic" />
    <option name="clang" hit="float-overflow-conversion clang diagnostic" />
    <option name="diagnostic" hit="float-overflow-conversion clang diagnostic" />
    <option name="float-overflow-conversion" hit="float-overflow-conversion clang diagnostic" />
    <option name="clang" hit="float-zero-conversion clang diagnostic" />
    <option name="diagnostic" hit="float-zero-conversion clang diagnostic" />
    <option name="float-zero-conversion" hit="float-zero-conversion clang diagnostic" />
    <option name="clang" hit="for-loop-analysis clang diagnostic" />
    <option name="diagnostic" hit="for-loop-analysis clang diagnostic" />
    <option name="for-loop-analysis" hit="for-loop-analysis clang diagnostic" />
    <option name="clang" hit="format clang diagnostic" />
    <option name="diagnostic" hit="format clang diagnostic" />
    <option name="format" hit="format clang diagnostic" />
    <option name="clang" hit="format-extra-args clang diagnostic" />
    <option name="diagnostic" hit="format-extra-args clang diagnostic" />
    <option name="format-extra-args" hit="format-extra-args clang diagnostic" />
    <option name="clang" hit="format-insufficient-args clang diagnostic" />
    <option name="diagnostic" hit="format-insufficient-args clang diagnostic" />
    <option name="format-insufficient-args" hit="format-insufficient-args clang diagnostic" />
    <option name="clang" hit="format-invalid-specifier clang diagnostic" />
    <option name="diagnostic" hit="format-invalid-specifier clang diagnostic" />
    <option name="format-invalid-specifier" hit="format-invalid-specifier clang diagnostic" />
    <option name="clang" hit="format-non-iso clang diagnostic" />
    <option name="diagnostic" hit="format-non-iso clang diagnostic" />
    <option name="format-non-iso" hit="format-non-iso clang diagnostic" />
    <option name="clang" hit="format-nonliteral clang diagnostic" />
    <option name="diagnostic" hit="format-nonliteral clang diagnostic" />
    <option name="format-nonliteral" hit="format-nonliteral clang diagnostic" />
    <option name="clang" hit="format-pedantic clang diagnostic" />
    <option name="diagnostic" hit="format-pedantic clang diagnostic" />
    <option name="format-pedantic" hit="format-pedantic clang diagnostic" />
    <option name="clang" hit="format-security clang diagnostic" />
    <option name="diagnostic" hit="format-security clang diagnostic" />
    <option name="format-security" hit="format-security clang diagnostic" />
    <option name="clang" hit="format-type-confusion clang diagnostic" />
    <option name="diagnostic" hit="format-type-confusion clang diagnostic" />
    <option name="format-type-confusion" hit="format-type-confusion clang diagnostic" />
    <option name="clang" hit="format-zero-length clang diagnostic" />
    <option name="diagnostic" hit="format-zero-length clang diagnostic" />
    <option name="format-zero-length" hit="format-zero-length clang diagnostic" />
    <option name="clang" hit="fortify-source clang diagnostic" />
    <option name="diagnostic" hit="fortify-source clang diagnostic" />
    <option name="fortify-source" hit="fortify-source clang diagnostic" />
    <option name="clang" hit="four-char-constants clang diagnostic" />
    <option name="diagnostic" hit="four-char-constants clang diagnostic" />
    <option name="four-char-constants" hit="four-char-constants clang diagnostic" />
    <option name="clang" hit="frame-address clang diagnostic" />
    <option name="diagnostic" hit="frame-address clang diagnostic" />
    <option name="frame-address" hit="frame-address clang diagnostic" />
    <option name="clang" hit="frame-larger-than clang diagnostic" />
    <option name="diagnostic" hit="frame-larger-than clang diagnostic" />
    <option name="frame-larger-than" hit="frame-larger-than clang diagnostic" />
    <option name="clang" hit="framework-include-private-from-public clang diagnostic" />
    <option name="diagnostic" hit="framework-include-private-from-public clang diagnostic" />
    <option name="framework-include-private-from-public" hit="framework-include-private-from-public clang diagnostic" />
    <option name="clang" hit="free-nonheap-object clang diagnostic" />
    <option name="diagnostic" hit="free-nonheap-object clang diagnostic" />
    <option name="free-nonheap-object" hit="free-nonheap-object clang diagnostic" />
    <option name="check" hit="fuchsia-default-arguments-calls clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-default-arguments-calls clang-tidy check" />
    <option name="fuchsia-default-arguments-calls" hit="fuchsia-default-arguments-calls clang-tidy check" />
    <option name="check" hit="fuchsia-default-arguments-declarations clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-default-arguments-declarations clang-tidy check" />
    <option name="fuchsia-default-arguments-declarations" hit="fuchsia-default-arguments-declarations clang-tidy check" />
    <option name="check" hit="fuchsia-header-anon-namespaces clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-header-anon-namespaces clang-tidy check" />
    <option name="fuchsia-header-anon-namespaces" hit="fuchsia-header-anon-namespaces clang-tidy check" />
    <option name="check" hit="fuchsia-multiple-inheritance clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-multiple-inheritance clang-tidy check" />
    <option name="fuchsia-multiple-inheritance" hit="fuchsia-multiple-inheritance clang-tidy check" />
    <option name="check" hit="fuchsia-overloaded-operator clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-overloaded-operator clang-tidy check" />
    <option name="fuchsia-overloaded-operator" hit="fuchsia-overloaded-operator clang-tidy check" />
    <option name="check" hit="fuchsia-statically-constructed-objects clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-statically-constructed-objects clang-tidy check" />
    <option name="fuchsia-statically-constructed-objects" hit="fuchsia-statically-constructed-objects clang-tidy check" />
    <option name="check" hit="fuchsia-trailing-return clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-trailing-return clang-tidy check" />
    <option name="fuchsia-trailing-return" hit="fuchsia-trailing-return clang-tidy check" />
    <option name="check" hit="fuchsia-virtual-inheritance clang-tidy check" />
    <option name="clang-tidy" hit="fuchsia-virtual-inheritance clang-tidy check" />
    <option name="fuchsia-virtual-inheritance" hit="fuchsia-virtual-inheritance clang-tidy check" />
    <option name="analyzer" hit="fuchsia.HandleChecker clang static analyzer check" />
    <option name="check" hit="fuchsia.HandleChecker clang static analyzer check" />
    <option name="clang" hit="fuchsia.HandleChecker clang static analyzer check" />
    <option name="fuchsia" hit="fuchsia.HandleChecker clang static analyzer check" />
    <option name="handlechecker" hit="fuchsia.HandleChecker clang static analyzer check" />
    <option name="static" hit="fuchsia.HandleChecker clang static analyzer check" />
    <option name="clang" hit="function-def-in-objc-container clang diagnostic" />
    <option name="diagnostic" hit="function-def-in-objc-container clang diagnostic" />
    <option name="function-def-in-objc-container" hit="function-def-in-objc-container clang diagnostic" />
    <option name="clang" hit="function-multiversion clang diagnostic" />
    <option name="diagnostic" hit="function-multiversion clang diagnostic" />
    <option name="function-multiversion" hit="function-multiversion clang diagnostic" />
    <option name="clang" hit="future-attribute-extensions clang diagnostic" />
    <option name="diagnostic" hit="future-attribute-extensions clang diagnostic" />
    <option name="future-attribute-extensions" hit="future-attribute-extensions clang diagnostic" />
    <option name="clang" hit="gcc-compat clang diagnostic" />
    <option name="diagnostic" hit="gcc-compat clang diagnostic" />
    <option name="gcc-compat" hit="gcc-compat clang diagnostic" />
    <option name="clang" hit="generic-type-extension clang diagnostic" />
    <option name="diagnostic" hit="generic-type-extension clang diagnostic" />
    <option name="generic-type-extension" hit="generic-type-extension clang diagnostic" />
    <option name="clang" hit="global-constructors clang diagnostic" />
    <option name="diagnostic" hit="global-constructors clang diagnostic" />
    <option name="global-constructors" hit="global-constructors clang diagnostic" />
    <option name="clang" hit="global-isel clang diagnostic" />
    <option name="diagnostic" hit="global-isel clang diagnostic" />
    <option name="global-isel" hit="global-isel clang diagnostic" />
    <option name="clang" hit="gnu-alignof-expression clang diagnostic" />
    <option name="diagnostic" hit="gnu-alignof-expression clang diagnostic" />
    <option name="gnu-alignof-expression" hit="gnu-alignof-expression clang diagnostic" />
    <option name="clang" hit="gnu-anonymous-struct clang diagnostic" />
    <option name="diagnostic" hit="gnu-anonymous-struct clang diagnostic" />
    <option name="gnu-anonymous-struct" hit="gnu-anonymous-struct clang diagnostic" />
    <option name="clang" hit="gnu-array-member-paren-init clang diagnostic" />
    <option name="diagnostic" hit="gnu-array-member-paren-init clang diagnostic" />
    <option name="gnu-array-member-paren-init" hit="gnu-array-member-paren-init clang diagnostic" />
    <option name="clang" hit="gnu-auto-type clang diagnostic" />
    <option name="diagnostic" hit="gnu-auto-type clang diagnostic" />
    <option name="gnu-auto-type" hit="gnu-auto-type clang diagnostic" />
    <option name="clang" hit="gnu-binary-literal clang diagnostic" />
    <option name="diagnostic" hit="gnu-binary-literal clang diagnostic" />
    <option name="gnu-binary-literal" hit="gnu-binary-literal clang diagnostic" />
    <option name="clang" hit="gnu-case-range clang diagnostic" />
    <option name="diagnostic" hit="gnu-case-range clang diagnostic" />
    <option name="gnu-case-range" hit="gnu-case-range clang diagnostic" />
    <option name="clang" hit="gnu-complex-integer clang diagnostic" />
    <option name="diagnostic" hit="gnu-complex-integer clang diagnostic" />
    <option name="gnu-complex-integer" hit="gnu-complex-integer clang diagnostic" />
    <option name="clang" hit="gnu-compound-literal-initializer clang diagnostic" />
    <option name="diagnostic" hit="gnu-compound-literal-initializer clang diagnostic" />
    <option name="gnu-compound-literal-initializer" hit="gnu-compound-literal-initializer clang diagnostic" />
    <option name="clang" hit="gnu-conditional-omitted-operand clang diagnostic" />
    <option name="diagnostic" hit="gnu-conditional-omitted-operand clang diagnostic" />
    <option name="gnu-conditional-omitted-operand" hit="gnu-conditional-omitted-operand clang diagnostic" />
    <option name="clang" hit="gnu-designator clang diagnostic" />
    <option name="diagnostic" hit="gnu-designator clang diagnostic" />
    <option name="gnu-designator" hit="gnu-designator clang diagnostic" />
    <option name="clang" hit="gnu-empty-initializer clang diagnostic" />
    <option name="diagnostic" hit="gnu-empty-initializer clang diagnostic" />
    <option name="gnu-empty-initializer" hit="gnu-empty-initializer clang diagnostic" />
    <option name="clang" hit="gnu-empty-struct clang diagnostic" />
    <option name="diagnostic" hit="gnu-empty-struct clang diagnostic" />
    <option name="gnu-empty-struct" hit="gnu-empty-struct clang diagnostic" />
    <option name="clang" hit="gnu-flexible-array-initializer clang diagnostic" />
    <option name="diagnostic" hit="gnu-flexible-array-initializer clang diagnostic" />
    <option name="gnu-flexible-array-initializer" hit="gnu-flexible-array-initializer clang diagnostic" />
    <option name="clang" hit="gnu-flexible-array-union-member clang diagnostic" />
    <option name="diagnostic" hit="gnu-flexible-array-union-member clang diagnostic" />
    <option name="gnu-flexible-array-union-member" hit="gnu-flexible-array-union-member clang diagnostic" />
    <option name="clang" hit="gnu-folding-constant clang diagnostic" />
    <option name="diagnostic" hit="gnu-folding-constant clang diagnostic" />
    <option name="gnu-folding-constant" hit="gnu-folding-constant clang diagnostic" />
    <option name="clang" hit="gnu-imaginary-constant clang diagnostic" />
    <option name="diagnostic" hit="gnu-imaginary-constant clang diagnostic" />
    <option name="gnu-imaginary-constant" hit="gnu-imaginary-constant clang diagnostic" />
    <option name="clang" hit="gnu-include-next clang diagnostic" />
    <option name="diagnostic" hit="gnu-include-next clang diagnostic" />
    <option name="gnu-include-next" hit="gnu-include-next clang diagnostic" />
    <option name="clang" hit="gnu-inline-cpp-without-extern clang diagnostic" />
    <option name="diagnostic" hit="gnu-inline-cpp-without-extern clang diagnostic" />
    <option name="gnu-inline-cpp-without-extern" hit="gnu-inline-cpp-without-extern clang diagnostic" />
    <option name="clang" hit="gnu-label-as-value clang diagnostic" />
    <option name="diagnostic" hit="gnu-label-as-value clang diagnostic" />
    <option name="gnu-label-as-value" hit="gnu-label-as-value clang diagnostic" />
    <option name="clang" hit="gnu-line-marker clang diagnostic" />
    <option name="diagnostic" hit="gnu-line-marker clang diagnostic" />
    <option name="gnu-line-marker" hit="gnu-line-marker clang diagnostic" />
    <option name="clang" hit="gnu-null-pointer-arithmetic clang diagnostic" />
    <option name="diagnostic" hit="gnu-null-pointer-arithmetic clang diagnostic" />
    <option name="gnu-null-pointer-arithmetic" hit="gnu-null-pointer-arithmetic clang diagnostic" />
    <option name="clang" hit="gnu-offsetof-extensions clang diagnostic" />
    <option name="diagnostic" hit="gnu-offsetof-extensions clang diagnostic" />
    <option name="gnu-offsetof-extensions" hit="gnu-offsetof-extensions clang diagnostic" />
    <option name="clang" hit="gnu-pointer-arith clang diagnostic" />
    <option name="diagnostic" hit="gnu-pointer-arith clang diagnostic" />
    <option name="gnu-pointer-arith" hit="gnu-pointer-arith clang diagnostic" />
    <option name="clang" hit="gnu-redeclared-enum clang diagnostic" />
    <option name="diagnostic" hit="gnu-redeclared-enum clang diagnostic" />
    <option name="gnu-redeclared-enum" hit="gnu-redeclared-enum clang diagnostic" />
    <option name="clang" hit="gnu-statement-expression clang diagnostic" />
    <option name="diagnostic" hit="gnu-statement-expression clang diagnostic" />
    <option name="gnu-statement-expression" hit="gnu-statement-expression clang diagnostic" />
    <option name="clang" hit="gnu-statement-expression-from-macro-expansion clang diagnostic" />
    <option name="diagnostic" hit="gnu-statement-expression-from-macro-expansion clang diagnostic" />
    <option name="gnu-statement-expression-from-macro-expansion" hit="gnu-statement-expression-from-macro-expansion clang diagnostic" />
    <option name="clang" hit="gnu-static-float-init clang diagnostic" />
    <option name="diagnostic" hit="gnu-static-float-init clang diagnostic" />
    <option name="gnu-static-float-init" hit="gnu-static-float-init clang diagnostic" />
    <option name="clang" hit="gnu-string-literal-operator-template clang diagnostic" />
    <option name="diagnostic" hit="gnu-string-literal-operator-template clang diagnostic" />
    <option name="gnu-string-literal-operator-template" hit="gnu-string-literal-operator-template clang diagnostic" />
    <option name="clang" hit="gnu-union-cast clang diagnostic" />
    <option name="diagnostic" hit="gnu-union-cast clang diagnostic" />
    <option name="gnu-union-cast" hit="gnu-union-cast clang diagnostic" />
    <option name="clang" hit="gnu-variable-sized-type-not-at-end clang diagnostic" />
    <option name="diagnostic" hit="gnu-variable-sized-type-not-at-end clang diagnostic" />
    <option name="gnu-variable-sized-type-not-at-end" hit="gnu-variable-sized-type-not-at-end clang diagnostic" />
    <option name="clang" hit="gnu-zero-variadic-macro-arguments clang diagnostic" />
    <option name="diagnostic" hit="gnu-zero-variadic-macro-arguments clang diagnostic" />
    <option name="gnu-zero-variadic-macro-arguments" hit="gnu-zero-variadic-macro-arguments clang diagnostic" />
    <option name="check" hit="google-build-explicit-make-pair clang-tidy check" />
    <option name="clang-tidy" hit="google-build-explicit-make-pair clang-tidy check" />
    <option name="google-build-explicit-make-pair" hit="google-build-explicit-make-pair clang-tidy check" />
    <option name="check" hit="google-build-namespaces clang-tidy check" />
    <option name="clang-tidy" hit="google-build-namespaces clang-tidy check" />
    <option name="google-build-namespaces" hit="google-build-namespaces clang-tidy check" />
    <option name="check" hit="google-build-using-namespace clang-tidy check" />
    <option name="clang-tidy" hit="google-build-using-namespace clang-tidy check" />
    <option name="google-build-using-namespace" hit="google-build-using-namespace clang-tidy check" />
    <option name="check" hit="google-default-arguments clang-tidy check" />
    <option name="clang-tidy" hit="google-default-arguments clang-tidy check" />
    <option name="google-default-arguments" hit="google-default-arguments clang-tidy check" />
    <option name="check" hit="google-explicit-constructor clang-tidy check" />
    <option name="clang-tidy" hit="google-explicit-constructor clang-tidy check" />
    <option name="google-explicit-constructor" hit="google-explicit-constructor clang-tidy check" />
    <option name="check" hit="google-global-names-in-headers clang-tidy check" />
    <option name="clang-tidy" hit="google-global-names-in-headers clang-tidy check" />
    <option name="google-global-names-in-headers" hit="google-global-names-in-headers clang-tidy check" />
    <option name="check" hit="google-objc-avoid-nsobject-new clang-tidy check" />
    <option name="clang-tidy" hit="google-objc-avoid-nsobject-new clang-tidy check" />
    <option name="google-objc-avoid-nsobject-new" hit="google-objc-avoid-nsobject-new clang-tidy check" />
    <option name="check" hit="google-objc-avoid-throwing-exception clang-tidy check" />
    <option name="clang-tidy" hit="google-objc-avoid-throwing-exception clang-tidy check" />
    <option name="google-objc-avoid-throwing-exception" hit="google-objc-avoid-throwing-exception clang-tidy check" />
    <option name="check" hit="google-objc-function-naming clang-tidy check" />
    <option name="clang-tidy" hit="google-objc-function-naming clang-tidy check" />
    <option name="google-objc-function-naming" hit="google-objc-function-naming clang-tidy check" />
    <option name="check" hit="google-objc-global-variable-declaration clang-tidy check" />
    <option name="clang-tidy" hit="google-objc-global-variable-declaration clang-tidy check" />
    <option name="google-objc-global-variable-declaration" hit="google-objc-global-variable-declaration clang-tidy check" />
    <option name="check" hit="google-readability-avoid-underscore-in-googletest-name clang-tidy check" />
    <option name="clang-tidy" hit="google-readability-avoid-underscore-in-googletest-name clang-tidy check" />
    <option name="google-readability-avoid-underscore-in-googletest-name" hit="google-readability-avoid-underscore-in-googletest-name clang-tidy check" />
    <option name="check" hit="google-readability-braces-around-statements clang-tidy check" />
    <option name="clang-tidy" hit="google-readability-braces-around-statements clang-tidy check" />
    <option name="google-readability-braces-around-statements" hit="google-readability-braces-around-statements clang-tidy check" />
    <option name="check" hit="google-readability-casting clang-tidy check" />
    <option name="clang-tidy" hit="google-readability-casting clang-tidy check" />
    <option name="google-readability-casting" hit="google-readability-casting clang-tidy check" />
    <option name="check" hit="google-readability-function-size clang-tidy check" />
    <option name="clang-tidy" hit="google-readability-function-size clang-tidy check" />
    <option name="google-readability-function-size" hit="google-readability-function-size clang-tidy check" />
    <option name="check" hit="google-readability-namespace-comments clang-tidy check" />
    <option name="clang-tidy" hit="google-readability-namespace-comments clang-tidy check" />
    <option name="google-readability-namespace-comments" hit="google-readability-namespace-comments clang-tidy check" />
    <option name="check" hit="google-readability-todo clang-tidy check" />
    <option name="clang-tidy" hit="google-readability-todo clang-tidy check" />
    <option name="google-readability-todo" hit="google-readability-todo clang-tidy check" />
    <option name="check" hit="google-runtime-int clang-tidy check" />
    <option name="clang-tidy" hit="google-runtime-int clang-tidy check" />
    <option name="google-runtime-int" hit="google-runtime-int clang-tidy check" />
    <option name="check" hit="google-runtime-operator clang-tidy check" />
    <option name="clang-tidy" hit="google-runtime-operator clang-tidy check" />
    <option name="google-runtime-operator" hit="google-runtime-operator clang-tidy check" />
    <option name="check" hit="google-upgrade-googletest-case clang-tidy check" />
    <option name="clang-tidy" hit="google-upgrade-googletest-case clang-tidy check" />
    <option name="google-upgrade-googletest-case" hit="google-upgrade-googletest-case clang-tidy check" />
    <option name="clang" hit="gpu-maybe-wrong-side clang diagnostic" />
    <option name="diagnostic" hit="gpu-maybe-wrong-side clang diagnostic" />
    <option name="gpu-maybe-wrong-side" hit="gpu-maybe-wrong-side clang diagnostic" />
    <option name="clang" hit="header-guard clang diagnostic" />
    <option name="diagnostic" hit="header-guard clang diagnostic" />
    <option name="header-guard" hit="header-guard clang diagnostic" />
    <option name="clang" hit="header-hygiene clang diagnostic" />
    <option name="diagnostic" hit="header-hygiene clang diagnostic" />
    <option name="header-hygiene" hit="header-hygiene clang diagnostic" />
    <option name="check" hit="hicpp-avoid-c-arrays clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-avoid-c-arrays clang-tidy check" />
    <option name="hicpp-avoid-c-arrays" hit="hicpp-avoid-c-arrays clang-tidy check" />
    <option name="check" hit="hicpp-avoid-goto clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-avoid-goto clang-tidy check" />
    <option name="hicpp-avoid-goto" hit="hicpp-avoid-goto clang-tidy check" />
    <option name="check" hit="hicpp-braces-around-statements clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-braces-around-statements clang-tidy check" />
    <option name="hicpp-braces-around-statements" hit="hicpp-braces-around-statements clang-tidy check" />
    <option name="check" hit="hicpp-deprecated-headers clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-deprecated-headers clang-tidy check" />
    <option name="hicpp-deprecated-headers" hit="hicpp-deprecated-headers clang-tidy check" />
    <option name="check" hit="hicpp-exception-baseclass clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-exception-baseclass clang-tidy check" />
    <option name="hicpp-exception-baseclass" hit="hicpp-exception-baseclass clang-tidy check" />
    <option name="check" hit="hicpp-explicit-conversions clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-explicit-conversions clang-tidy check" />
    <option name="hicpp-explicit-conversions" hit="hicpp-explicit-conversions clang-tidy check" />
    <option name="check" hit="hicpp-function-size clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-function-size clang-tidy check" />
    <option name="hicpp-function-size" hit="hicpp-function-size clang-tidy check" />
    <option name="check" hit="hicpp-invalid-access-moved clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-invalid-access-moved clang-tidy check" />
    <option name="hicpp-invalid-access-moved" hit="hicpp-invalid-access-moved clang-tidy check" />
    <option name="check" hit="hicpp-member-init clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-member-init clang-tidy check" />
    <option name="hicpp-member-init" hit="hicpp-member-init clang-tidy check" />
    <option name="check" hit="hicpp-move-const-arg clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-move-const-arg clang-tidy check" />
    <option name="hicpp-move-const-arg" hit="hicpp-move-const-arg clang-tidy check" />
    <option name="check" hit="hicpp-multiway-paths-covered clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-multiway-paths-covered clang-tidy check" />
    <option name="hicpp-multiway-paths-covered" hit="hicpp-multiway-paths-covered clang-tidy check" />
    <option name="check" hit="hicpp-named-parameter clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-named-parameter clang-tidy check" />
    <option name="hicpp-named-parameter" hit="hicpp-named-parameter clang-tidy check" />
    <option name="check" hit="hicpp-new-delete-operators clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-new-delete-operators clang-tidy check" />
    <option name="hicpp-new-delete-operators" hit="hicpp-new-delete-operators clang-tidy check" />
    <option name="check" hit="hicpp-no-array-decay clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-no-array-decay clang-tidy check" />
    <option name="hicpp-no-array-decay" hit="hicpp-no-array-decay clang-tidy check" />
    <option name="check" hit="hicpp-no-assembler clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-no-assembler clang-tidy check" />
    <option name="hicpp-no-assembler" hit="hicpp-no-assembler clang-tidy check" />
    <option name="check" hit="hicpp-no-malloc clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-no-malloc clang-tidy check" />
    <option name="hicpp-no-malloc" hit="hicpp-no-malloc clang-tidy check" />
    <option name="check" hit="hicpp-noexcept-move clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-noexcept-move clang-tidy check" />
    <option name="hicpp-noexcept-move" hit="hicpp-noexcept-move clang-tidy check" />
    <option name="check" hit="hicpp-signed-bitwise clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-signed-bitwise clang-tidy check" />
    <option name="hicpp-signed-bitwise" hit="hicpp-signed-bitwise clang-tidy check" />
    <option name="check" hit="hicpp-special-member-functions clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-special-member-functions clang-tidy check" />
    <option name="hicpp-special-member-functions" hit="hicpp-special-member-functions clang-tidy check" />
    <option name="check" hit="hicpp-static-assert clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-static-assert clang-tidy check" />
    <option name="hicpp-static-assert" hit="hicpp-static-assert clang-tidy check" />
    <option name="check" hit="hicpp-undelegated-constructor clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-undelegated-constructor clang-tidy check" />
    <option name="hicpp-undelegated-constructor" hit="hicpp-undelegated-constructor clang-tidy check" />
    <option name="check" hit="hicpp-uppercase-literal-suffix clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-uppercase-literal-suffix clang-tidy check" />
    <option name="hicpp-uppercase-literal-suffix" hit="hicpp-uppercase-literal-suffix clang-tidy check" />
    <option name="check" hit="hicpp-use-auto clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-auto clang-tidy check" />
    <option name="hicpp-use-auto" hit="hicpp-use-auto clang-tidy check" />
    <option name="check" hit="hicpp-use-emplace clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-emplace clang-tidy check" />
    <option name="hicpp-use-emplace" hit="hicpp-use-emplace clang-tidy check" />
    <option name="check" hit="hicpp-use-equals-default clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-equals-default clang-tidy check" />
    <option name="hicpp-use-equals-default" hit="hicpp-use-equals-default clang-tidy check" />
    <option name="check" hit="hicpp-use-equals-delete clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-equals-delete clang-tidy check" />
    <option name="hicpp-use-equals-delete" hit="hicpp-use-equals-delete clang-tidy check" />
    <option name="check" hit="hicpp-use-noexcept clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-noexcept clang-tidy check" />
    <option name="hicpp-use-noexcept" hit="hicpp-use-noexcept clang-tidy check" />
    <option name="check" hit="hicpp-use-nullptr clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-nullptr clang-tidy check" />
    <option name="hicpp-use-nullptr" hit="hicpp-use-nullptr clang-tidy check" />
    <option name="check" hit="hicpp-use-override clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-use-override clang-tidy check" />
    <option name="hicpp-use-override" hit="hicpp-use-override clang-tidy check" />
    <option name="check" hit="hicpp-vararg clang-tidy check" />
    <option name="clang-tidy" hit="hicpp-vararg clang-tidy check" />
    <option name="hicpp-vararg" hit="hicpp-vararg clang-tidy check" />
    <option name="clang" hit="hip-omp-target-directives clang diagnostic" />
    <option name="diagnostic" hit="hip-omp-target-directives clang diagnostic" />
    <option name="hip-omp-target-directives" hit="hip-omp-target-directives clang diagnostic" />
    <option name="clang" hit="hip-only clang diagnostic" />
    <option name="diagnostic" hit="hip-only clang diagnostic" />
    <option name="hip-only" hit="hip-only clang diagnostic" />
    <option name="clang" hit="hlsl-extensions clang diagnostic" />
    <option name="diagnostic" hit="hlsl-extensions clang diagnostic" />
    <option name="hlsl-extensions" hit="hlsl-extensions clang diagnostic" />
    <option name="iddqd" hit="iddqd" />
    <option name="clang" hit="idiomatic-parentheses clang diagnostic" />
    <option name="diagnostic" hit="idiomatic-parentheses clang diagnostic" />
    <option name="idiomatic-parentheses" hit="idiomatic-parentheses clang diagnostic" />
    <option name="clang" hit="ignored-attributes clang diagnostic" />
    <option name="diagnostic" hit="ignored-attributes clang diagnostic" />
    <option name="ignored-attributes" hit="ignored-attributes clang diagnostic" />
    <option name="clang" hit="ignored-availability-without-sdk-settings clang diagnostic" />
    <option name="diagnostic" hit="ignored-availability-without-sdk-settings clang diagnostic" />
    <option name="ignored-availability-without-sdk-settings" hit="ignored-availability-without-sdk-settings clang diagnostic" />
    <option name="clang" hit="ignored-optimization-argument clang diagnostic" />
    <option name="diagnostic" hit="ignored-optimization-argument clang diagnostic" />
    <option name="ignored-optimization-argument" hit="ignored-optimization-argument clang diagnostic" />
    <option name="clang" hit="ignored-pragma-intrinsic clang diagnostic" />
    <option name="diagnostic" hit="ignored-pragma-intrinsic clang diagnostic" />
    <option name="ignored-pragma-intrinsic" hit="ignored-pragma-intrinsic clang diagnostic" />
    <option name="clang" hit="ignored-pragma-optimize clang diagnostic" />
    <option name="diagnostic" hit="ignored-pragma-optimize clang diagnostic" />
    <option name="ignored-pragma-optimize" hit="ignored-pragma-optimize clang diagnostic" />
    <option name="clang" hit="ignored-pragmas clang diagnostic" />
    <option name="diagnostic" hit="ignored-pragmas clang diagnostic" />
    <option name="ignored-pragmas" hit="ignored-pragmas clang diagnostic" />
    <option name="clang" hit="ignored-qualifiers clang diagnostic" />
    <option name="diagnostic" hit="ignored-qualifiers clang diagnostic" />
    <option name="ignored-qualifiers" hit="ignored-qualifiers clang diagnostic" />
    <option name="clang" hit="ignored-reference-qualifiers clang diagnostic" />
    <option name="diagnostic" hit="ignored-reference-qualifiers clang diagnostic" />
    <option name="ignored-reference-qualifiers" hit="ignored-reference-qualifiers clang diagnostic" />
    <option name="clang" hit="implicit-atomic-properties clang diagnostic" />
    <option name="diagnostic" hit="implicit-atomic-properties clang diagnostic" />
    <option name="implicit-atomic-properties" hit="implicit-atomic-properties clang diagnostic" />
    <option name="clang" hit="implicit-const-int-float-conversion clang diagnostic" />
    <option name="diagnostic" hit="implicit-const-int-float-conversion clang diagnostic" />
    <option name="implicit-const-int-float-conversion" hit="implicit-const-int-float-conversion clang diagnostic" />
    <option name="clang" hit="implicit-conversion-floating-point-to-bool clang diagnostic" />
    <option name="diagnostic" hit="implicit-conversion-floating-point-to-bool clang diagnostic" />
    <option name="implicit-conversion-floating-point-to-bool" hit="implicit-conversion-floating-point-to-bool clang diagnostic" />
    <option name="clang" hit="implicit-exception-spec-mismatch clang diagnostic" />
    <option name="diagnostic" hit="implicit-exception-spec-mismatch clang diagnostic" />
    <option name="implicit-exception-spec-mismatch" hit="implicit-exception-spec-mismatch clang diagnostic" />
    <option name="clang" hit="implicit-fallthrough clang diagnostic" />
    <option name="diagnostic" hit="implicit-fallthrough clang diagnostic" />
    <option name="implicit-fallthrough" hit="implicit-fallthrough clang diagnostic" />
    <option name="clang" hit="implicit-fallthrough-per-function clang diagnostic" />
    <option name="diagnostic" hit="implicit-fallthrough-per-function clang diagnostic" />
    <option name="implicit-fallthrough-per-function" hit="implicit-fallthrough-per-function clang diagnostic" />
    <option name="clang" hit="implicit-fixed-point-conversion clang diagnostic" />
    <option name="diagnostic" hit="implicit-fixed-point-conversion clang diagnostic" />
    <option name="implicit-fixed-point-conversion" hit="implicit-fixed-point-conversion clang diagnostic" />
    <option name="clang" hit="implicit-float-conversion clang diagnostic" />
    <option name="diagnostic" hit="implicit-float-conversion clang diagnostic" />
    <option name="implicit-float-conversion" hit="implicit-float-conversion clang diagnostic" />
    <option name="clang" hit="implicit-function-declaration clang diagnostic" />
    <option name="diagnostic" hit="implicit-function-declaration clang diagnostic" />
    <option name="implicit-function-declaration" hit="implicit-function-declaration clang diagnostic" />
    <option name="clang" hit="implicit-int clang diagnostic" />
    <option name="diagnostic" hit="implicit-int clang diagnostic" />
    <option name="implicit-int" hit="implicit-int clang diagnostic" />
    <option name="clang" hit="implicit-int-conversion clang diagnostic" />
    <option name="diagnostic" hit="implicit-int-conversion clang diagnostic" />
    <option name="implicit-int-conversion" hit="implicit-int-conversion clang diagnostic" />
    <option name="clang" hit="implicit-int-float-conversion clang diagnostic" />
    <option name="diagnostic" hit="implicit-int-float-conversion clang diagnostic" />
    <option name="implicit-int-float-conversion" hit="implicit-int-float-conversion clang diagnostic" />
    <option name="clang" hit="implicit-retain-self clang diagnostic" />
    <option name="diagnostic" hit="implicit-retain-self clang diagnostic" />
    <option name="implicit-retain-self" hit="implicit-retain-self clang diagnostic" />
    <option name="clang" hit="implicitly-unsigned-literal clang diagnostic" />
    <option name="diagnostic" hit="implicitly-unsigned-literal clang diagnostic" />
    <option name="implicitly-unsigned-literal" hit="implicitly-unsigned-literal clang diagnostic" />
    <option name="clang" hit="import-preprocessor-directive-pedantic clang diagnostic" />
    <option name="diagnostic" hit="import-preprocessor-directive-pedantic clang diagnostic" />
    <option name="import-preprocessor-directive-pedantic" hit="import-preprocessor-directive-pedantic clang diagnostic" />
    <option name="clang" hit="inaccessible-base clang diagnostic" />
    <option name="diagnostic" hit="inaccessible-base clang diagnostic" />
    <option name="inaccessible-base" hit="inaccessible-base clang diagnostic" />
    <option name="clang" hit="include-next-absolute-path clang diagnostic" />
    <option name="diagnostic" hit="include-next-absolute-path clang diagnostic" />
    <option name="include-next-absolute-path" hit="include-next-absolute-path clang diagnostic" />
    <option name="clang" hit="include-next-outside-header clang diagnostic" />
    <option name="diagnostic" hit="include-next-outside-header clang diagnostic" />
    <option name="include-next-outside-header" hit="include-next-outside-header clang diagnostic" />
    <option name="clang" hit="incompatible-exception-spec clang diagnostic" />
    <option name="diagnostic" hit="incompatible-exception-spec clang diagnostic" />
    <option name="incompatible-exception-spec" hit="incompatible-exception-spec clang diagnostic" />
    <option name="clang" hit="incompatible-function-pointer-types clang diagnostic" />
    <option name="diagnostic" hit="incompatible-function-pointer-types clang diagnostic" />
    <option name="incompatible-function-pointer-types" hit="incompatible-function-pointer-types clang diagnostic" />
    <option name="clang" hit="incompatible-function-pointer-types-strict clang diagnostic" />
    <option name="diagnostic" hit="incompatible-function-pointer-types-strict clang diagnostic" />
    <option name="incompatible-function-pointer-types-strict" hit="incompatible-function-pointer-types-strict clang diagnostic" />
    <option name="clang" hit="incompatible-library-redeclaration clang diagnostic" />
    <option name="diagnostic" hit="incompatible-library-redeclaration clang diagnostic" />
    <option name="incompatible-library-redeclaration" hit="incompatible-library-redeclaration clang diagnostic" />
    <option name="clang" hit="incompatible-ms-struct clang diagnostic" />
    <option name="diagnostic" hit="incompatible-ms-struct clang diagnostic" />
    <option name="incompatible-ms-struct" hit="incompatible-ms-struct clang diagnostic" />
    <option name="clang" hit="incompatible-pointer-types clang diagnostic" />
    <option name="diagnostic" hit="incompatible-pointer-types clang diagnostic" />
    <option name="incompatible-pointer-types" hit="incompatible-pointer-types clang diagnostic" />
    <option name="clang" hit="incompatible-pointer-types-discards-qualifiers clang diagnostic" />
    <option name="diagnostic" hit="incompatible-pointer-types-discards-qualifiers clang diagnostic" />
    <option name="incompatible-pointer-types-discards-qualifiers" hit="incompatible-pointer-types-discards-qualifiers clang diagnostic" />
    <option name="clang" hit="incompatible-property-type clang diagnostic" />
    <option name="diagnostic" hit="incompatible-property-type clang diagnostic" />
    <option name="incompatible-property-type" hit="incompatible-property-type clang diagnostic" />
    <option name="clang" hit="incompatible-sysroot clang diagnostic" />
    <option name="diagnostic" hit="incompatible-sysroot clang diagnostic" />
    <option name="incompatible-sysroot" hit="incompatible-sysroot clang diagnostic" />
    <option name="clang" hit="incomplete-framework-module-declaration clang diagnostic" />
    <option name="diagnostic" hit="incomplete-framework-module-declaration clang diagnostic" />
    <option name="incomplete-framework-module-declaration" hit="incomplete-framework-module-declaration clang diagnostic" />
    <option name="clang" hit="incomplete-implementation clang diagnostic" />
    <option name="diagnostic" hit="incomplete-implementation clang diagnostic" />
    <option name="incomplete-implementation" hit="incomplete-implementation clang diagnostic" />
    <option name="clang" hit="incomplete-module clang diagnostic" />
    <option name="diagnostic" hit="incomplete-module clang diagnostic" />
    <option name="incomplete-module" hit="incomplete-module clang diagnostic" />
    <option name="clang" hit="incomplete-setjmp-declaration clang diagnostic" />
    <option name="diagnostic" hit="incomplete-setjmp-declaration clang diagnostic" />
    <option name="incomplete-setjmp-declaration" hit="incomplete-setjmp-declaration clang diagnostic" />
    <option name="clang" hit="incomplete-umbrella clang diagnostic" />
    <option name="diagnostic" hit="incomplete-umbrella clang diagnostic" />
    <option name="incomplete-umbrella" hit="incomplete-umbrella clang diagnostic" />
    <option name="clang" hit="inconsistent-dllimport clang diagnostic" />
    <option name="diagnostic" hit="inconsistent-dllimport clang diagnostic" />
    <option name="inconsistent-dllimport" hit="inconsistent-dllimport clang diagnostic" />
    <option name="clang" hit="inconsistent-missing-destructor-override clang diagnostic" />
    <option name="diagnostic" hit="inconsistent-missing-destructor-override clang diagnostic" />
    <option name="inconsistent-missing-destructor-override" hit="inconsistent-missing-destructor-override clang diagnostic" />
    <option name="clang" hit="inconsistent-missing-override clang diagnostic" />
    <option name="diagnostic" hit="inconsistent-missing-override clang diagnostic" />
    <option name="inconsistent-missing-override" hit="inconsistent-missing-override clang diagnostic" />
    <option name="clang" hit="increment-bool clang diagnostic" />
    <option name="diagnostic" hit="increment-bool clang diagnostic" />
    <option name="increment-bool" hit="increment-bool clang diagnostic" />
    <option name="clang" hit="infinite-recursion clang diagnostic" />
    <option name="diagnostic" hit="infinite-recursion clang diagnostic" />
    <option name="infinite-recursion" hit="infinite-recursion clang diagnostic" />
    <option name="clang" hit="initializer-overrides clang diagnostic" />
    <option name="diagnostic" hit="initializer-overrides clang diagnostic" />
    <option name="initializer-overrides" hit="initializer-overrides clang diagnostic" />
    <option name="clang" hit="injected-class-name clang diagnostic" />
    <option name="diagnostic" hit="injected-class-name clang diagnostic" />
    <option name="injected-class-name" hit="injected-class-name clang diagnostic" />
    <option name="clang" hit="inline-asm clang diagnostic" />
    <option name="diagnostic" hit="inline-asm clang diagnostic" />
    <option name="inline-asm" hit="inline-asm clang diagnostic" />
    <option name="clang" hit="inline-namespace-reopened-noninline clang diagnostic" />
    <option name="diagnostic" hit="inline-namespace-reopened-noninline clang diagnostic" />
    <option name="inline-namespace-reopened-noninline" hit="inline-namespace-reopened-noninline clang diagnostic" />
    <option name="clang" hit="inline-new-delete clang diagnostic" />
    <option name="diagnostic" hit="inline-new-delete clang diagnostic" />
    <option name="inline-new-delete" hit="inline-new-delete clang diagnostic" />
    <option name="clang" hit="instantiation-after-specialization clang diagnostic" />
    <option name="diagnostic" hit="instantiation-after-specialization clang diagnostic" />
    <option name="instantiation-after-specialization" hit="instantiation-after-specialization clang diagnostic" />
    <option name="clang" hit="int-conversion clang diagnostic" />
    <option name="diagnostic" hit="int-conversion clang diagnostic" />
    <option name="int-conversion" hit="int-conversion clang diagnostic" />
    <option name="clang" hit="int-in-bool-context clang diagnostic" />
    <option name="diagnostic" hit="int-in-bool-context clang diagnostic" />
    <option name="int-in-bool-context" hit="int-in-bool-context clang diagnostic" />
    <option name="clang" hit="int-to-pointer-cast clang diagnostic" />
    <option name="diagnostic" hit="int-to-pointer-cast clang diagnostic" />
    <option name="int-to-pointer-cast" hit="int-to-pointer-cast clang diagnostic" />
    <option name="clang" hit="int-to-void-pointer-cast clang diagnostic" />
    <option name="diagnostic" hit="int-to-void-pointer-cast clang diagnostic" />
    <option name="int-to-void-pointer-cast" hit="int-to-void-pointer-cast clang diagnostic" />
    <option name="clang" hit="integer-overflow clang diagnostic" />
    <option name="diagnostic" hit="integer-overflow clang diagnostic" />
    <option name="integer-overflow" hit="integer-overflow clang diagnostic" />
    <option name="clang" hit="interrupt-service-routine clang diagnostic" />
    <option name="diagnostic" hit="interrupt-service-routine clang diagnostic" />
    <option name="interrupt-service-routine" hit="interrupt-service-routine clang diagnostic" />
    <option name="clang" hit="invalid-constexpr clang diagnostic" />
    <option name="diagnostic" hit="invalid-constexpr clang diagnostic" />
    <option name="invalid-constexpr" hit="invalid-constexpr clang diagnostic" />
    <option name="clang" hit="invalid-iboutlet clang diagnostic" />
    <option name="diagnostic" hit="invalid-iboutlet clang diagnostic" />
    <option name="invalid-iboutlet" hit="invalid-iboutlet clang diagnostic" />
    <option name="clang" hit="invalid-initializer-from-system-header clang diagnostic" />
    <option name="diagnostic" hit="invalid-initializer-from-system-header clang diagnostic" />
    <option name="invalid-initializer-from-system-header" hit="invalid-initializer-from-system-header clang diagnostic" />
    <option name="clang" hit="invalid-ios-deployment-target clang diagnostic" />
    <option name="diagnostic" hit="invalid-ios-deployment-target clang diagnostic" />
    <option name="invalid-ios-deployment-target" hit="invalid-ios-deployment-target clang diagnostic" />
    <option name="clang" hit="invalid-no-builtin-names clang diagnostic" />
    <option name="diagnostic" hit="invalid-no-builtin-names clang diagnostic" />
    <option name="invalid-no-builtin-names" hit="invalid-no-builtin-names clang diagnostic" />
    <option name="clang" hit="invalid-noreturn clang diagnostic" />
    <option name="diagnostic" hit="invalid-noreturn clang diagnostic" />
    <option name="invalid-noreturn" hit="invalid-noreturn clang diagnostic" />
    <option name="clang" hit="invalid-offsetof clang diagnostic" />
    <option name="diagnostic" hit="invalid-offsetof clang diagnostic" />
    <option name="invalid-offsetof" hit="invalid-offsetof clang diagnostic" />
    <option name="clang" hit="invalid-or-nonexistent-directory clang diagnostic" />
    <option name="diagnostic" hit="invalid-or-nonexistent-directory clang diagnostic" />
    <option name="invalid-or-nonexistent-directory" hit="invalid-or-nonexistent-directory clang diagnostic" />
    <option name="clang" hit="invalid-partial-specialization clang diagnostic" />
    <option name="diagnostic" hit="invalid-partial-specialization clang diagnostic" />
    <option name="invalid-partial-specialization" hit="invalid-partial-specialization clang diagnostic" />
    <option name="clang" hit="invalid-pp-token clang diagnostic" />
    <option name="diagnostic" hit="invalid-pp-token clang diagnostic" />
    <option name="invalid-pp-token" hit="invalid-pp-token clang diagnostic" />
    <option name="clang" hit="invalid-source-encoding clang diagnostic" />
    <option name="diagnostic" hit="invalid-source-encoding clang diagnostic" />
    <option name="invalid-source-encoding" hit="invalid-source-encoding clang diagnostic" />
    <option name="clang" hit="invalid-static-assert-message clang diagnostic" />
    <option name="diagnostic" hit="invalid-static-assert-message clang diagnostic" />
    <option name="invalid-static-assert-message" hit="invalid-static-assert-message clang diagnostic" />
    <option name="clang" hit="invalid-token-paste clang diagnostic" />
    <option name="diagnostic" hit="invalid-token-paste clang diagnostic" />
    <option name="invalid-token-paste" hit="invalid-token-paste clang diagnostic" />
    <option name="clang" hit="invalid-unevaluated-string clang diagnostic" />
    <option name="diagnostic" hit="invalid-unevaluated-string clang diagnostic" />
    <option name="invalid-unevaluated-string" hit="invalid-unevaluated-string clang diagnostic" />
    <option name="clang" hit="invalid-utf8 clang diagnostic" />
    <option name="diagnostic" hit="invalid-utf8 clang diagnostic" />
    <option name="invalid-utf8" hit="invalid-utf8 clang diagnostic" />
    <option name="clang" hit="jump-seh-finally clang diagnostic" />
    <option name="diagnostic" hit="jump-seh-finally clang diagnostic" />
    <option name="jump-seh-finally" hit="jump-seh-finally clang diagnostic" />
    <option name="clang" hit="keyword-compat clang diagnostic" />
    <option name="diagnostic" hit="keyword-compat clang diagnostic" />
    <option name="keyword-compat" hit="keyword-compat clang diagnostic" />
    <option name="clang" hit="keyword-macro clang diagnostic" />
    <option name="diagnostic" hit="keyword-macro clang diagnostic" />
    <option name="keyword-macro" hit="keyword-macro clang diagnostic" />
    <option name="clang" hit="knr-promoted-parameter clang diagnostic" />
    <option name="diagnostic" hit="knr-promoted-parameter clang diagnostic" />
    <option name="knr-promoted-parameter" hit="knr-promoted-parameter clang diagnostic" />
    <option name="clang" hit="language-extension-token clang diagnostic" />
    <option name="diagnostic" hit="language-extension-token clang diagnostic" />
    <option name="language-extension-token" hit="language-extension-token clang diagnostic" />
    <option name="clang" hit="large-by-value-copy clang diagnostic" />
    <option name="diagnostic" hit="large-by-value-copy clang diagnostic" />
    <option name="large-by-value-copy" hit="large-by-value-copy clang diagnostic" />
    <option name="clang" hit="linker-warnings clang diagnostic" />
    <option name="diagnostic" hit="linker-warnings clang diagnostic" />
    <option name="linker-warnings" hit="linker-warnings clang diagnostic" />
    <option name="check" hit="linuxkernel-must-check-errs clang-tidy check" />
    <option name="clang-tidy" hit="linuxkernel-must-check-errs clang-tidy check" />
    <option name="linuxkernel-must-check-errs" hit="linuxkernel-must-check-errs clang-tidy check" />
    <option name="clang" hit="literal-conversion clang diagnostic" />
    <option name="diagnostic" hit="literal-conversion clang diagnostic" />
    <option name="literal-conversion" hit="literal-conversion clang diagnostic" />
    <option name="clang" hit="literal-range clang diagnostic" />
    <option name="diagnostic" hit="literal-range clang diagnostic" />
    <option name="literal-range" hit="literal-range clang diagnostic" />
    <option name="check" hit="llvm-else-after-return clang-tidy check" />
    <option name="clang-tidy" hit="llvm-else-after-return clang-tidy check" />
    <option name="llvm-else-after-return" hit="llvm-else-after-return clang-tidy check" />
    <option name="check" hit="llvm-header-guard clang-tidy check" />
    <option name="clang-tidy" hit="llvm-header-guard clang-tidy check" />
    <option name="llvm-header-guard" hit="llvm-header-guard clang-tidy check" />
    <option name="check" hit="llvm-include-order clang-tidy check" />
    <option name="clang-tidy" hit="llvm-include-order clang-tidy check" />
    <option name="llvm-include-order" hit="llvm-include-order clang-tidy check" />
    <option name="check" hit="llvm-namespace-comment clang-tidy check" />
    <option name="clang-tidy" hit="llvm-namespace-comment clang-tidy check" />
    <option name="llvm-namespace-comment" hit="llvm-namespace-comment clang-tidy check" />
    <option name="check" hit="llvm-prefer-isa-or-dyn-cast-in-conditionals clang-tidy check" />
    <option name="clang-tidy" hit="llvm-prefer-isa-or-dyn-cast-in-conditionals clang-tidy check" />
    <option name="llvm-prefer-isa-or-dyn-cast-in-conditionals" hit="llvm-prefer-isa-or-dyn-cast-in-conditionals clang-tidy check" />
    <option name="check" hit="llvm-prefer-register-over-unsigned clang-tidy check" />
    <option name="clang-tidy" hit="llvm-prefer-register-over-unsigned clang-tidy check" />
    <option name="llvm-prefer-register-over-unsigned" hit="llvm-prefer-register-over-unsigned clang-tidy check" />
    <option name="check" hit="llvm-qualified-auto clang-tidy check" />
    <option name="clang-tidy" hit="llvm-qualified-auto clang-tidy check" />
    <option name="llvm-qualified-auto" hit="llvm-qualified-auto clang-tidy check" />
    <option name="check" hit="llvm-twine-local clang-tidy check" />
    <option name="clang-tidy" hit="llvm-twine-local clang-tidy check" />
    <option name="llvm-twine-local" hit="llvm-twine-local clang-tidy check" />
    <option name="check" hit="llvmlibc-callee-namespace clang-tidy check" />
    <option name="clang-tidy" hit="llvmlibc-callee-namespace clang-tidy check" />
    <option name="llvmlibc-callee-namespace" hit="llvmlibc-callee-namespace clang-tidy check" />
    <option name="check" hit="llvmlibc-implementation-in-namespace clang-tidy check" />
    <option name="clang-tidy" hit="llvmlibc-implementation-in-namespace clang-tidy check" />
    <option name="llvmlibc-implementation-in-namespace" hit="llvmlibc-implementation-in-namespace clang-tidy check" />
    <option name="check" hit="llvmlibc-inline-function-decl clang-tidy check" />
    <option name="clang-tidy" hit="llvmlibc-inline-function-decl clang-tidy check" />
    <option name="llvmlibc-inline-function-decl" hit="llvmlibc-inline-function-decl clang-tidy check" />
    <option name="check" hit="llvmlibc-restrict-system-libc-headers clang-tidy check" />
    <option name="clang-tidy" hit="llvmlibc-restrict-system-libc-headers clang-tidy check" />
    <option name="llvmlibc-restrict-system-libc-headers" hit="llvmlibc-restrict-system-libc-headers clang-tidy check" />
    <option name="clang" hit="local-type-template-args clang diagnostic" />
    <option name="diagnostic" hit="local-type-template-args clang diagnostic" />
    <option name="local-type-template-args" hit="local-type-template-args clang diagnostic" />
    <option name="clang" hit="logical-not-parentheses clang diagnostic" />
    <option name="diagnostic" hit="logical-not-parentheses clang diagnostic" />
    <option name="logical-not-parentheses" hit="logical-not-parentheses clang diagnostic" />
    <option name="clang" hit="logical-op-parentheses clang diagnostic" />
    <option name="diagnostic" hit="logical-op-parentheses clang diagnostic" />
    <option name="logical-op-parentheses" hit="logical-op-parentheses clang diagnostic" />
    <option name="clang" hit="long-long clang diagnostic" />
    <option name="diagnostic" hit="long-long clang diagnostic" />
    <option name="long-long" hit="long-long clang diagnostic" />
    <option name="clang" hit="macro-redefined clang diagnostic" />
    <option name="diagnostic" hit="macro-redefined clang diagnostic" />
    <option name="macro-redefined" hit="macro-redefined clang diagnostic" />
    <option name="clang" hit="main clang diagnostic" />
    <option name="diagnostic" hit="main clang diagnostic" />
    <option name="main" hit="main clang diagnostic" />
    <option name="clang" hit="main-return-type clang diagnostic" />
    <option name="diagnostic" hit="main-return-type clang diagnostic" />
    <option name="main-return-type" hit="main-return-type clang diagnostic" />
    <option name="clang" hit="malformed-warning-check clang diagnostic" />
    <option name="diagnostic" hit="malformed-warning-check clang diagnostic" />
    <option name="malformed-warning-check" hit="malformed-warning-check clang diagnostic" />
    <option name="clang" hit="many-braces-around-scalar-init clang diagnostic" />
    <option name="diagnostic" hit="many-braces-around-scalar-init clang diagnostic" />
    <option name="many-braces-around-scalar-init" hit="many-braces-around-scalar-init clang diagnostic" />
    <option name="clang" hit="mathematical-notation-identifier-extension clang diagnostic" />
    <option name="diagnostic" hit="mathematical-notation-identifier-extension clang diagnostic" />
    <option name="mathematical-notation-identifier-extension" hit="mathematical-notation-identifier-extension clang diagnostic" />
    <option name="clang" hit="max-tokens clang diagnostic" />
    <option name="diagnostic" hit="max-tokens clang diagnostic" />
    <option name="max-tokens" hit="max-tokens clang diagnostic" />
    <option name="clang" hit="max-unsigned-zero clang diagnostic" />
    <option name="diagnostic" hit="max-unsigned-zero clang diagnostic" />
    <option name="max-unsigned-zero" hit="max-unsigned-zero clang diagnostic" />
    <option name="clang" hit="memset-transposed-args clang diagnostic" />
    <option name="diagnostic" hit="memset-transposed-args clang diagnostic" />
    <option name="memset-transposed-args" hit="memset-transposed-args clang diagnostic" />
    <option name="clang" hit="memsize-comparison clang diagnostic" />
    <option name="diagnostic" hit="memsize-comparison clang diagnostic" />
    <option name="memsize-comparison" hit="memsize-comparison clang diagnostic" />
    <option name="clang" hit="method-signatures clang diagnostic" />
    <option name="diagnostic" hit="method-signatures clang diagnostic" />
    <option name="method-signatures" hit="method-signatures clang diagnostic" />
    <option name="clang" hit="microsoft-abstract clang diagnostic" />
    <option name="diagnostic" hit="microsoft-abstract clang diagnostic" />
    <option name="microsoft-abstract" hit="microsoft-abstract clang diagnostic" />
    <option name="clang" hit="microsoft-anon-tag clang diagnostic" />
    <option name="diagnostic" hit="microsoft-anon-tag clang diagnostic" />
    <option name="microsoft-anon-tag" hit="microsoft-anon-tag clang diagnostic" />
    <option name="clang" hit="microsoft-cast clang diagnostic" />
    <option name="diagnostic" hit="microsoft-cast clang diagnostic" />
    <option name="microsoft-cast" hit="microsoft-cast clang diagnostic" />
    <option name="clang" hit="microsoft-charize clang diagnostic" />
    <option name="diagnostic" hit="microsoft-charize clang diagnostic" />
    <option name="microsoft-charize" hit="microsoft-charize clang diagnostic" />
    <option name="clang" hit="microsoft-comment-paste clang diagnostic" />
    <option name="diagnostic" hit="microsoft-comment-paste clang diagnostic" />
    <option name="microsoft-comment-paste" hit="microsoft-comment-paste clang diagnostic" />
    <option name="clang" hit="microsoft-const-init clang diagnostic" />
    <option name="diagnostic" hit="microsoft-const-init clang diagnostic" />
    <option name="microsoft-const-init" hit="microsoft-const-init clang diagnostic" />
    <option name="clang" hit="microsoft-cpp-macro clang diagnostic" />
    <option name="diagnostic" hit="microsoft-cpp-macro clang diagnostic" />
    <option name="microsoft-cpp-macro" hit="microsoft-cpp-macro clang diagnostic" />
    <option name="clang" hit="microsoft-default-arg-redefinition clang diagnostic" />
    <option name="diagnostic" hit="microsoft-default-arg-redefinition clang diagnostic" />
    <option name="microsoft-default-arg-redefinition" hit="microsoft-default-arg-redefinition clang diagnostic" />
    <option name="clang" hit="microsoft-drectve-section clang diagnostic" />
    <option name="diagnostic" hit="microsoft-drectve-section clang diagnostic" />
    <option name="microsoft-drectve-section" hit="microsoft-drectve-section clang diagnostic" />
    <option name="clang" hit="microsoft-end-of-file clang diagnostic" />
    <option name="diagnostic" hit="microsoft-end-of-file clang diagnostic" />
    <option name="microsoft-end-of-file" hit="microsoft-end-of-file clang diagnostic" />
    <option name="clang" hit="microsoft-enum-forward-reference clang diagnostic" />
    <option name="diagnostic" hit="microsoft-enum-forward-reference clang diagnostic" />
    <option name="microsoft-enum-forward-reference" hit="microsoft-enum-forward-reference clang diagnostic" />
    <option name="clang" hit="microsoft-enum-value clang diagnostic" />
    <option name="diagnostic" hit="microsoft-enum-value clang diagnostic" />
    <option name="microsoft-enum-value" hit="microsoft-enum-value clang diagnostic" />
    <option name="clang" hit="microsoft-exception-spec clang diagnostic" />
    <option name="diagnostic" hit="microsoft-exception-spec clang diagnostic" />
    <option name="microsoft-exception-spec" hit="microsoft-exception-spec clang diagnostic" />
    <option name="clang" hit="microsoft-exists clang diagnostic" />
    <option name="diagnostic" hit="microsoft-exists clang diagnostic" />
    <option name="microsoft-exists" hit="microsoft-exists clang diagnostic" />
    <option name="clang" hit="microsoft-explicit-constructor-call clang diagnostic" />
    <option name="diagnostic" hit="microsoft-explicit-constructor-call clang diagnostic" />
    <option name="microsoft-explicit-constructor-call" hit="microsoft-explicit-constructor-call clang diagnostic" />
    <option name="clang" hit="microsoft-extra-qualification clang diagnostic" />
    <option name="diagnostic" hit="microsoft-extra-qualification clang diagnostic" />
    <option name="microsoft-extra-qualification" hit="microsoft-extra-qualification clang diagnostic" />
    <option name="clang" hit="microsoft-fixed-enum clang diagnostic" />
    <option name="diagnostic" hit="microsoft-fixed-enum clang diagnostic" />
    <option name="microsoft-fixed-enum" hit="microsoft-fixed-enum clang diagnostic" />
    <option name="clang" hit="microsoft-flexible-array clang diagnostic" />
    <option name="diagnostic" hit="microsoft-flexible-array clang diagnostic" />
    <option name="microsoft-flexible-array" hit="microsoft-flexible-array clang diagnostic" />
    <option name="clang" hit="microsoft-goto clang diagnostic" />
    <option name="diagnostic" hit="microsoft-goto clang diagnostic" />
    <option name="microsoft-goto" hit="microsoft-goto clang diagnostic" />
    <option name="clang" hit="microsoft-inaccessible-base clang diagnostic" />
    <option name="diagnostic" hit="microsoft-inaccessible-base clang diagnostic" />
    <option name="microsoft-inaccessible-base" hit="microsoft-inaccessible-base clang diagnostic" />
    <option name="clang" hit="microsoft-include clang diagnostic" />
    <option name="diagnostic" hit="microsoft-include clang diagnostic" />
    <option name="microsoft-include" hit="microsoft-include clang diagnostic" />
    <option name="clang" hit="microsoft-init-from-predefined clang diagnostic" />
    <option name="diagnostic" hit="microsoft-init-from-predefined clang diagnostic" />
    <option name="microsoft-init-from-predefined" hit="microsoft-init-from-predefined clang diagnostic" />
    <option name="clang" hit="microsoft-mutable-reference clang diagnostic" />
    <option name="diagnostic" hit="microsoft-mutable-reference clang diagnostic" />
    <option name="microsoft-mutable-reference" hit="microsoft-mutable-reference clang diagnostic" />
    <option name="clang" hit="microsoft-pure-definition clang diagnostic" />
    <option name="diagnostic" hit="microsoft-pure-definition clang diagnostic" />
    <option name="microsoft-pure-definition" hit="microsoft-pure-definition clang diagnostic" />
    <option name="clang" hit="microsoft-redeclare-static clang diagnostic" />
    <option name="diagnostic" hit="microsoft-redeclare-static clang diagnostic" />
    <option name="microsoft-redeclare-static" hit="microsoft-redeclare-static clang diagnostic" />
    <option name="clang" hit="microsoft-sealed clang diagnostic" />
    <option name="diagnostic" hit="microsoft-sealed clang diagnostic" />
    <option name="microsoft-sealed" hit="microsoft-sealed clang diagnostic" />
    <option name="clang" hit="microsoft-static-assert clang diagnostic" />
    <option name="diagnostic" hit="microsoft-static-assert clang diagnostic" />
    <option name="microsoft-static-assert" hit="microsoft-static-assert clang diagnostic" />
    <option name="clang" hit="microsoft-template clang diagnostic" />
    <option name="diagnostic" hit="microsoft-template clang diagnostic" />
    <option name="microsoft-template" hit="microsoft-template clang diagnostic" />
    <option name="clang" hit="microsoft-template-shadow clang diagnostic" />
    <option name="diagnostic" hit="microsoft-template-shadow clang diagnostic" />
    <option name="microsoft-template-shadow" hit="microsoft-template-shadow clang diagnostic" />
    <option name="clang" hit="microsoft-union-member-reference clang diagnostic" />
    <option name="diagnostic" hit="microsoft-union-member-reference clang diagnostic" />
    <option name="microsoft-union-member-reference" hit="microsoft-union-member-reference clang diagnostic" />
    <option name="clang" hit="microsoft-unqualified-friend clang diagnostic" />
    <option name="diagnostic" hit="microsoft-unqualified-friend clang diagnostic" />
    <option name="microsoft-unqualified-friend" hit="microsoft-unqualified-friend clang diagnostic" />
    <option name="clang" hit="microsoft-using-decl clang diagnostic" />
    <option name="diagnostic" hit="microsoft-using-decl clang diagnostic" />
    <option name="microsoft-using-decl" hit="microsoft-using-decl clang diagnostic" />
    <option name="clang" hit="microsoft-void-pseudo-dtor clang diagnostic" />
    <option name="diagnostic" hit="microsoft-void-pseudo-dtor clang diagnostic" />
    <option name="microsoft-void-pseudo-dtor" hit="microsoft-void-pseudo-dtor clang diagnostic" />
    <option name="check" hit="misc-confusable-identifiers clang-tidy check" />
    <option name="clang-tidy" hit="misc-confusable-identifiers clang-tidy check" />
    <option name="misc-confusable-identifiers" hit="misc-confusable-identifiers clang-tidy check" />
    <option name="check" hit="misc-const-correctness clang-tidy check" />
    <option name="clang-tidy" hit="misc-const-correctness clang-tidy check" />
    <option name="misc-const-correctness" hit="misc-const-correctness clang-tidy check" />
    <option name="check" hit="misc-definitions-in-headers clang-tidy check" />
    <option name="clang-tidy" hit="misc-definitions-in-headers clang-tidy check" />
    <option name="misc-definitions-in-headers" hit="misc-definitions-in-headers clang-tidy check" />
    <option name="check" hit="misc-header-include-cycle clang-tidy check" />
    <option name="clang-tidy" hit="misc-header-include-cycle clang-tidy check" />
    <option name="misc-header-include-cycle" hit="misc-header-include-cycle clang-tidy check" />
    <option name="check" hit="misc-include-cleaner clang-tidy check" />
    <option name="clang-tidy" hit="misc-include-cleaner clang-tidy check" />
    <option name="misc-include-cleaner" hit="misc-include-cleaner clang-tidy check" />
    <option name="check" hit="misc-misleading-bidirectional clang-tidy check" />
    <option name="clang-tidy" hit="misc-misleading-bidirectional clang-tidy check" />
    <option name="misc-misleading-bidirectional" hit="misc-misleading-bidirectional clang-tidy check" />
    <option name="check" hit="misc-misleading-identifier clang-tidy check" />
    <option name="clang-tidy" hit="misc-misleading-identifier clang-tidy check" />
    <option name="misc-misleading-identifier" hit="misc-misleading-identifier clang-tidy check" />
    <option name="check" hit="misc-misplaced-const clang-tidy check" />
    <option name="clang-tidy" hit="misc-misplaced-const clang-tidy check" />
    <option name="misc-misplaced-const" hit="misc-misplaced-const clang-tidy check" />
    <option name="check" hit="misc-new-delete-overloads clang-tidy check" />
    <option name="clang-tidy" hit="misc-new-delete-overloads clang-tidy check" />
    <option name="misc-new-delete-overloads" hit="misc-new-delete-overloads clang-tidy check" />
    <option name="check" hit="misc-no-recursion clang-tidy check" />
    <option name="clang-tidy" hit="misc-no-recursion clang-tidy check" />
    <option name="misc-no-recursion" hit="misc-no-recursion clang-tidy check" />
    <option name="check" hit="misc-non-copyable-objects clang-tidy check" />
    <option name="clang-tidy" hit="misc-non-copyable-objects clang-tidy check" />
    <option name="misc-non-copyable-objects" hit="misc-non-copyable-objects clang-tidy check" />
    <option name="check" hit="misc-non-private-member-variables-in-classes clang-tidy check" />
    <option name="clang-tidy" hit="misc-non-private-member-variables-in-classes clang-tidy check" />
    <option name="misc-non-private-member-variables-in-classes" hit="misc-non-private-member-variables-in-classes clang-tidy check" />
    <option name="check" hit="misc-redundant-expression clang-tidy check" />
    <option name="clang-tidy" hit="misc-redundant-expression clang-tidy check" />
    <option name="misc-redundant-expression" hit="misc-redundant-expression clang-tidy check" />
    <option name="check" hit="misc-static-assert clang-tidy check" />
    <option name="clang-tidy" hit="misc-static-assert clang-tidy check" />
    <option name="misc-static-assert" hit="misc-static-assert clang-tidy check" />
    <option name="check" hit="misc-throw-by-value-catch-by-reference clang-tidy check" />
    <option name="clang-tidy" hit="misc-throw-by-value-catch-by-reference clang-tidy check" />
    <option name="misc-throw-by-value-catch-by-reference" hit="misc-throw-by-value-catch-by-reference clang-tidy check" />
    <option name="check" hit="misc-unconventional-assign-operator clang-tidy check" />
    <option name="clang-tidy" hit="misc-unconventional-assign-operator clang-tidy check" />
    <option name="misc-unconventional-assign-operator" hit="misc-unconventional-assign-operator clang-tidy check" />
    <option name="check" hit="misc-uniqueptr-reset-release clang-tidy check" />
    <option name="clang-tidy" hit="misc-uniqueptr-reset-release clang-tidy check" />
    <option name="misc-uniqueptr-reset-release" hit="misc-uniqueptr-reset-release clang-tidy check" />
    <option name="check" hit="misc-unused-alias-decls clang-tidy check" />
    <option name="clang-tidy" hit="misc-unused-alias-decls clang-tidy check" />
    <option name="misc-unused-alias-decls" hit="misc-unused-alias-decls clang-tidy check" />
    <option name="check" hit="misc-unused-parameters clang-tidy check" />
    <option name="clang-tidy" hit="misc-unused-parameters clang-tidy check" />
    <option name="misc-unused-parameters" hit="misc-unused-parameters clang-tidy check" />
    <option name="check" hit="misc-unused-using-decls clang-tidy check" />
    <option name="clang-tidy" hit="misc-unused-using-decls clang-tidy check" />
    <option name="misc-unused-using-decls" hit="misc-unused-using-decls clang-tidy check" />
    <option name="check" hit="misc-use-anonymous-namespace clang-tidy check" />
    <option name="clang-tidy" hit="misc-use-anonymous-namespace clang-tidy check" />
    <option name="misc-use-anonymous-namespace" hit="misc-use-anonymous-namespace clang-tidy check" />
    <option name="clang" hit="misexpect clang diagnostic" />
    <option name="diagnostic" hit="misexpect clang diagnostic" />
    <option name="misexpect" hit="misexpect clang diagnostic" />
    <option name="clang" hit="misleading-indentation clang diagnostic" />
    <option name="diagnostic" hit="misleading-indentation clang diagnostic" />
    <option name="misleading-indentation" hit="misleading-indentation clang diagnostic" />
    <option name="clang" hit="mismatched-new-delete clang diagnostic" />
    <option name="diagnostic" hit="mismatched-new-delete clang diagnostic" />
    <option name="mismatched-new-delete" hit="mismatched-new-delete clang diagnostic" />
    <option name="clang" hit="mismatched-parameter-types clang diagnostic" />
    <option name="diagnostic" hit="mismatched-parameter-types clang diagnostic" />
    <option name="mismatched-parameter-types" hit="mismatched-parameter-types clang diagnostic" />
    <option name="clang" hit="mismatched-return-types clang diagnostic" />
    <option name="diagnostic" hit="mismatched-return-types clang diagnostic" />
    <option name="mismatched-return-types" hit="mismatched-return-types clang diagnostic" />
    <option name="clang" hit="mismatched-tags clang diagnostic" />
    <option name="diagnostic" hit="mismatched-tags clang diagnostic" />
    <option name="mismatched-tags" hit="mismatched-tags clang diagnostic" />
    <option name="clang" hit="missing-braces clang diagnostic" />
    <option name="diagnostic" hit="missing-braces clang diagnostic" />
    <option name="missing-braces" hit="missing-braces clang diagnostic" />
    <option name="clang" hit="missing-constinit clang diagnostic" />
    <option name="diagnostic" hit="missing-constinit clang diagnostic" />
    <option name="missing-constinit" hit="missing-constinit clang diagnostic" />
    <option name="clang" hit="missing-declarations clang diagnostic" />
    <option name="diagnostic" hit="missing-declarations clang diagnostic" />
    <option name="missing-declarations" hit="missing-declarations clang diagnostic" />
    <option name="clang" hit="missing-exception-spec clang diagnostic" />
    <option name="diagnostic" hit="missing-exception-spec clang diagnostic" />
    <option name="missing-exception-spec" hit="missing-exception-spec clang diagnostic" />
    <option name="clang" hit="missing-field-initializers clang diagnostic" />
    <option name="diagnostic" hit="missing-field-initializers clang diagnostic" />
    <option name="missing-field-initializers" hit="missing-field-initializers clang diagnostic" />
    <option name="clang" hit="missing-method-return-type clang diagnostic" />
    <option name="diagnostic" hit="missing-method-return-type clang diagnostic" />
    <option name="missing-method-return-type" hit="missing-method-return-type clang diagnostic" />
    <option name="clang" hit="missing-multilib clang diagnostic" />
    <option name="diagnostic" hit="missing-multilib clang diagnostic" />
    <option name="missing-multilib" hit="missing-multilib clang diagnostic" />
    <option name="clang" hit="missing-noescape clang diagnostic" />
    <option name="diagnostic" hit="missing-noescape clang diagnostic" />
    <option name="missing-noescape" hit="missing-noescape clang diagnostic" />
    <option name="clang" hit="missing-noreturn clang diagnostic" />
    <option name="diagnostic" hit="missing-noreturn clang diagnostic" />
    <option name="missing-noreturn" hit="missing-noreturn clang diagnostic" />
    <option name="clang" hit="missing-prototype-for-cc clang diagnostic" />
    <option name="diagnostic" hit="missing-prototype-for-cc clang diagnostic" />
    <option name="missing-prototype-for-cc" hit="missing-prototype-for-cc clang diagnostic" />
    <option name="clang" hit="missing-prototypes clang diagnostic" />
    <option name="diagnostic" hit="missing-prototypes clang diagnostic" />
    <option name="missing-prototypes" hit="missing-prototypes clang diagnostic" />
    <option name="clang" hit="missing-selector-name clang diagnostic" />
    <option name="diagnostic" hit="missing-selector-name clang diagnostic" />
    <option name="missing-selector-name" hit="missing-selector-name clang diagnostic" />
    <option name="clang" hit="missing-sysroot clang diagnostic" />
    <option name="diagnostic" hit="missing-sysroot clang diagnostic" />
    <option name="missing-sysroot" hit="missing-sysroot clang diagnostic" />
    <option name="clang" hit="missing-variable-declarations clang diagnostic" />
    <option name="diagnostic" hit="missing-variable-declarations clang diagnostic" />
    <option name="missing-variable-declarations" hit="missing-variable-declarations clang diagnostic" />
    <option name="clang" hit="misspelled-assumption clang diagnostic" />
    <option name="diagnostic" hit="misspelled-assumption clang diagnostic" />
    <option name="misspelled-assumption" hit="misspelled-assumption clang diagnostic" />
    <option name="check" hit="modernize-avoid-bind clang-tidy check" />
    <option name="clang-tidy" hit="modernize-avoid-bind clang-tidy check" />
    <option name="modernize-avoid-bind" hit="modernize-avoid-bind clang-tidy check" />
    <option name="check" hit="modernize-avoid-c-arrays clang-tidy check" />
    <option name="clang-tidy" hit="modernize-avoid-c-arrays clang-tidy check" />
    <option name="modernize-avoid-c-arrays" hit="modernize-avoid-c-arrays clang-tidy check" />
    <option name="check" hit="modernize-concat-nested-namespaces clang-tidy check" />
    <option name="clang-tidy" hit="modernize-concat-nested-namespaces clang-tidy check" />
    <option name="modernize-concat-nested-namespaces" hit="modernize-concat-nested-namespaces clang-tidy check" />
    <option name="check" hit="modernize-deprecated-headers clang-tidy check" />
    <option name="clang-tidy" hit="modernize-deprecated-headers clang-tidy check" />
    <option name="modernize-deprecated-headers" hit="modernize-deprecated-headers clang-tidy check" />
    <option name="check" hit="modernize-deprecated-ios-base-aliases clang-tidy check" />
    <option name="clang-tidy" hit="modernize-deprecated-ios-base-aliases clang-tidy check" />
    <option name="modernize-deprecated-ios-base-aliases" hit="modernize-deprecated-ios-base-aliases clang-tidy check" />
    <option name="check" hit="modernize-loop-convert clang-tidy check" />
    <option name="clang-tidy" hit="modernize-loop-convert clang-tidy check" />
    <option name="modernize-loop-convert" hit="modernize-loop-convert clang-tidy check" />
    <option name="check" hit="modernize-macro-to-enum clang-tidy check" />
    <option name="clang-tidy" hit="modernize-macro-to-enum clang-tidy check" />
    <option name="modernize-macro-to-enum" hit="modernize-macro-to-enum clang-tidy check" />
    <option name="check" hit="modernize-make-shared clang-tidy check" />
    <option name="clang-tidy" hit="modernize-make-shared clang-tidy check" />
    <option name="modernize-make-shared" hit="modernize-make-shared clang-tidy check" />
    <option name="check" hit="modernize-make-unique clang-tidy check" />
    <option name="clang-tidy" hit="modernize-make-unique clang-tidy check" />
    <option name="modernize-make-unique" hit="modernize-make-unique clang-tidy check" />
    <option name="check" hit="modernize-pass-by-value clang-tidy check" />
    <option name="clang-tidy" hit="modernize-pass-by-value clang-tidy check" />
    <option name="modernize-pass-by-value" hit="modernize-pass-by-value clang-tidy check" />
    <option name="check" hit="modernize-raw-string-literal clang-tidy check" />
    <option name="clang-tidy" hit="modernize-raw-string-literal clang-tidy check" />
    <option name="modernize-raw-string-literal" hit="modernize-raw-string-literal clang-tidy check" />
    <option name="check" hit="modernize-redundant-void-arg clang-tidy check" />
    <option name="clang-tidy" hit="modernize-redundant-void-arg clang-tidy check" />
    <option name="modernize-redundant-void-arg" hit="modernize-redundant-void-arg clang-tidy check" />
    <option name="check" hit="modernize-replace-auto-ptr clang-tidy check" />
    <option name="clang-tidy" hit="modernize-replace-auto-ptr clang-tidy check" />
    <option name="modernize-replace-auto-ptr" hit="modernize-replace-auto-ptr clang-tidy check" />
    <option name="check" hit="modernize-replace-disallow-copy-and-assign-macro clang-tidy check" />
    <option name="clang-tidy" hit="modernize-replace-disallow-copy-and-assign-macro clang-tidy check" />
    <option name="modernize-replace-disallow-copy-and-assign-macro" hit="modernize-replace-disallow-copy-and-assign-macro clang-tidy check" />
    <option name="check" hit="modernize-replace-random-shuffle clang-tidy check" />
    <option name="clang-tidy" hit="modernize-replace-random-shuffle clang-tidy check" />
    <option name="modernize-replace-random-shuffle" hit="modernize-replace-random-shuffle clang-tidy check" />
    <option name="check" hit="modernize-return-braced-init-list clang-tidy check" />
    <option name="clang-tidy" hit="modernize-return-braced-init-list clang-tidy check" />
    <option name="modernize-return-braced-init-list" hit="modernize-return-braced-init-list clang-tidy check" />
    <option name="check" hit="modernize-shrink-to-fit clang-tidy check" />
    <option name="clang-tidy" hit="modernize-shrink-to-fit clang-tidy check" />
    <option name="modernize-shrink-to-fit" hit="modernize-shrink-to-fit clang-tidy check" />
    <option name="check" hit="modernize-type-traits clang-tidy check" />
    <option name="clang-tidy" hit="modernize-type-traits clang-tidy check" />
    <option name="modernize-type-traits" hit="modernize-type-traits clang-tidy check" />
    <option name="check" hit="modernize-unary-static-assert clang-tidy check" />
    <option name="clang-tidy" hit="modernize-unary-static-assert clang-tidy check" />
    <option name="modernize-unary-static-assert" hit="modernize-unary-static-assert clang-tidy check" />
    <option name="check" hit="modernize-use-auto clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-auto clang-tidy check" />
    <option name="modernize-use-auto" hit="modernize-use-auto clang-tidy check" />
    <option name="check" hit="modernize-use-bool-literals clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-bool-literals clang-tidy check" />
    <option name="modernize-use-bool-literals" hit="modernize-use-bool-literals clang-tidy check" />
    <option name="check" hit="modernize-use-default-member-init clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-default-member-init clang-tidy check" />
    <option name="modernize-use-default-member-init" hit="modernize-use-default-member-init clang-tidy check" />
    <option name="check" hit="modernize-use-emplace clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-emplace clang-tidy check" />
    <option name="modernize-use-emplace" hit="modernize-use-emplace clang-tidy check" />
    <option name="check" hit="modernize-use-equals-default clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-equals-default clang-tidy check" />
    <option name="modernize-use-equals-default" hit="modernize-use-equals-default clang-tidy check" />
    <option name="check" hit="modernize-use-equals-delete clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-equals-delete clang-tidy check" />
    <option name="modernize-use-equals-delete" hit="modernize-use-equals-delete clang-tidy check" />
    <option name="check" hit="modernize-use-nodiscard clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-nodiscard clang-tidy check" />
    <option name="modernize-use-nodiscard" hit="modernize-use-nodiscard clang-tidy check" />
    <option name="check" hit="modernize-use-noexcept clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-noexcept clang-tidy check" />
    <option name="modernize-use-noexcept" hit="modernize-use-noexcept clang-tidy check" />
    <option name="check" hit="modernize-use-nullptr clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-nullptr clang-tidy check" />
    <option name="modernize-use-nullptr" hit="modernize-use-nullptr clang-tidy check" />
    <option name="check" hit="modernize-use-override clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-override clang-tidy check" />
    <option name="modernize-use-override" hit="modernize-use-override clang-tidy check" />
    <option name="check" hit="modernize-use-std-print clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-std-print clang-tidy check" />
    <option name="modernize-use-std-print" hit="modernize-use-std-print clang-tidy check" />
    <option name="check" hit="modernize-use-trailing-return-type clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-trailing-return-type clang-tidy check" />
    <option name="modernize-use-trailing-return-type" hit="modernize-use-trailing-return-type clang-tidy check" />
    <option name="check" hit="modernize-use-transparent-functors clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-transparent-functors clang-tidy check" />
    <option name="modernize-use-transparent-functors" hit="modernize-use-transparent-functors clang-tidy check" />
    <option name="check" hit="modernize-use-uncaught-exceptions clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-uncaught-exceptions clang-tidy check" />
    <option name="modernize-use-uncaught-exceptions" hit="modernize-use-uncaught-exceptions clang-tidy check" />
    <option name="check" hit="modernize-use-using clang-tidy check" />
    <option name="clang-tidy" hit="modernize-use-using clang-tidy check" />
    <option name="modernize-use-using" hit="modernize-use-using clang-tidy check" />
    <option name="clang" hit="module-conflict clang diagnostic" />
    <option name="diagnostic" hit="module-conflict clang diagnostic" />
    <option name="module-conflict" hit="module-conflict clang diagnostic" />
    <option name="clang" hit="module-file-config-mismatch clang diagnostic" />
    <option name="diagnostic" hit="module-file-config-mismatch clang diagnostic" />
    <option name="module-file-config-mismatch" hit="module-file-config-mismatch clang diagnostic" />
    <option name="clang" hit="module-file-extension clang diagnostic" />
    <option name="diagnostic" hit="module-file-extension clang diagnostic" />
    <option name="module-file-extension" hit="module-file-extension clang diagnostic" />
    <option name="clang" hit="module-import-in-extern-c clang diagnostic" />
    <option name="diagnostic" hit="module-import-in-extern-c clang diagnostic" />
    <option name="module-import-in-extern-c" hit="module-import-in-extern-c clang diagnostic" />
    <option name="clang" hit="modules-ambiguous-internal-linkage clang diagnostic" />
    <option name="diagnostic" hit="modules-ambiguous-internal-linkage clang diagnostic" />
    <option name="modules-ambiguous-internal-linkage" hit="modules-ambiguous-internal-linkage clang diagnostic" />
    <option name="clang" hit="modules-import-nested-redundant clang diagnostic" />
    <option name="diagnostic" hit="modules-import-nested-redundant clang diagnostic" />
    <option name="modules-import-nested-redundant" hit="modules-import-nested-redundant clang diagnostic" />
    <option name="check" hit="mpi-buffer-deref clang-tidy check" />
    <option name="clang-tidy" hit="mpi-buffer-deref clang-tidy check" />
    <option name="mpi-buffer-deref" hit="mpi-buffer-deref clang-tidy check" />
    <option name="check" hit="mpi-type-mismatch clang-tidy check" />
    <option name="clang-tidy" hit="mpi-type-mismatch clang-tidy check" />
    <option name="mpi-type-mismatch" hit="mpi-type-mismatch clang-tidy check" />
    <option name="clang" hit="msvc-not-found clang diagnostic" />
    <option name="diagnostic" hit="msvc-not-found clang diagnostic" />
    <option name="msvc-not-found" hit="msvc-not-found clang diagnostic" />
    <option name="clang" hit="multi-gpu clang diagnostic" />
    <option name="diagnostic" hit="multi-gpu clang diagnostic" />
    <option name="multi-gpu" hit="multi-gpu clang diagnostic" />
    <option name="clang" hit="multichar clang diagnostic" />
    <option name="diagnostic" hit="multichar clang diagnostic" />
    <option name="multichar" hit="multichar clang diagnostic" />
    <option name="clang" hit="multiple-move-vbase clang diagnostic" />
    <option name="diagnostic" hit="multiple-move-vbase clang diagnostic" />
    <option name="multiple-move-vbase" hit="multiple-move-vbase clang diagnostic" />
    <option name="clang" hit="nested-anon-types clang diagnostic" />
    <option name="diagnostic" hit="nested-anon-types clang diagnostic" />
    <option name="nested-anon-types" hit="nested-anon-types clang diagnostic" />
    <option name="clang" hit="new-returns-null clang diagnostic" />
    <option name="diagnostic" hit="new-returns-null clang diagnostic" />
    <option name="new-returns-null" hit="new-returns-null clang diagnostic" />
    <option name="clang" hit="newline-eof clang diagnostic" />
    <option name="diagnostic" hit="newline-eof clang diagnostic" />
    <option name="newline-eof" hit="newline-eof clang diagnostic" />
    <option name="clang" hit="noderef clang diagnostic" />
    <option name="diagnostic" hit="noderef clang diagnostic" />
    <option name="noderef" hit="noderef clang diagnostic" />
    <option name="clang" hit="non-c-typedef-for-linkage clang diagnostic" />
    <option name="diagnostic" hit="non-c-typedef-for-linkage clang diagnostic" />
    <option name="non-c-typedef-for-linkage" hit="non-c-typedef-for-linkage clang diagnostic" />
    <option name="clang" hit="non-literal-null-conversion clang diagnostic" />
    <option name="diagnostic" hit="non-literal-null-conversion clang diagnostic" />
    <option name="non-literal-null-conversion" hit="non-literal-null-conversion clang diagnostic" />
    <option name="clang" hit="non-modular-include-in-framework-module clang diagnostic" />
    <option name="diagnostic" hit="non-modular-include-in-framework-module clang diagnostic" />
    <option name="non-modular-include-in-framework-module" hit="non-modular-include-in-framework-module clang diagnostic" />
    <option name="clang" hit="non-modular-include-in-module clang diagnostic" />
    <option name="diagnostic" hit="non-modular-include-in-module clang diagnostic" />
    <option name="non-modular-include-in-module" hit="non-modular-include-in-module clang diagnostic" />
    <option name="clang" hit="non-pod-varargs clang diagnostic" />
    <option name="diagnostic" hit="non-pod-varargs clang diagnostic" />
    <option name="non-pod-varargs" hit="non-pod-varargs clang diagnostic" />
    <option name="clang" hit="non-power-of-two-alignment clang diagnostic" />
    <option name="diagnostic" hit="non-power-of-two-alignment clang diagnostic" />
    <option name="non-power-of-two-alignment" hit="non-power-of-two-alignment clang diagnostic" />
    <option name="clang" hit="non-virtual-dtor clang diagnostic" />
    <option name="diagnostic" hit="non-virtual-dtor clang diagnostic" />
    <option name="non-virtual-dtor" hit="non-virtual-dtor clang diagnostic" />
    <option name="clang" hit="nonnull clang diagnostic" />
    <option name="diagnostic" hit="nonnull clang diagnostic" />
    <option name="nonnull" hit="nonnull clang diagnostic" />
    <option name="clang" hit="nonportable-include-path clang diagnostic" />
    <option name="diagnostic" hit="nonportable-include-path clang diagnostic" />
    <option name="nonportable-include-path" hit="nonportable-include-path clang diagnostic" />
    <option name="clang" hit="nonportable-system-include-path clang diagnostic" />
    <option name="diagnostic" hit="nonportable-system-include-path clang diagnostic" />
    <option name="nonportable-system-include-path" hit="nonportable-system-include-path clang diagnostic" />
    <option name="clang" hit="nonportable-vector-initialization clang diagnostic" />
    <option name="diagnostic" hit="nonportable-vector-initialization clang diagnostic" />
    <option name="nonportable-vector-initialization" hit="nonportable-vector-initialization clang diagnostic" />
    <option name="clang" hit="nontrivial-memaccess clang diagnostic" />
    <option name="diagnostic" hit="nontrivial-memaccess clang diagnostic" />
    <option name="nontrivial-memaccess" hit="nontrivial-memaccess clang diagnostic" />
    <option name="clang" hit="nsconsumed-mismatch clang diagnostic" />
    <option name="diagnostic" hit="nsconsumed-mismatch clang diagnostic" />
    <option name="nsconsumed-mismatch" hit="nsconsumed-mismatch clang diagnostic" />
    <option name="clang" hit="nsreturns-mismatch clang diagnostic" />
    <option name="diagnostic" hit="nsreturns-mismatch clang diagnostic" />
    <option name="nsreturns-mismatch" hit="nsreturns-mismatch clang diagnostic" />
    <option name="clang" hit="null-arithmetic clang diagnostic" />
    <option name="diagnostic" hit="null-arithmetic clang diagnostic" />
    <option name="null-arithmetic" hit="null-arithmetic clang diagnostic" />
    <option name="clang" hit="null-character clang diagnostic" />
    <option name="diagnostic" hit="null-character clang diagnostic" />
    <option name="null-character" hit="null-character clang diagnostic" />
    <option name="clang" hit="null-conversion clang diagnostic" />
    <option name="diagnostic" hit="null-conversion clang diagnostic" />
    <option name="null-conversion" hit="null-conversion clang diagnostic" />
    <option name="clang" hit="null-dereference clang diagnostic" />
    <option name="diagnostic" hit="null-dereference clang diagnostic" />
    <option name="null-dereference" hit="null-dereference clang diagnostic" />
    <option name="clang" hit="null-pointer-arithmetic clang diagnostic" />
    <option name="diagnostic" hit="null-pointer-arithmetic clang diagnostic" />
    <option name="null-pointer-arithmetic" hit="null-pointer-arithmetic clang diagnostic" />
    <option name="clang" hit="null-pointer-subtraction clang diagnostic" />
    <option name="diagnostic" hit="null-pointer-subtraction clang diagnostic" />
    <option name="null-pointer-subtraction" hit="null-pointer-subtraction clang diagnostic" />
    <option name="clang" hit="nullability clang diagnostic" />
    <option name="diagnostic" hit="nullability clang diagnostic" />
    <option name="nullability" hit="nullability clang diagnostic" />
    <option name="clang" hit="nullability-completeness clang diagnostic" />
    <option name="diagnostic" hit="nullability-completeness clang diagnostic" />
    <option name="nullability-completeness" hit="nullability-completeness clang diagnostic" />
    <option name="clang" hit="nullability-completeness-on-arrays clang diagnostic" />
    <option name="diagnostic" hit="nullability-completeness-on-arrays clang diagnostic" />
    <option name="nullability-completeness-on-arrays" hit="nullability-completeness-on-arrays clang diagnostic" />
    <option name="clang" hit="nullability-declspec clang diagnostic" />
    <option name="diagnostic" hit="nullability-declspec clang diagnostic" />
    <option name="nullability-declspec" hit="nullability-declspec clang diagnostic" />
    <option name="clang" hit="nullability-extension clang diagnostic" />
    <option name="diagnostic" hit="nullability-extension clang diagnostic" />
    <option name="nullability-extension" hit="nullability-extension clang diagnostic" />
    <option name="clang" hit="nullability-inferred-on-nested-type clang diagnostic" />
    <option name="diagnostic" hit="nullability-inferred-on-nested-type clang diagnostic" />
    <option name="nullability-inferred-on-nested-type" hit="nullability-inferred-on-nested-type clang diagnostic" />
    <option name="analyzer" hit="nullability.NullPassedToNonnull clang static analyzer check" />
    <option name="check" hit="nullability.NullPassedToNonnull clang static analyzer check" />
    <option name="clang" hit="nullability.NullPassedToNonnull clang static analyzer check" />
    <option name="nullability" hit="nullability.NullPassedToNonnull clang static analyzer check" />
    <option name="nullpassedtononnull" hit="nullability.NullPassedToNonnull clang static analyzer check" />
    <option name="static" hit="nullability.NullPassedToNonnull clang static analyzer check" />
    <option name="analyzer" hit="nullability.NullReturnedFromNonnull clang static analyzer check" />
    <option name="check" hit="nullability.NullReturnedFromNonnull clang static analyzer check" />
    <option name="clang" hit="nullability.NullReturnedFromNonnull clang static analyzer check" />
    <option name="nullability" hit="nullability.NullReturnedFromNonnull clang static analyzer check" />
    <option name="nullreturnedfromnonnull" hit="nullability.NullReturnedFromNonnull clang static analyzer check" />
    <option name="static" hit="nullability.NullReturnedFromNonnull clang static analyzer check" />
    <option name="analyzer" hit="nullability.NullabilityBase clang static analyzer check" />
    <option name="check" hit="nullability.NullabilityBase clang static analyzer check" />
    <option name="clang" hit="nullability.NullabilityBase clang static analyzer check" />
    <option name="nullability" hit="nullability.NullabilityBase clang static analyzer check" />
    <option name="nullabilitybase" hit="nullability.NullabilityBase clang static analyzer check" />
    <option name="static" hit="nullability.NullabilityBase clang static analyzer check" />
    <option name="analyzer" hit="nullability.NullableDereferenced clang static analyzer check" />
    <option name="check" hit="nullability.NullableDereferenced clang static analyzer check" />
    <option name="clang" hit="nullability.NullableDereferenced clang static analyzer check" />
    <option name="nullability" hit="nullability.NullableDereferenced clang static analyzer check" />
    <option name="nullabledereferenced" hit="nullability.NullableDereferenced clang static analyzer check" />
    <option name="static" hit="nullability.NullableDereferenced clang static analyzer check" />
    <option name="analyzer" hit="nullability.NullablePassedToNonnull clang static analyzer check" />
    <option name="check" hit="nullability.NullablePassedToNonnull clang static analyzer check" />
    <option name="clang" hit="nullability.NullablePassedToNonnull clang static analyzer check" />
    <option name="nullability" hit="nullability.NullablePassedToNonnull clang static analyzer check" />
    <option name="nullablepassedtononnull" hit="nullability.NullablePassedToNonnull clang static analyzer check" />
    <option name="static" hit="nullability.NullablePassedToNonnull clang static analyzer check" />
    <option name="analyzer" hit="nullability.NullableReturnedFromNonnull clang static analyzer check" />
    <option name="check" hit="nullability.NullableReturnedFromNonnull clang static analyzer check" />
    <option name="clang" hit="nullability.NullableReturnedFromNonnull clang static analyzer check" />
    <option name="nullability" hit="nullability.NullableReturnedFromNonnull clang static analyzer check" />
    <option name="nullablereturnedfromnonnull" hit="nullability.NullableReturnedFromNonnull clang static analyzer check" />
    <option name="static" hit="nullability.NullableReturnedFromNonnull clang static analyzer check" />
    <option name="clang" hit="nullable-to-nonnull-conversion clang diagnostic" />
    <option name="diagnostic" hit="nullable-to-nonnull-conversion clang diagnostic" />
    <option name="nullable-to-nonnull-conversion" hit="nullable-to-nonnull-conversion clang diagnostic" />
    <option name="check" hit="objc-assert-equals clang-tidy check" />
    <option name="clang-tidy" hit="objc-assert-equals clang-tidy check" />
    <option name="objc-assert-equals" hit="objc-assert-equals clang-tidy check" />
    <option name="check" hit="objc-avoid-nserror-init clang-tidy check" />
    <option name="clang-tidy" hit="objc-avoid-nserror-init clang-tidy check" />
    <option name="objc-avoid-nserror-init" hit="objc-avoid-nserror-init clang-tidy check" />
    <option name="check" hit="objc-dealloc-in-category clang-tidy check" />
    <option name="clang-tidy" hit="objc-dealloc-in-category clang-tidy check" />
    <option name="objc-dealloc-in-category" hit="objc-dealloc-in-category clang-tidy check" />
    <option name="check" hit="objc-forbidden-subclassing clang-tidy check" />
    <option name="clang-tidy" hit="objc-forbidden-subclassing clang-tidy check" />
    <option name="objc-forbidden-subclassing" hit="objc-forbidden-subclassing clang-tidy check" />
    <option name="check" hit="objc-missing-hash clang-tidy check" />
    <option name="clang-tidy" hit="objc-missing-hash clang-tidy check" />
    <option name="objc-missing-hash" hit="objc-missing-hash clang-tidy check" />
    <option name="check" hit="objc-nsdate-formatter clang-tidy check" />
    <option name="clang-tidy" hit="objc-nsdate-formatter clang-tidy check" />
    <option name="objc-nsdate-formatter" hit="objc-nsdate-formatter clang-tidy check" />
    <option name="check" hit="objc-nsinvocation-argument-lifetime clang-tidy check" />
    <option name="clang-tidy" hit="objc-nsinvocation-argument-lifetime clang-tidy check" />
    <option name="objc-nsinvocation-argument-lifetime" hit="objc-nsinvocation-argument-lifetime clang-tidy check" />
    <option name="check" hit="objc-property-declaration clang-tidy check" />
    <option name="clang-tidy" hit="objc-property-declaration clang-tidy check" />
    <option name="objc-property-declaration" hit="objc-property-declaration clang-tidy check" />
    <option name="check" hit="objc-super-self clang-tidy check" />
    <option name="clang-tidy" hit="objc-super-self clang-tidy check" />
    <option name="objc-super-self" hit="objc-super-self clang-tidy check" />
    <option name="clang" hit="odr clang diagnostic" />
    <option name="diagnostic" hit="odr clang diagnostic" />
    <option name="odr" hit="odr clang diagnostic" />
    <option name="clang" hit="old-style-cast clang diagnostic" />
    <option name="diagnostic" hit="old-style-cast clang diagnostic" />
    <option name="old-style-cast" hit="old-style-cast clang diagnostic" />
    <option name="clang" hit="opencl-unsupported-rgba clang diagnostic" />
    <option name="diagnostic" hit="opencl-unsupported-rgba clang diagnostic" />
    <option name="opencl-unsupported-rgba" hit="opencl-unsupported-rgba clang diagnostic" />
    <option name="clang" hit="openmp-51-extensions clang diagnostic" />
    <option name="diagnostic" hit="openmp-51-extensions clang diagnostic" />
    <option name="openmp-51-extensions" hit="openmp-51-extensions clang diagnostic" />
    <option name="clang" hit="openmp-clauses clang diagnostic" />
    <option name="diagnostic" hit="openmp-clauses clang diagnostic" />
    <option name="openmp-clauses" hit="openmp-clauses clang diagnostic" />
    <option name="check" hit="openmp-exception-escape clang-tidy check" />
    <option name="clang-tidy" hit="openmp-exception-escape clang-tidy check" />
    <option name="openmp-exception-escape" hit="openmp-exception-escape clang-tidy check" />
    <option name="clang" hit="openmp-loop-form clang diagnostic" />
    <option name="diagnostic" hit="openmp-loop-form clang diagnostic" />
    <option name="openmp-loop-form" hit="openmp-loop-form clang diagnostic" />
    <option name="clang" hit="openmp-mapping clang diagnostic" />
    <option name="diagnostic" hit="openmp-mapping clang diagnostic" />
    <option name="openmp-mapping" hit="openmp-mapping clang diagnostic" />
    <option name="clang" hit="openmp-target clang diagnostic" />
    <option name="diagnostic" hit="openmp-target clang diagnostic" />
    <option name="openmp-target" hit="openmp-target clang diagnostic" />
    <option name="check" hit="openmp-use-default-none clang-tidy check" />
    <option name="clang-tidy" hit="openmp-use-default-none clang-tidy check" />
    <option name="openmp-use-default-none" hit="openmp-use-default-none clang-tidy check" />
    <option name="analyzer" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="check" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="clang" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="cplusplus" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="optin" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="static" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="uninitializedobject" hit="optin.cplusplus.UninitializedObject clang static analyzer check" />
    <option name="analyzer" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="check" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="clang" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="cplusplus" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="optin" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="static" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="virtualcall" hit="optin.cplusplus.VirtualCall clang static analyzer check" />
    <option name="analyzer" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="check" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="clang" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="mpi" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="mpi-checker" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="optin" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="static" hit="optin.mpi.MPI-Checker clang static analyzer check" />
    <option name="analyzer" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="check" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="clang" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="optin" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="osobjectcstylecast" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="osx" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="static" hit="optin.osx.OSObjectCStyleCast clang static analyzer check" />
    <option name="analyzer" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="check" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="clang" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="cocoa" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="emptylocalizationcontextchecker" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="localizability" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="optin" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="osx" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="static" hit="optin.osx.cocoa.localizability.EmptyLocalizationContextChecker clang static analyzer check" />
    <option name="analyzer" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="check" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="clang" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="cocoa" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="localizability" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="nonlocalizedstringchecker" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="optin" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="osx" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="static" hit="optin.osx.cocoa.localizability.NonLocalizedStringChecker clang static analyzer check" />
    <option name="analyzer" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="check" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="clang" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="gcdantipattern" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="optin" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="performance" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="static" hit="optin.performance.GCDAntipattern clang static analyzer check" />
    <option name="analyzer" hit="optin.performance.Padding clang static analyzer check" />
    <option name="check" hit="optin.performance.Padding clang static analyzer check" />
    <option name="clang" hit="optin.performance.Padding clang static analyzer check" />
    <option name="optin" hit="optin.performance.Padding clang static analyzer check" />
    <option name="padding" hit="optin.performance.Padding clang static analyzer check" />
    <option name="performance" hit="optin.performance.Padding clang static analyzer check" />
    <option name="static" hit="optin.performance.Padding clang static analyzer check" />
    <option name="analyzer" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="check" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="clang" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="optin" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="portability" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="static" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="unixapi" hit="optin.portability.UnixAPI clang static analyzer check" />
    <option name="clang" hit="option-ignored clang diagnostic" />
    <option name="diagnostic" hit="option-ignored clang diagnostic" />
    <option name="option-ignored" hit="option-ignored clang diagnostic" />
    <option name="clang" hit="ordered-compare-function-pointers clang diagnostic" />
    <option name="diagnostic" hit="ordered-compare-function-pointers clang diagnostic" />
    <option name="ordered-compare-function-pointers" hit="ordered-compare-function-pointers clang diagnostic" />
    <option name="analyzer" hit="osx.API clang static analyzer check" />
    <option name="api" hit="osx.API clang static analyzer check" />
    <option name="check" hit="osx.API clang static analyzer check" />
    <option name="clang" hit="osx.API clang static analyzer check" />
    <option name="osx" hit="osx.API clang static analyzer check" />
    <option name="static" hit="osx.API clang static analyzer check" />
    <option name="analyzer" hit="osx.MIG clang static analyzer check" />
    <option name="check" hit="osx.MIG clang static analyzer check" />
    <option name="clang" hit="osx.MIG clang static analyzer check" />
    <option name="mig" hit="osx.MIG clang static analyzer check" />
    <option name="osx" hit="osx.MIG clang static analyzer check" />
    <option name="static" hit="osx.MIG clang static analyzer check" />
    <option name="analyzer" hit="osx.NSOrCFErrorDerefChecker clang static analyzer check" />
    <option name="check" hit="osx.NSOrCFErrorDerefChecker clang static analyzer check" />
    <option name="clang" hit="osx.NSOrCFErrorDerefChecker clang static analyzer check" />
    <option name="nsorcferrorderefchecker" hit="osx.NSOrCFErrorDerefChecker clang static analyzer check" />
    <option name="osx" hit="osx.NSOrCFErrorDerefChecker clang static analyzer check" />
    <option name="static" hit="osx.NSOrCFErrorDerefChecker clang static analyzer check" />
    <option name="analyzer" hit="osx.NumberObjectConversion clang static analyzer check" />
    <option name="check" hit="osx.NumberObjectConversion clang static analyzer check" />
    <option name="clang" hit="osx.NumberObjectConversion clang static analyzer check" />
    <option name="numberobjectconversion" hit="osx.NumberObjectConversion clang static analyzer check" />
    <option name="osx" hit="osx.NumberObjectConversion clang static analyzer check" />
    <option name="static" hit="osx.NumberObjectConversion clang static analyzer check" />
    <option name="analyzer" hit="osx.OSObjectRetainCount clang static analyzer check" />
    <option name="check" hit="osx.OSObjectRetainCount clang static analyzer check" />
    <option name="clang" hit="osx.OSObjectRetainCount clang static analyzer check" />
    <option name="osobjectretaincount" hit="osx.OSObjectRetainCount clang static analyzer check" />
    <option name="osx" hit="osx.OSObjectRetainCount clang static analyzer check" />
    <option name="static" hit="osx.OSObjectRetainCount clang static analyzer check" />
    <option name="analyzer" hit="osx.ObjCProperty clang static analyzer check" />
    <option name="check" hit="osx.ObjCProperty clang static analyzer check" />
    <option name="clang" hit="osx.ObjCProperty clang static analyzer check" />
    <option name="objcproperty" hit="osx.ObjCProperty clang static analyzer check" />
    <option name="osx" hit="osx.ObjCProperty clang static analyzer check" />
    <option name="static" hit="osx.ObjCProperty clang static analyzer check" />
    <option name="analyzer" hit="osx.SecKeychainAPI clang static analyzer check" />
    <option name="check" hit="osx.SecKeychainAPI clang static analyzer check" />
    <option name="clang" hit="osx.SecKeychainAPI clang static analyzer check" />
    <option name="osx" hit="osx.SecKeychainAPI clang static analyzer check" />
    <option name="seckeychainapi" hit="osx.SecKeychainAPI clang static analyzer check" />
    <option name="static" hit="osx.SecKeychainAPI clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="atsync" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="check" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="static" hit="osx.cocoa.AtSync clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="autoreleasewrite" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="check" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="static" hit="osx.cocoa.AutoreleaseWrite clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="check" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="classrelease" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="static" hit="osx.cocoa.ClassRelease clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="check" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="dealloc" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="static" hit="osx.cocoa.Dealloc clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="check" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="incompatiblemethodtypes" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="static" hit="osx.cocoa.IncompatibleMethodTypes clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="check" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="loops" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="static" hit="osx.cocoa.Loops clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="check" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="missingsupercall" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="static" hit="osx.cocoa.MissingSuperCall clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="check" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="nsautoreleasepool" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="static" hit="osx.cocoa.NSAutoreleasePool clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="check" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="nserror" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="static" hit="osx.cocoa.NSError clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="check" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="nilarg" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="static" hit="osx.cocoa.NilArg clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="check" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="nonnilreturnvalue" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="static" hit="osx.cocoa.NonNilReturnValue clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="check" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="objcgenerics" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="static" hit="osx.cocoa.ObjCGenerics clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="check" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="retaincount" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="static" hit="osx.cocoa.RetainCount clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="check" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="retaincountbase" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="static" hit="osx.cocoa.RetainCountBase clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="check" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="runloopautoreleaseleak" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="static" hit="osx.cocoa.RunLoopAutoreleaseLeak clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="check" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="selfinit" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="static" hit="osx.cocoa.SelfInit clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="check" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="static" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="superdealloc" hit="osx.cocoa.SuperDealloc clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="check" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="static" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="unusedivars" hit="osx.cocoa.UnusedIvars clang static analyzer check" />
    <option name="analyzer" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="check" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="clang" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="cocoa" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="osx" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="static" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="variadicmethodtypes" hit="osx.cocoa.VariadicMethodTypes clang static analyzer check" />
    <option name="analyzer" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="cferror" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="check" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="clang" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="corefoundation" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="osx" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="static" hit="osx.coreFoundation.CFError clang static analyzer check" />
    <option name="analyzer" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="cfnumber" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="check" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="clang" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="corefoundation" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="osx" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="static" hit="osx.coreFoundation.CFNumber clang static analyzer check" />
    <option name="analyzer" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="cfretainrelease" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="check" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="clang" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="corefoundation" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="osx" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="static" hit="osx.coreFoundation.CFRetainRelease clang static analyzer check" />
    <option name="analyzer" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="check" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="clang" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="containers" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="corefoundation" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="osx" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="outofbounds" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="static" hit="osx.coreFoundation.containers.OutOfBounds clang static analyzer check" />
    <option name="analyzer" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="check" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="clang" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="containers" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="corefoundation" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="osx" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="pointersizedvalues" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="static" hit="osx.coreFoundation.containers.PointerSizedValues clang static analyzer check" />
    <option name="clang" hit="out-of-line-declaration clang diagnostic" />
    <option name="diagnostic" hit="out-of-line-declaration clang diagnostic" />
    <option name="out-of-line-declaration" hit="out-of-line-declaration clang diagnostic" />
    <option name="clang" hit="out-of-scope-function clang diagnostic" />
    <option name="diagnostic" hit="out-of-scope-function clang diagnostic" />
    <option name="out-of-scope-function" hit="out-of-scope-function clang diagnostic" />
    <option name="clang" hit="over-aligned clang diagnostic" />
    <option name="diagnostic" hit="over-aligned clang diagnostic" />
    <option name="over-aligned" hit="over-aligned clang diagnostic" />
    <option name="clang" hit="overlength-strings clang diagnostic" />
    <option name="diagnostic" hit="overlength-strings clang diagnostic" />
    <option name="overlength-strings" hit="overlength-strings clang diagnostic" />
    <option name="clang" hit="overloaded-shift-op-parentheses clang diagnostic" />
    <option name="diagnostic" hit="overloaded-shift-op-parentheses clang diagnostic" />
    <option name="overloaded-shift-op-parentheses" hit="overloaded-shift-op-parentheses clang diagnostic" />
    <option name="clang" hit="overloaded-virtual clang diagnostic" />
    <option name="diagnostic" hit="overloaded-virtual clang diagnostic" />
    <option name="overloaded-virtual" hit="overloaded-virtual clang diagnostic" />
    <option name="clang" hit="override-init clang diagnostic" />
    <option name="diagnostic" hit="override-init clang diagnostic" />
    <option name="override-init" hit="override-init clang diagnostic" />
    <option name="clang" hit="override-module clang diagnostic" />
    <option name="diagnostic" hit="override-module clang diagnostic" />
    <option name="override-module" hit="override-module clang diagnostic" />
    <option name="clang" hit="overriding-method-mismatch clang diagnostic" />
    <option name="diagnostic" hit="overriding-method-mismatch clang diagnostic" />
    <option name="overriding-method-mismatch" hit="overriding-method-mismatch clang diagnostic" />
    <option name="clang" hit="overriding-t-option clang diagnostic" />
    <option name="diagnostic" hit="overriding-t-option clang diagnostic" />
    <option name="overriding-t-option" hit="overriding-t-option clang diagnostic" />
    <option name="clang" hit="packed clang diagnostic" />
    <option name="diagnostic" hit="packed clang diagnostic" />
    <option name="packed" hit="packed clang diagnostic" />
    <option name="clang" hit="packed-non-pod clang diagnostic" />
    <option name="diagnostic" hit="packed-non-pod clang diagnostic" />
    <option name="packed-non-pod" hit="packed-non-pod clang diagnostic" />
    <option name="clang" hit="padded clang diagnostic" />
    <option name="diagnostic" hit="padded clang diagnostic" />
    <option name="padded" hit="padded clang diagnostic" />
    <option name="clang" hit="parentheses clang diagnostic" />
    <option name="diagnostic" hit="parentheses clang diagnostic" />
    <option name="parentheses" hit="parentheses clang diagnostic" />
    <option name="clang" hit="parentheses-equality clang diagnostic" />
    <option name="diagnostic" hit="parentheses-equality clang diagnostic" />
    <option name="parentheses-equality" hit="parentheses-equality clang diagnostic" />
    <option name="clang" hit="pass-failed clang diagnostic" />
    <option name="diagnostic" hit="pass-failed clang diagnostic" />
    <option name="pass-failed" hit="pass-failed clang diagnostic" />
    <option name="clang" hit="pch-date-time clang diagnostic" />
    <option name="diagnostic" hit="pch-date-time clang diagnostic" />
    <option name="pch-date-time" hit="pch-date-time clang diagnostic" />
    <option name="clang" hit="pedantic clang diagnostic" />
    <option name="diagnostic" hit="pedantic clang diagnostic" />
    <option name="pedantic" hit="pedantic clang diagnostic" />
    <option name="clang" hit="pedantic-core-features clang diagnostic" />
    <option name="diagnostic" hit="pedantic-core-features clang diagnostic" />
    <option name="pedantic-core-features" hit="pedantic-core-features clang diagnostic" />
    <option name="clang" hit="pedantic-macros clang diagnostic" />
    <option name="diagnostic" hit="pedantic-macros clang diagnostic" />
    <option name="pedantic-macros" hit="pedantic-macros clang diagnostic" />
    <option name="check" hit="performance-avoid-endl clang-tidy check" />
    <option name="clang-tidy" hit="performance-avoid-endl clang-tidy check" />
    <option name="performance-avoid-endl" hit="performance-avoid-endl clang-tidy check" />
    <option name="check" hit="performance-faster-string-find clang-tidy check" />
    <option name="clang-tidy" hit="performance-faster-string-find clang-tidy check" />
    <option name="performance-faster-string-find" hit="performance-faster-string-find clang-tidy check" />
    <option name="check" hit="performance-for-range-copy clang-tidy check" />
    <option name="clang-tidy" hit="performance-for-range-copy clang-tidy check" />
    <option name="performance-for-range-copy" hit="performance-for-range-copy clang-tidy check" />
    <option name="check" hit="performance-implicit-conversion-in-loop clang-tidy check" />
    <option name="clang-tidy" hit="performance-implicit-conversion-in-loop clang-tidy check" />
    <option name="performance-implicit-conversion-in-loop" hit="performance-implicit-conversion-in-loop clang-tidy check" />
    <option name="check" hit="performance-inefficient-algorithm clang-tidy check" />
    <option name="clang-tidy" hit="performance-inefficient-algorithm clang-tidy check" />
    <option name="performance-inefficient-algorithm" hit="performance-inefficient-algorithm clang-tidy check" />
    <option name="check" hit="performance-inefficient-string-concatenation clang-tidy check" />
    <option name="clang-tidy" hit="performance-inefficient-string-concatenation clang-tidy check" />
    <option name="performance-inefficient-string-concatenation" hit="performance-inefficient-string-concatenation clang-tidy check" />
    <option name="check" hit="performance-inefficient-vector-operation clang-tidy check" />
    <option name="clang-tidy" hit="performance-inefficient-vector-operation clang-tidy check" />
    <option name="performance-inefficient-vector-operation" hit="performance-inefficient-vector-operation clang-tidy check" />
    <option name="check" hit="performance-move-const-arg clang-tidy check" />
    <option name="clang-tidy" hit="performance-move-const-arg clang-tidy check" />
    <option name="performance-move-const-arg" hit="performance-move-const-arg clang-tidy check" />
    <option name="check" hit="performance-move-constructor-init clang-tidy check" />
    <option name="clang-tidy" hit="performance-move-constructor-init clang-tidy check" />
    <option name="performance-move-constructor-init" hit="performance-move-constructor-init clang-tidy check" />
    <option name="check" hit="performance-no-automatic-move clang-tidy check" />
    <option name="clang-tidy" hit="performance-no-automatic-move clang-tidy check" />
    <option name="performance-no-automatic-move" hit="performance-no-automatic-move clang-tidy check" />
    <option name="check" hit="performance-no-int-to-ptr clang-tidy check" />
    <option name="clang-tidy" hit="performance-no-int-to-ptr clang-tidy check" />
    <option name="performance-no-int-to-ptr" hit="performance-no-int-to-ptr clang-tidy check" />
    <option name="check" hit="performance-noexcept-destructor clang-tidy check" />
    <option name="clang-tidy" hit="performance-noexcept-destructor clang-tidy check" />
    <option name="performance-noexcept-destructor" hit="performance-noexcept-destructor clang-tidy check" />
    <option name="check" hit="performance-noexcept-move-constructor clang-tidy check" />
    <option name="clang-tidy" hit="performance-noexcept-move-constructor clang-tidy check" />
    <option name="performance-noexcept-move-constructor" hit="performance-noexcept-move-constructor clang-tidy check" />
    <option name="check" hit="performance-noexcept-swap clang-tidy check" />
    <option name="clang-tidy" hit="performance-noexcept-swap clang-tidy check" />
    <option name="performance-noexcept-swap" hit="performance-noexcept-swap clang-tidy check" />
    <option name="check" hit="performance-trivially-destructible clang-tidy check" />
    <option name="clang-tidy" hit="performance-trivially-destructible clang-tidy check" />
    <option name="performance-trivially-destructible" hit="performance-trivially-destructible clang-tidy check" />
    <option name="check" hit="performance-type-promotion-in-math-fn clang-tidy check" />
    <option name="clang-tidy" hit="performance-type-promotion-in-math-fn clang-tidy check" />
    <option name="performance-type-promotion-in-math-fn" hit="performance-type-promotion-in-math-fn clang-tidy check" />
    <option name="check" hit="performance-unnecessary-copy-initialization clang-tidy check" />
    <option name="clang-tidy" hit="performance-unnecessary-copy-initialization clang-tidy check" />
    <option name="performance-unnecessary-copy-initialization" hit="performance-unnecessary-copy-initialization clang-tidy check" />
    <option name="check" hit="performance-unnecessary-value-param clang-tidy check" />
    <option name="clang-tidy" hit="performance-unnecessary-value-param clang-tidy check" />
    <option name="performance-unnecessary-value-param" hit="performance-unnecessary-value-param clang-tidy check" />
    <option name="clang" hit="pessimizing-move clang diagnostic" />
    <option name="diagnostic" hit="pessimizing-move clang diagnostic" />
    <option name="pessimizing-move" hit="pessimizing-move clang diagnostic" />
    <option name="clang" hit="pointer-arith clang diagnostic" />
    <option name="diagnostic" hit="pointer-arith clang diagnostic" />
    <option name="pointer-arith" hit="pointer-arith clang diagnostic" />
    <option name="clang" hit="pointer-bool-conversion clang diagnostic" />
    <option name="diagnostic" hit="pointer-bool-conversion clang diagnostic" />
    <option name="pointer-bool-conversion" hit="pointer-bool-conversion clang diagnostic" />
    <option name="clang" hit="pointer-compare clang diagnostic" />
    <option name="diagnostic" hit="pointer-compare clang diagnostic" />
    <option name="pointer-compare" hit="pointer-compare clang diagnostic" />
    <option name="clang" hit="pointer-integer-compare clang diagnostic" />
    <option name="diagnostic" hit="pointer-integer-compare clang diagnostic" />
    <option name="pointer-integer-compare" hit="pointer-integer-compare clang diagnostic" />
    <option name="clang" hit="pointer-sign clang diagnostic" />
    <option name="diagnostic" hit="pointer-sign clang diagnostic" />
    <option name="pointer-sign" hit="pointer-sign clang diagnostic" />
    <option name="clang" hit="pointer-to-enum-cast clang diagnostic" />
    <option name="diagnostic" hit="pointer-to-enum-cast clang diagnostic" />
    <option name="pointer-to-enum-cast" hit="pointer-to-enum-cast clang diagnostic" />
    <option name="clang" hit="pointer-to-int-cast clang diagnostic" />
    <option name="diagnostic" hit="pointer-to-int-cast clang diagnostic" />
    <option name="pointer-to-int-cast" hit="pointer-to-int-cast clang diagnostic" />
    <option name="clang" hit="pointer-type-mismatch clang diagnostic" />
    <option name="diagnostic" hit="pointer-type-mismatch clang diagnostic" />
    <option name="pointer-type-mismatch" hit="pointer-type-mismatch clang diagnostic" />
    <option name="clang" hit="poison-system-directories clang diagnostic" />
    <option name="diagnostic" hit="poison-system-directories clang diagnostic" />
    <option name="poison-system-directories" hit="poison-system-directories clang diagnostic" />
    <option name="check" hit="portability-restrict-system-includes clang-tidy check" />
    <option name="clang-tidy" hit="portability-restrict-system-includes clang-tidy check" />
    <option name="portability-restrict-system-includes" hit="portability-restrict-system-includes clang-tidy check" />
    <option name="check" hit="portability-simd-intrinsics clang-tidy check" />
    <option name="clang-tidy" hit="portability-simd-intrinsics clang-tidy check" />
    <option name="portability-simd-intrinsics" hit="portability-simd-intrinsics clang-tidy check" />
    <option name="check" hit="portability-std-allocator-const clang-tidy check" />
    <option name="clang-tidy" hit="portability-std-allocator-const clang-tidy check" />
    <option name="portability-std-allocator-const" hit="portability-std-allocator-const clang-tidy check" />
    <option name="clang" hit="potentially-evaluated-expression clang diagnostic" />
    <option name="diagnostic" hit="potentially-evaluated-expression clang diagnostic" />
    <option name="potentially-evaluated-expression" hit="potentially-evaluated-expression clang diagnostic" />
    <option name="clang" hit="pragma-clang-attribute clang diagnostic" />
    <option name="diagnostic" hit="pragma-clang-attribute clang diagnostic" />
    <option name="pragma-clang-attribute" hit="pragma-clang-attribute clang diagnostic" />
    <option name="clang" hit="pragma-once-outside-header clang diagnostic" />
    <option name="diagnostic" hit="pragma-once-outside-header clang diagnostic" />
    <option name="pragma-once-outside-header" hit="pragma-once-outside-header clang diagnostic" />
    <option name="clang" hit="pragma-pack clang diagnostic" />
    <option name="diagnostic" hit="pragma-pack clang diagnostic" />
    <option name="pragma-pack" hit="pragma-pack clang diagnostic" />
    <option name="clang" hit="pragma-pack-suspicious-include clang diagnostic" />
    <option name="diagnostic" hit="pragma-pack-suspicious-include clang diagnostic" />
    <option name="pragma-pack-suspicious-include" hit="pragma-pack-suspicious-include clang diagnostic" />
    <option name="clang" hit="pragma-system-header-outside-header clang diagnostic" />
    <option name="diagnostic" hit="pragma-system-header-outside-header clang diagnostic" />
    <option name="pragma-system-header-outside-header" hit="pragma-system-header-outside-header clang diagnostic" />
    <option name="clang" hit="pragmas clang diagnostic" />
    <option name="diagnostic" hit="pragmas clang diagnostic" />
    <option name="pragmas" hit="pragmas clang diagnostic" />
    <option name="clang" hit="pre-c++14-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c++14-compat clang diagnostic" />
    <option name="pre-c++14-compat" hit="pre-c++14-compat clang diagnostic" />
    <option name="clang" hit="pre-c++14-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c++14-compat-pedantic clang diagnostic" />
    <option name="pre-c++14-compat-pedantic" hit="pre-c++14-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-c++17-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c++17-compat clang diagnostic" />
    <option name="pre-c++17-compat" hit="pre-c++17-compat clang diagnostic" />
    <option name="clang" hit="pre-c++17-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c++17-compat-pedantic clang diagnostic" />
    <option name="pre-c++17-compat-pedantic" hit="pre-c++17-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-c++20-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c++20-compat clang diagnostic" />
    <option name="pre-c++20-compat" hit="pre-c++20-compat clang diagnostic" />
    <option name="clang" hit="pre-c++20-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c++20-compat-pedantic clang diagnostic" />
    <option name="pre-c++20-compat-pedantic" hit="pre-c++20-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-c++23-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c++23-compat clang diagnostic" />
    <option name="pre-c++23-compat" hit="pre-c++23-compat clang diagnostic" />
    <option name="clang" hit="pre-c++23-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c++23-compat-pedantic clang diagnostic" />
    <option name="pre-c++23-compat-pedantic" hit="pre-c++23-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-c++26-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c++26-compat clang diagnostic" />
    <option name="pre-c++26-compat" hit="pre-c++26-compat clang diagnostic" />
    <option name="clang" hit="pre-c++26-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c++26-compat-pedantic clang diagnostic" />
    <option name="pre-c++26-compat-pedantic" hit="pre-c++26-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-c++2c-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c++2c-compat clang diagnostic" />
    <option name="pre-c++2c-compat" hit="pre-c++2c-compat clang diagnostic" />
    <option name="clang" hit="pre-c++2c-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c++2c-compat-pedantic clang diagnostic" />
    <option name="pre-c++2c-compat-pedantic" hit="pre-c++2c-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-c2x-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-c2x-compat clang diagnostic" />
    <option name="pre-c2x-compat" hit="pre-c2x-compat clang diagnostic" />
    <option name="clang" hit="pre-c2x-compat-pedantic clang diagnostic" />
    <option name="diagnostic" hit="pre-c2x-compat-pedantic clang diagnostic" />
    <option name="pre-c2x-compat-pedantic" hit="pre-c2x-compat-pedantic clang diagnostic" />
    <option name="clang" hit="pre-openmp-51-compat clang diagnostic" />
    <option name="diagnostic" hit="pre-openmp-51-compat clang diagnostic" />
    <option name="pre-openmp-51-compat" hit="pre-openmp-51-compat clang diagnostic" />
    <option name="clang" hit="predefined-identifier-outside-function clang diagnostic" />
    <option name="diagnostic" hit="predefined-identifier-outside-function clang diagnostic" />
    <option name="predefined-identifier-outside-function" hit="predefined-identifier-outside-function clang diagnostic" />
    <option name="clang" hit="private-extern clang diagnostic" />
    <option name="diagnostic" hit="private-extern clang diagnostic" />
    <option name="private-extern" hit="private-extern clang diagnostic" />
    <option name="clang" hit="private-header clang diagnostic" />
    <option name="diagnostic" hit="private-header clang diagnostic" />
    <option name="private-header" hit="private-header clang diagnostic" />
    <option name="clang" hit="private-module clang diagnostic" />
    <option name="diagnostic" hit="private-module clang diagnostic" />
    <option name="private-module" hit="private-module clang diagnostic" />
    <option name="clang" hit="profile-instr-missing clang diagnostic" />
    <option name="diagnostic" hit="profile-instr-missing clang diagnostic" />
    <option name="profile-instr-missing" hit="profile-instr-missing clang diagnostic" />
    <option name="clang" hit="profile-instr-out-of-date clang diagnostic" />
    <option name="diagnostic" hit="profile-instr-out-of-date clang diagnostic" />
    <option name="profile-instr-out-of-date" hit="profile-instr-out-of-date clang diagnostic" />
    <option name="clang" hit="profile-instr-unprofiled clang diagnostic" />
    <option name="diagnostic" hit="profile-instr-unprofiled clang diagnostic" />
    <option name="profile-instr-unprofiled" hit="profile-instr-unprofiled clang diagnostic" />
    <option name="clang" hit="property-access-dot-syntax clang diagnostic" />
    <option name="diagnostic" hit="property-access-dot-syntax clang diagnostic" />
    <option name="property-access-dot-syntax" hit="property-access-dot-syntax clang diagnostic" />
    <option name="clang" hit="property-attribute-mismatch clang diagnostic" />
    <option name="diagnostic" hit="property-attribute-mismatch clang diagnostic" />
    <option name="property-attribute-mismatch" hit="property-attribute-mismatch clang diagnostic" />
    <option name="clang" hit="protocol clang diagnostic" />
    <option name="diagnostic" hit="protocol clang diagnostic" />
    <option name="protocol" hit="protocol clang diagnostic" />
    <option name="clang" hit="protocol-property-synthesis-ambiguity clang diagnostic" />
    <option name="diagnostic" hit="protocol-property-synthesis-ambiguity clang diagnostic" />
    <option name="protocol-property-synthesis-ambiguity" hit="protocol-property-synthesis-ambiguity clang diagnostic" />
    <option name="clang" hit="psabi clang diagnostic" />
    <option name="diagnostic" hit="psabi clang diagnostic" />
    <option name="psabi" hit="psabi clang diagnostic" />
    <option name="clang" hit="qualified-void-return-type clang diagnostic" />
    <option name="diagnostic" hit="qualified-void-return-type clang diagnostic" />
    <option name="qualified-void-return-type" hit="qualified-void-return-type clang diagnostic" />
    <option name="clang" hit="quoted-include-in-framework-header clang diagnostic" />
    <option name="diagnostic" hit="quoted-include-in-framework-header clang diagnostic" />
    <option name="quoted-include-in-framework-header" hit="quoted-include-in-framework-header clang diagnostic" />
    <option name="clang" hit="range-loop-analysis clang diagnostic" />
    <option name="diagnostic" hit="range-loop-analysis clang diagnostic" />
    <option name="range-loop-analysis" hit="range-loop-analysis clang diagnostic" />
    <option name="clang" hit="range-loop-bind-reference clang diagnostic" />
    <option name="diagnostic" hit="range-loop-bind-reference clang diagnostic" />
    <option name="range-loop-bind-reference" hit="range-loop-bind-reference clang diagnostic" />
    <option name="clang" hit="range-loop-construct clang diagnostic" />
    <option name="diagnostic" hit="range-loop-construct clang diagnostic" />
    <option name="range-loop-construct" hit="range-loop-construct clang diagnostic" />
    <option name="clang" hit="read-modules-implicitly clang diagnostic" />
    <option name="diagnostic" hit="read-modules-implicitly clang diagnostic" />
    <option name="read-modules-implicitly" hit="read-modules-implicitly clang diagnostic" />
    <option name="clang" hit="read-only-types clang diagnostic" />
    <option name="diagnostic" hit="read-only-types clang diagnostic" />
    <option name="read-only-types" hit="read-only-types clang diagnostic" />
    <option name="check" hit="readability-avoid-const-params-in-decls clang-tidy check" />
    <option name="clang-tidy" hit="readability-avoid-const-params-in-decls clang-tidy check" />
    <option name="readability-avoid-const-params-in-decls" hit="readability-avoid-const-params-in-decls clang-tidy check" />
    <option name="check" hit="readability-avoid-unconditional-preprocessor-if clang-tidy check" />
    <option name="clang-tidy" hit="readability-avoid-unconditional-preprocessor-if clang-tidy check" />
    <option name="readability-avoid-unconditional-preprocessor-if" hit="readability-avoid-unconditional-preprocessor-if clang-tidy check" />
    <option name="check" hit="readability-braces-around-statements clang-tidy check" />
    <option name="clang-tidy" hit="readability-braces-around-statements clang-tidy check" />
    <option name="readability-braces-around-statements" hit="readability-braces-around-statements clang-tidy check" />
    <option name="check" hit="readability-const-return-type clang-tidy check" />
    <option name="clang-tidy" hit="readability-const-return-type clang-tidy check" />
    <option name="readability-const-return-type" hit="readability-const-return-type clang-tidy check" />
    <option name="check" hit="readability-container-contains clang-tidy check" />
    <option name="clang-tidy" hit="readability-container-contains clang-tidy check" />
    <option name="readability-container-contains" hit="readability-container-contains clang-tidy check" />
    <option name="check" hit="readability-container-data-pointer clang-tidy check" />
    <option name="clang-tidy" hit="readability-container-data-pointer clang-tidy check" />
    <option name="readability-container-data-pointer" hit="readability-container-data-pointer clang-tidy check" />
    <option name="check" hit="readability-container-size-empty clang-tidy check" />
    <option name="clang-tidy" hit="readability-container-size-empty clang-tidy check" />
    <option name="readability-container-size-empty" hit="readability-container-size-empty clang-tidy check" />
    <option name="check" hit="readability-convert-member-functions-to-static clang-tidy check" />
    <option name="clang-tidy" hit="readability-convert-member-functions-to-static clang-tidy check" />
    <option name="readability-convert-member-functions-to-static" hit="readability-convert-member-functions-to-static clang-tidy check" />
    <option name="check" hit="readability-delete-null-pointer clang-tidy check" />
    <option name="clang-tidy" hit="readability-delete-null-pointer clang-tidy check" />
    <option name="readability-delete-null-pointer" hit="readability-delete-null-pointer clang-tidy check" />
    <option name="check" hit="readability-duplicate-include clang-tidy check" />
    <option name="clang-tidy" hit="readability-duplicate-include clang-tidy check" />
    <option name="readability-duplicate-include" hit="readability-duplicate-include clang-tidy check" />
    <option name="check" hit="readability-else-after-return clang-tidy check" />
    <option name="clang-tidy" hit="readability-else-after-return clang-tidy check" />
    <option name="readability-else-after-return" hit="readability-else-after-return clang-tidy check" />
    <option name="check" hit="readability-function-cognitive-complexity clang-tidy check" />
    <option name="clang-tidy" hit="readability-function-cognitive-complexity clang-tidy check" />
    <option name="readability-function-cognitive-complexity" hit="readability-function-cognitive-complexity clang-tidy check" />
    <option name="check" hit="readability-function-size clang-tidy check" />
    <option name="clang-tidy" hit="readability-function-size clang-tidy check" />
    <option name="readability-function-size" hit="readability-function-size clang-tidy check" />
    <option name="check" hit="readability-identifier-length clang-tidy check" />
    <option name="clang-tidy" hit="readability-identifier-length clang-tidy check" />
    <option name="readability-identifier-length" hit="readability-identifier-length clang-tidy check" />
    <option name="check" hit="readability-identifier-naming clang-tidy check" />
    <option name="clang-tidy" hit="readability-identifier-naming clang-tidy check" />
    <option name="readability-identifier-naming" hit="readability-identifier-naming clang-tidy check" />
    <option name="check" hit="readability-implicit-bool-conversion clang-tidy check" />
    <option name="clang-tidy" hit="readability-implicit-bool-conversion clang-tidy check" />
    <option name="readability-implicit-bool-conversion" hit="readability-implicit-bool-conversion clang-tidy check" />
    <option name="check" hit="readability-inconsistent-declaration-parameter-name clang-tidy check" />
    <option name="clang-tidy" hit="readability-inconsistent-declaration-parameter-name clang-tidy check" />
    <option name="readability-inconsistent-declaration-parameter-name" hit="readability-inconsistent-declaration-parameter-name clang-tidy check" />
    <option name="check" hit="readability-isolate-declaration clang-tidy check" />
    <option name="clang-tidy" hit="readability-isolate-declaration clang-tidy check" />
    <option name="readability-isolate-declaration" hit="readability-isolate-declaration clang-tidy check" />
    <option name="check" hit="readability-magic-numbers clang-tidy check" />
    <option name="clang-tidy" hit="readability-magic-numbers clang-tidy check" />
    <option name="readability-magic-numbers" hit="readability-magic-numbers clang-tidy check" />
    <option name="check" hit="readability-make-member-function-const clang-tidy check" />
    <option name="clang-tidy" hit="readability-make-member-function-const clang-tidy check" />
    <option name="readability-make-member-function-const" hit="readability-make-member-function-const clang-tidy check" />
    <option name="check" hit="readability-misleading-indentation clang-tidy check" />
    <option name="clang-tidy" hit="readability-misleading-indentation clang-tidy check" />
    <option name="readability-misleading-indentation" hit="readability-misleading-indentation clang-tidy check" />
    <option name="check" hit="readability-misplaced-array-index clang-tidy check" />
    <option name="clang-tidy" hit="readability-misplaced-array-index clang-tidy check" />
    <option name="readability-misplaced-array-index" hit="readability-misplaced-array-index clang-tidy check" />
    <option name="check" hit="readability-named-parameter clang-tidy check" />
    <option name="clang-tidy" hit="readability-named-parameter clang-tidy check" />
    <option name="readability-named-parameter" hit="readability-named-parameter clang-tidy check" />
    <option name="check" hit="readability-non-const-parameter clang-tidy check" />
    <option name="clang-tidy" hit="readability-non-const-parameter clang-tidy check" />
    <option name="readability-non-const-parameter" hit="readability-non-const-parameter clang-tidy check" />
    <option name="check" hit="readability-operators-representation clang-tidy check" />
    <option name="clang-tidy" hit="readability-operators-representation clang-tidy check" />
    <option name="readability-operators-representation" hit="readability-operators-representation clang-tidy check" />
    <option name="check" hit="readability-qualified-auto clang-tidy check" />
    <option name="clang-tidy" hit="readability-qualified-auto clang-tidy check" />
    <option name="readability-qualified-auto" hit="readability-qualified-auto clang-tidy check" />
    <option name="check" hit="readability-redundant-access-specifiers clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-access-specifiers clang-tidy check" />
    <option name="readability-redundant-access-specifiers" hit="readability-redundant-access-specifiers clang-tidy check" />
    <option name="check" hit="readability-redundant-control-flow clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-control-flow clang-tidy check" />
    <option name="readability-redundant-control-flow" hit="readability-redundant-control-flow clang-tidy check" />
    <option name="check" hit="readability-redundant-declaration clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-declaration clang-tidy check" />
    <option name="readability-redundant-declaration" hit="readability-redundant-declaration clang-tidy check" />
    <option name="check" hit="readability-redundant-function-ptr-dereference clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-function-ptr-dereference clang-tidy check" />
    <option name="readability-redundant-function-ptr-dereference" hit="readability-redundant-function-ptr-dereference clang-tidy check" />
    <option name="check" hit="readability-redundant-member-init clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-member-init clang-tidy check" />
    <option name="readability-redundant-member-init" hit="readability-redundant-member-init clang-tidy check" />
    <option name="check" hit="readability-redundant-preprocessor clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-preprocessor clang-tidy check" />
    <option name="readability-redundant-preprocessor" hit="readability-redundant-preprocessor clang-tidy check" />
    <option name="check" hit="readability-redundant-smartptr-get clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-smartptr-get clang-tidy check" />
    <option name="readability-redundant-smartptr-get" hit="readability-redundant-smartptr-get clang-tidy check" />
    <option name="check" hit="readability-redundant-string-cstr clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-string-cstr clang-tidy check" />
    <option name="readability-redundant-string-cstr" hit="readability-redundant-string-cstr clang-tidy check" />
    <option name="check" hit="readability-redundant-string-init clang-tidy check" />
    <option name="clang-tidy" hit="readability-redundant-string-init clang-tidy check" />
    <option name="readability-redundant-string-init" hit="readability-redundant-string-init clang-tidy check" />
    <option name="check" hit="readability-simplify-boolean-expr clang-tidy check" />
    <option name="clang-tidy" hit="readability-simplify-boolean-expr clang-tidy check" />
    <option name="readability-simplify-boolean-expr" hit="readability-simplify-boolean-expr clang-tidy check" />
    <option name="check" hit="readability-simplify-subscript-expr clang-tidy check" />
    <option name="clang-tidy" hit="readability-simplify-subscript-expr clang-tidy check" />
    <option name="readability-simplify-subscript-expr" hit="readability-simplify-subscript-expr clang-tidy check" />
    <option name="check" hit="readability-static-accessed-through-instance clang-tidy check" />
    <option name="clang-tidy" hit="readability-static-accessed-through-instance clang-tidy check" />
    <option name="readability-static-accessed-through-instance" hit="readability-static-accessed-through-instance clang-tidy check" />
    <option name="check" hit="readability-static-definition-in-anonymous-namespace clang-tidy check" />
    <option name="clang-tidy" hit="readability-static-definition-in-anonymous-namespace clang-tidy check" />
    <option name="readability-static-definition-in-anonymous-namespace" hit="readability-static-definition-in-anonymous-namespace clang-tidy check" />
    <option name="check" hit="readability-string-compare clang-tidy check" />
    <option name="clang-tidy" hit="readability-string-compare clang-tidy check" />
    <option name="readability-string-compare" hit="readability-string-compare clang-tidy check" />
    <option name="check" hit="readability-suspicious-call-argument clang-tidy check" />
    <option name="clang-tidy" hit="readability-suspicious-call-argument clang-tidy check" />
    <option name="readability-suspicious-call-argument" hit="readability-suspicious-call-argument clang-tidy check" />
    <option name="check" hit="readability-uniqueptr-delete-release clang-tidy check" />
    <option name="clang-tidy" hit="readability-uniqueptr-delete-release clang-tidy check" />
    <option name="readability-uniqueptr-delete-release" hit="readability-uniqueptr-delete-release clang-tidy check" />
    <option name="check" hit="readability-uppercase-literal-suffix clang-tidy check" />
    <option name="clang-tidy" hit="readability-uppercase-literal-suffix clang-tidy check" />
    <option name="readability-uppercase-literal-suffix" hit="readability-uppercase-literal-suffix clang-tidy check" />
    <option name="check" hit="readability-use-anyofallof clang-tidy check" />
    <option name="clang-tidy" hit="readability-use-anyofallof clang-tidy check" />
    <option name="readability-use-anyofallof" hit="readability-use-anyofallof clang-tidy check" />
    <option name="clang" hit="readonly-iboutlet-property clang diagnostic" />
    <option name="diagnostic" hit="readonly-iboutlet-property clang diagnostic" />
    <option name="readonly-iboutlet-property" hit="readonly-iboutlet-property clang diagnostic" />
    <option name="clang" hit="receiver-expr clang diagnostic" />
    <option name="diagnostic" hit="receiver-expr clang diagnostic" />
    <option name="receiver-expr" hit="receiver-expr clang diagnostic" />
    <option name="clang" hit="receiver-forward-class clang diagnostic" />
    <option name="diagnostic" hit="receiver-forward-class clang diagnostic" />
    <option name="receiver-forward-class" hit="receiver-forward-class clang diagnostic" />
    <option name="clang" hit="redeclared-class-member clang diagnostic" />
    <option name="diagnostic" hit="redeclared-class-member clang diagnostic" />
    <option name="redeclared-class-member" hit="redeclared-class-member clang diagnostic" />
    <option name="clang" hit="redundant-consteval-if clang diagnostic" />
    <option name="diagnostic" hit="redundant-consteval-if clang diagnostic" />
    <option name="redundant-consteval-if" hit="redundant-consteval-if clang diagnostic" />
    <option name="clang" hit="redundant-move clang diagnostic" />
    <option name="diagnostic" hit="redundant-move clang diagnostic" />
    <option name="redundant-move" hit="redundant-move clang diagnostic" />
    <option name="clang" hit="redundant-parens clang diagnostic" />
    <option name="diagnostic" hit="redundant-parens clang diagnostic" />
    <option name="redundant-parens" hit="redundant-parens clang diagnostic" />
    <option name="clang" hit="register clang diagnostic" />
    <option name="diagnostic" hit="register clang diagnostic" />
    <option name="register" hit="register clang diagnostic" />
    <option name="clang" hit="reinterpret-base-class clang diagnostic" />
    <option name="diagnostic" hit="reinterpret-base-class clang diagnostic" />
    <option name="reinterpret-base-class" hit="reinterpret-base-class clang diagnostic" />
    <option name="instead" hit="reinterpretcast is used instead of staticcast" />
    <option name="is" hit="reinterpretcast is used instead of staticcast" />
    <option name="of" hit="reinterpretcast is used instead of staticcast" />
    <option name="reinterpretcast" hit="reinterpretcast is used instead of staticcast" />
    <option name="staticcast" hit="reinterpretcast is used instead of staticcast" />
    <option name="used" hit="reinterpretcast is used instead of staticcast" />
    <option name="clang" hit="reorder clang diagnostic" />
    <option name="diagnostic" hit="reorder clang diagnostic" />
    <option name="reorder" hit="reorder clang diagnostic" />
    <option name="clang" hit="reorder-ctor clang diagnostic" />
    <option name="diagnostic" hit="reorder-ctor clang diagnostic" />
    <option name="reorder-ctor" hit="reorder-ctor clang diagnostic" />
    <option name="clang" hit="reorder-init-list clang diagnostic" />
    <option name="diagnostic" hit="reorder-init-list clang diagnostic" />
    <option name="reorder-init-list" hit="reorder-init-list clang diagnostic" />
    <option name="clang" hit="requires-super-attribute clang diagnostic" />
    <option name="diagnostic" hit="requires-super-attribute clang diagnostic" />
    <option name="requires-super-attribute" hit="requires-super-attribute clang diagnostic" />
    <option name="clang" hit="reserved-id-macro clang diagnostic" />
    <option name="diagnostic" hit="reserved-id-macro clang diagnostic" />
    <option name="reserved-id-macro" hit="reserved-id-macro clang diagnostic" />
    <option name="clang" hit="reserved-identifier clang diagnostic" />
    <option name="diagnostic" hit="reserved-identifier clang diagnostic" />
    <option name="reserved-identifier" hit="reserved-identifier clang diagnostic" />
    <option name="clang" hit="reserved-macro-identifier clang diagnostic" />
    <option name="diagnostic" hit="reserved-macro-identifier clang diagnostic" />
    <option name="reserved-macro-identifier" hit="reserved-macro-identifier clang diagnostic" />
    <option name="clang" hit="reserved-module-identifier clang diagnostic" />
    <option name="diagnostic" hit="reserved-module-identifier clang diagnostic" />
    <option name="reserved-module-identifier" hit="reserved-module-identifier clang diagnostic" />
    <option name="clang" hit="reserved-user-defined-literal clang diagnostic" />
    <option name="diagnostic" hit="reserved-user-defined-literal clang diagnostic" />
    <option name="reserved-user-defined-literal" hit="reserved-user-defined-literal clang diagnostic" />
    <option name="clang" hit="restrict-expansion clang diagnostic" />
    <option name="diagnostic" hit="restrict-expansion clang diagnostic" />
    <option name="restrict-expansion" hit="restrict-expansion clang diagnostic" />
    <option name="clang" hit="retained-language-linkage clang diagnostic" />
    <option name="diagnostic" hit="retained-language-linkage clang diagnostic" />
    <option name="retained-language-linkage" hit="retained-language-linkage clang diagnostic" />
    <option name="clang" hit="return-local-addr clang diagnostic" />
    <option name="diagnostic" hit="return-local-addr clang diagnostic" />
    <option name="return-local-addr" hit="return-local-addr clang diagnostic" />
    <option name="clang" hit="return-stack-address clang diagnostic" />
    <option name="diagnostic" hit="return-stack-address clang diagnostic" />
    <option name="return-stack-address" hit="return-stack-address clang diagnostic" />
    <option name="clang" hit="return-std-move clang diagnostic" />
    <option name="diagnostic" hit="return-std-move clang diagnostic" />
    <option name="return-std-move" hit="return-std-move clang diagnostic" />
    <option name="clang" hit="return-type clang diagnostic" />
    <option name="diagnostic" hit="return-type clang diagnostic" />
    <option name="return-type" hit="return-type clang diagnostic" />
    <option name="clang" hit="return-type-c-linkage clang diagnostic" />
    <option name="diagnostic" hit="return-type-c-linkage clang diagnostic" />
    <option name="return-type-c-linkage" hit="return-type-c-linkage clang diagnostic" />
    <option name="clang" hit="rewrite-not-bool clang diagnostic" />
    <option name="diagnostic" hit="rewrite-not-bool clang diagnostic" />
    <option name="rewrite-not-bool" hit="rewrite-not-bool clang diagnostic" />
    <option name="clang" hit="sarif-format-unstable clang diagnostic" />
    <option name="diagnostic" hit="sarif-format-unstable clang diagnostic" />
    <option name="sarif-format-unstable" hit="sarif-format-unstable clang diagnostic" />
    <option name="clang" hit="section clang diagnostic" />
    <option name="diagnostic" hit="section clang diagnostic" />
    <option name="section" hit="section clang diagnostic" />
    <option name="analyzer" hit="security.FloatLoopCounter clang static analyzer check" />
    <option name="check" hit="security.FloatLoopCounter clang static analyzer check" />
    <option name="clang" hit="security.FloatLoopCounter clang static analyzer check" />
    <option name="floatloopcounter" hit="security.FloatLoopCounter clang static analyzer check" />
    <option name="security" hit="security.FloatLoopCounter clang static analyzer check" />
    <option name="static" hit="security.FloatLoopCounter clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="deprecatedorunsafebufferhandling" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.DeprecatedOrUnsafeBufferHandling clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="securitysyntaxchecker" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.SecuritySyntaxChecker clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="uncheckedreturn" hit="security.insecureAPI.UncheckedReturn clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="bcmp" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.bcmp clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="bcopy" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.bcopy clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="bzero" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.bzero clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="decodevalueofobjctype" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.decodeValueOfObjCType clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="getpw" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.getpw clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="gets" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.gets clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="mkstemp" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.mkstemp clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="mktemp" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.mktemp clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="rand" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.rand clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="strcpy" hit="security.insecureAPI.strcpy clang static analyzer check" />
    <option name="analyzer" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="check" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="clang" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="insecureapi" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="security" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="static" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="vfork" hit="security.insecureAPI.vfork clang static analyzer check" />
    <option name="clang" hit="selector clang diagnostic" />
    <option name="diagnostic" hit="selector clang diagnostic" />
    <option name="selector" hit="selector clang diagnostic" />
    <option name="clang" hit="selector-type-mismatch clang diagnostic" />
    <option name="diagnostic" hit="selector-type-mismatch clang diagnostic" />
    <option name="selector-type-mismatch" hit="selector-type-mismatch clang diagnostic" />
    <option name="clang" hit="self-assign clang diagnostic" />
    <option name="diagnostic" hit="self-assign clang diagnostic" />
    <option name="self-assign" hit="self-assign clang diagnostic" />
    <option name="clang" hit="self-assign-field clang diagnostic" />
    <option name="diagnostic" hit="self-assign-field clang diagnostic" />
    <option name="self-assign-field" hit="self-assign-field clang diagnostic" />
    <option name="clang" hit="self-assign-overloaded clang diagnostic" />
    <option name="diagnostic" hit="self-assign-overloaded clang diagnostic" />
    <option name="self-assign-overloaded" hit="self-assign-overloaded clang diagnostic" />
    <option name="clang" hit="self-move clang diagnostic" />
    <option name="diagnostic" hit="self-move clang diagnostic" />
    <option name="self-move" hit="self-move clang diagnostic" />
    <option name="clang" hit="semicolon-before-method-body clang diagnostic" />
    <option name="diagnostic" hit="semicolon-before-method-body clang diagnostic" />
    <option name="semicolon-before-method-body" hit="semicolon-before-method-body clang diagnostic" />
    <option name="clang" hit="sentinel clang diagnostic" />
    <option name="diagnostic" hit="sentinel clang diagnostic" />
    <option name="sentinel" hit="sentinel clang diagnostic" />
    <option name="clang" hit="serialized-diagnostics clang diagnostic" />
    <option name="diagnostic" hit="serialized-diagnostics clang diagnostic" />
    <option name="serialized-diagnostics" hit="serialized-diagnostics clang diagnostic" />
    <option name="clang" hit="shadow clang diagnostic" />
    <option name="diagnostic" hit="shadow clang diagnostic" />
    <option name="shadow" hit="shadow clang diagnostic" />
    <option name="clang" hit="shadow-field clang diagnostic" />
    <option name="diagnostic" hit="shadow-field clang diagnostic" />
    <option name="shadow-field" hit="shadow-field clang diagnostic" />
    <option name="clang" hit="shadow-field-in-constructor clang diagnostic" />
    <option name="diagnostic" hit="shadow-field-in-constructor clang diagnostic" />
    <option name="shadow-field-in-constructor" hit="shadow-field-in-constructor clang diagnostic" />
    <option name="clang" hit="shadow-field-in-constructor-modified clang diagnostic" />
    <option name="diagnostic" hit="shadow-field-in-constructor-modified clang diagnostic" />
    <option name="shadow-field-in-constructor-modified" hit="shadow-field-in-constructor-modified clang diagnostic" />
    <option name="clang" hit="shadow-ivar clang diagnostic" />
    <option name="diagnostic" hit="shadow-ivar clang diagnostic" />
    <option name="shadow-ivar" hit="shadow-ivar clang diagnostic" />
    <option name="clang" hit="shadow-uncaptured-local clang diagnostic" />
    <option name="diagnostic" hit="shadow-uncaptured-local clang diagnostic" />
    <option name="shadow-uncaptured-local" hit="shadow-uncaptured-local clang diagnostic" />
    <option name="clang" hit="shift-count-negative clang diagnostic" />
    <option name="diagnostic" hit="shift-count-negative clang diagnostic" />
    <option name="shift-count-negative" hit="shift-count-negative clang diagnostic" />
    <option name="clang" hit="shift-count-overflow clang diagnostic" />
    <option name="diagnostic" hit="shift-count-overflow clang diagnostic" />
    <option name="shift-count-overflow" hit="shift-count-overflow clang diagnostic" />
    <option name="clang" hit="shift-negative-value clang diagnostic" />
    <option name="diagnostic" hit="shift-negative-value clang diagnostic" />
    <option name="shift-negative-value" hit="shift-negative-value clang diagnostic" />
    <option name="clang" hit="shift-op-parentheses clang diagnostic" />
    <option name="diagnostic" hit="shift-op-parentheses clang diagnostic" />
    <option name="shift-op-parentheses" hit="shift-op-parentheses clang diagnostic" />
    <option name="clang" hit="shift-overflow clang diagnostic" />
    <option name="diagnostic" hit="shift-overflow clang diagnostic" />
    <option name="shift-overflow" hit="shift-overflow clang diagnostic" />
    <option name="clang" hit="shift-sign-overflow clang diagnostic" />
    <option name="diagnostic" hit="shift-sign-overflow clang diagnostic" />
    <option name="shift-sign-overflow" hit="shift-sign-overflow clang diagnostic" />
    <option name="clang" hit="shorten-64-to-32 clang diagnostic" />
    <option name="diagnostic" hit="shorten-64-to-32 clang diagnostic" />
    <option name="shorten-64-to-32" hit="shorten-64-to-32 clang diagnostic" />
    <option name="clang" hit="sign-compare clang diagnostic" />
    <option name="diagnostic" hit="sign-compare clang diagnostic" />
    <option name="sign-compare" hit="sign-compare clang diagnostic" />
    <option name="clang" hit="sign-conversion clang diagnostic" />
    <option name="diagnostic" hit="sign-conversion clang diagnostic" />
    <option name="sign-conversion" hit="sign-conversion clang diagnostic" />
    <option name="clang" hit="signed-enum-bitfield clang diagnostic" />
    <option name="diagnostic" hit="signed-enum-bitfield clang diagnostic" />
    <option name="signed-enum-bitfield" hit="signed-enum-bitfield clang diagnostic" />
    <option name="clang" hit="signed-unsigned-wchar clang diagnostic" />
    <option name="diagnostic" hit="signed-unsigned-wchar clang diagnostic" />
    <option name="signed-unsigned-wchar" hit="signed-unsigned-wchar clang diagnostic" />
    <option name="clang" hit="single-bit-bitfield-constant-conversion clang diagnostic" />
    <option name="diagnostic" hit="single-bit-bitfield-constant-conversion clang diagnostic" />
    <option name="single-bit-bitfield-constant-conversion" hit="single-bit-bitfield-constant-conversion clang diagnostic" />
    <option name="clang" hit="sizeof-array-argument clang diagnostic" />
    <option name="diagnostic" hit="sizeof-array-argument clang diagnostic" />
    <option name="sizeof-array-argument" hit="sizeof-array-argument clang diagnostic" />
    <option name="clang" hit="sizeof-array-decay clang diagnostic" />
    <option name="diagnostic" hit="sizeof-array-decay clang diagnostic" />
    <option name="sizeof-array-decay" hit="sizeof-array-decay clang diagnostic" />
    <option name="clang" hit="sizeof-array-div clang diagnostic" />
    <option name="diagnostic" hit="sizeof-array-div clang diagnostic" />
    <option name="sizeof-array-div" hit="sizeof-array-div clang diagnostic" />
    <option name="clang" hit="sizeof-pointer-div clang diagnostic" />
    <option name="diagnostic" hit="sizeof-pointer-div clang diagnostic" />
    <option name="sizeof-pointer-div" hit="sizeof-pointer-div clang diagnostic" />
    <option name="clang" hit="sizeof-pointer-memaccess clang diagnostic" />
    <option name="diagnostic" hit="sizeof-pointer-memaccess clang diagnostic" />
    <option name="sizeof-pointer-memaccess" hit="sizeof-pointer-memaccess clang diagnostic" />
    <option name="clang" hit="slash-u-filename clang diagnostic" />
    <option name="diagnostic" hit="slash-u-filename clang diagnostic" />
    <option name="slash-u-filename" hit="slash-u-filename clang diagnostic" />
    <option name="clang" hit="slh-asm-goto clang diagnostic" />
    <option name="diagnostic" hit="slh-asm-goto clang diagnostic" />
    <option name="slh-asm-goto" hit="slh-asm-goto clang diagnostic" />
    <option name="clang" hit="sometimes-uninitialized clang diagnostic" />
    <option name="diagnostic" hit="sometimes-uninitialized clang diagnostic" />
    <option name="sometimes-uninitialized" hit="sometimes-uninitialized clang diagnostic" />
    <option name="clang" hit="source-uses-openmp clang diagnostic" />
    <option name="diagnostic" hit="source-uses-openmp clang diagnostic" />
    <option name="source-uses-openmp" hit="source-uses-openmp clang diagnostic" />
    <option name="clang" hit="spir-compat clang diagnostic" />
    <option name="diagnostic" hit="spir-compat clang diagnostic" />
    <option name="spir-compat" hit="spir-compat clang diagnostic" />
    <option name="clang" hit="spirv-compat clang diagnostic" />
    <option name="diagnostic" hit="spirv-compat clang diagnostic" />
    <option name="spirv-compat" hit="spirv-compat clang diagnostic" />
    <option name="clang" hit="static-float-init clang diagnostic" />
    <option name="diagnostic" hit="static-float-init clang diagnostic" />
    <option name="static-float-init" hit="static-float-init clang diagnostic" />
    <option name="clang" hit="static-in-inline clang diagnostic" />
    <option name="diagnostic" hit="static-in-inline clang diagnostic" />
    <option name="static-in-inline" hit="static-in-inline clang diagnostic" />
    <option name="clang" hit="static-inline-explicit-instantiation clang diagnostic" />
    <option name="diagnostic" hit="static-inline-explicit-instantiation clang diagnostic" />
    <option name="static-inline-explicit-instantiation" hit="static-inline-explicit-instantiation clang diagnostic" />
    <option name="clang" hit="static-local-in-inline clang diagnostic" />
    <option name="diagnostic" hit="static-local-in-inline clang diagnostic" />
    <option name="static-local-in-inline" hit="static-local-in-inline clang diagnostic" />
    <option name="clang" hit="static-self-init clang diagnostic" />
    <option name="diagnostic" hit="static-self-init clang diagnostic" />
    <option name="static-self-init" hit="static-self-init clang diagnostic" />
    <option name="failed" hit="staticassert failed" />
    <option name="staticassert" hit="staticassert failed" />
    <option name="be" hit="std::size can be used" />
    <option name="can" hit="std::size can be used" />
    <option name="size" hit="std::size can be used" />
    <option name="std" hit="std::size can be used" />
    <option name="used" hit="std::size can be used" />
    <option name="be" hit="std::views::keys/values can be used" />
    <option name="can" hit="std::views::keys/values can be used" />
    <option name="keys" hit="std::views::keys/values can be used" />
    <option name="std" hit="std::views::keys/values can be used" />
    <option name="used" hit="std::views::keys/values can be used" />
    <option name="values" hit="std::views::keys/values can be used" />
    <option name="views" hit="std::views::keys/values can be used" />
    <option name="clang" hit="stdlibcxx-not-found clang diagnostic" />
    <option name="diagnostic" hit="stdlibcxx-not-found clang diagnostic" />
    <option name="stdlibcxx-not-found" hit="stdlibcxx-not-found clang diagnostic" />
    <option name="clang" hit="strict-prototypes clang diagnostic" />
    <option name="diagnostic" hit="strict-prototypes clang diagnostic" />
    <option name="strict-prototypes" hit="strict-prototypes clang diagnostic" />
    <option name="clang" hit="strict-selector-match clang diagnostic" />
    <option name="diagnostic" hit="strict-selector-match clang diagnostic" />
    <option name="strict-selector-match" hit="strict-selector-match clang diagnostic" />
    <option name="clang" hit="string-compare clang diagnostic" />
    <option name="diagnostic" hit="string-compare clang diagnostic" />
    <option name="string-compare" hit="string-compare clang diagnostic" />
    <option name="clang" hit="string-concatenation clang diagnostic" />
    <option name="diagnostic" hit="string-concatenation clang diagnostic" />
    <option name="string-concatenation" hit="string-concatenation clang diagnostic" />
    <option name="clang" hit="string-conversion clang diagnostic" />
    <option name="diagnostic" hit="string-conversion clang diagnostic" />
    <option name="string-conversion" hit="string-conversion clang diagnostic" />
    <option name="clang" hit="string-plus-char clang diagnostic" />
    <option name="diagnostic" hit="string-plus-char clang diagnostic" />
    <option name="string-plus-char" hit="string-plus-char clang diagnostic" />
    <option name="clang" hit="string-plus-int clang diagnostic" />
    <option name="diagnostic" hit="string-plus-int clang diagnostic" />
    <option name="string-plus-int" hit="string-plus-int clang diagnostic" />
    <option name="clang" hit="strlcpy-strlcat-size clang diagnostic" />
    <option name="diagnostic" hit="strlcpy-strlcat-size clang diagnostic" />
    <option name="strlcpy-strlcat-size" hit="strlcpy-strlcat-size clang diagnostic" />
    <option name="clang" hit="strncat-size clang diagnostic" />
    <option name="diagnostic" hit="strncat-size clang diagnostic" />
    <option name="strncat-size" hit="strncat-size clang diagnostic" />
    <option name="clang" hit="suggest-destructor-override clang diagnostic" />
    <option name="diagnostic" hit="suggest-destructor-override clang diagnostic" />
    <option name="suggest-destructor-override" hit="suggest-destructor-override clang diagnostic" />
    <option name="clang" hit="suggest-override clang diagnostic" />
    <option name="diagnostic" hit="suggest-override clang diagnostic" />
    <option name="suggest-override" hit="suggest-override clang diagnostic" />
    <option name="clang" hit="super-class-method-mismatch clang diagnostic" />
    <option name="diagnostic" hit="super-class-method-mismatch clang diagnostic" />
    <option name="super-class-method-mismatch" hit="super-class-method-mismatch clang diagnostic" />
    <option name="clang" hit="suspicious-bzero clang diagnostic" />
    <option name="diagnostic" hit="suspicious-bzero clang diagnostic" />
    <option name="suspicious-bzero" hit="suspicious-bzero clang diagnostic" />
    <option name="clang" hit="switch clang diagnostic" />
    <option name="diagnostic" hit="switch clang diagnostic" />
    <option name="switch" hit="switch clang diagnostic" />
    <option name="clang" hit="switch-bool clang diagnostic" />
    <option name="diagnostic" hit="switch-bool clang diagnostic" />
    <option name="switch-bool" hit="switch-bool clang diagnostic" />
    <option name="clang" hit="switch-enum clang diagnostic" />
    <option name="diagnostic" hit="switch-enum clang diagnostic" />
    <option name="switch-enum" hit="switch-enum clang diagnostic" />
    <option name="clang" hit="sync-alignment clang diagnostic" />
    <option name="diagnostic" hit="sync-alignment clang diagnostic" />
    <option name="sync-alignment" hit="sync-alignment clang diagnostic" />
    <option name="clang" hit="sync-fetch-and-nand-semantics-changed clang diagnostic" />
    <option name="diagnostic" hit="sync-fetch-and-nand-semantics-changed clang diagnostic" />
    <option name="sync-fetch-and-nand-semantics-changed" hit="sync-fetch-and-nand-semantics-changed clang diagnostic" />
    <option name="clang" hit="target-clones-mixed-specifiers clang diagnostic" />
    <option name="diagnostic" hit="target-clones-mixed-specifiers clang diagnostic" />
    <option name="target-clones-mixed-specifiers" hit="target-clones-mixed-specifiers clang diagnostic" />
    <option name="clang" hit="tautological-bitwise-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-bitwise-compare clang diagnostic" />
    <option name="tautological-bitwise-compare" hit="tautological-bitwise-compare clang diagnostic" />
    <option name="clang" hit="tautological-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-compare clang diagnostic" />
    <option name="tautological-compare" hit="tautological-compare clang diagnostic" />
    <option name="clang" hit="tautological-constant-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-constant-compare clang diagnostic" />
    <option name="tautological-constant-compare" hit="tautological-constant-compare clang diagnostic" />
    <option name="clang" hit="tautological-constant-in-range-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-constant-in-range-compare clang diagnostic" />
    <option name="tautological-constant-in-range-compare" hit="tautological-constant-in-range-compare clang diagnostic" />
    <option name="clang" hit="tautological-constant-out-of-range-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-constant-out-of-range-compare clang diagnostic" />
    <option name="tautological-constant-out-of-range-compare" hit="tautological-constant-out-of-range-compare clang diagnostic" />
    <option name="clang" hit="tautological-objc-bool-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-objc-bool-compare clang diagnostic" />
    <option name="tautological-objc-bool-compare" hit="tautological-objc-bool-compare clang diagnostic" />
    <option name="clang" hit="tautological-overlap-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-overlap-compare clang diagnostic" />
    <option name="tautological-overlap-compare" hit="tautological-overlap-compare clang diagnostic" />
    <option name="clang" hit="tautological-pointer-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-pointer-compare clang diagnostic" />
    <option name="tautological-pointer-compare" hit="tautological-pointer-compare clang diagnostic" />
    <option name="clang" hit="tautological-type-limit-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-type-limit-compare clang diagnostic" />
    <option name="tautological-type-limit-compare" hit="tautological-type-limit-compare clang diagnostic" />
    <option name="clang" hit="tautological-undefined-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-undefined-compare clang diagnostic" />
    <option name="tautological-undefined-compare" hit="tautological-undefined-compare clang diagnostic" />
    <option name="clang" hit="tautological-unsigned-char-zero-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-unsigned-char-zero-compare clang diagnostic" />
    <option name="tautological-unsigned-char-zero-compare" hit="tautological-unsigned-char-zero-compare clang diagnostic" />
    <option name="clang" hit="tautological-unsigned-enum-zero-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-unsigned-enum-zero-compare clang diagnostic" />
    <option name="tautological-unsigned-enum-zero-compare" hit="tautological-unsigned-enum-zero-compare clang diagnostic" />
    <option name="clang" hit="tautological-unsigned-zero-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-unsigned-zero-compare clang diagnostic" />
    <option name="tautological-unsigned-zero-compare" hit="tautological-unsigned-zero-compare clang diagnostic" />
    <option name="clang" hit="tautological-value-range-compare clang diagnostic" />
    <option name="diagnostic" hit="tautological-value-range-compare clang diagnostic" />
    <option name="tautological-value-range-compare" hit="tautological-value-range-compare clang diagnostic" />
    <option name="clang" hit="tentative-definition-incomplete-type clang diagnostic" />
    <option name="diagnostic" hit="tentative-definition-incomplete-type clang diagnostic" />
    <option name="tentative-definition-incomplete-type" hit="tentative-definition-incomplete-type clang diagnostic" />
    <option name="clang" hit="thread-safety-analysis clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-analysis clang diagnostic" />
    <option name="thread-safety-analysis" hit="thread-safety-analysis clang diagnostic" />
    <option name="clang" hit="thread-safety-attributes clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-attributes clang diagnostic" />
    <option name="thread-safety-attributes" hit="thread-safety-attributes clang diagnostic" />
    <option name="clang" hit="thread-safety-beta clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-beta clang diagnostic" />
    <option name="thread-safety-beta" hit="thread-safety-beta clang diagnostic" />
    <option name="clang" hit="thread-safety-negative clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-negative clang diagnostic" />
    <option name="thread-safety-negative" hit="thread-safety-negative clang diagnostic" />
    <option name="clang" hit="thread-safety-precise clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-precise clang diagnostic" />
    <option name="thread-safety-precise" hit="thread-safety-precise clang diagnostic" />
    <option name="clang" hit="thread-safety-reference clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-reference clang diagnostic" />
    <option name="thread-safety-reference" hit="thread-safety-reference clang diagnostic" />
    <option name="clang" hit="thread-safety-verbose clang diagnostic" />
    <option name="diagnostic" hit="thread-safety-verbose clang diagnostic" />
    <option name="thread-safety-verbose" hit="thread-safety-verbose clang diagnostic" />
    <option name="clang" hit="trigraphs clang diagnostic" />
    <option name="diagnostic" hit="trigraphs clang diagnostic" />
    <option name="trigraphs" hit="trigraphs clang diagnostic" />
    <option name="clang" hit="type-safety clang diagnostic" />
    <option name="diagnostic" hit="type-safety clang diagnostic" />
    <option name="type-safety" hit="type-safety clang diagnostic" />
    <option name="clang" hit="typedef-redefinition clang diagnostic" />
    <option name="diagnostic" hit="typedef-redefinition clang diagnostic" />
    <option name="typedef-redefinition" hit="typedef-redefinition clang diagnostic" />
    <option name="clang" hit="typename-missing clang diagnostic" />
    <option name="diagnostic" hit="typename-missing clang diagnostic" />
    <option name="typename-missing" hit="typename-missing clang diagnostic" />
    <option name="clang" hit="unable-to-open-stats-file clang diagnostic" />
    <option name="diagnostic" hit="unable-to-open-stats-file clang diagnostic" />
    <option name="unable-to-open-stats-file" hit="unable-to-open-stats-file clang diagnostic" />
    <option name="clang" hit="unaligned-access clang diagnostic" />
    <option name="diagnostic" hit="unaligned-access clang diagnostic" />
    <option name="unaligned-access" hit="unaligned-access clang diagnostic" />
    <option name="clang" hit="unaligned-qualifier-implicit-cast clang diagnostic" />
    <option name="diagnostic" hit="unaligned-qualifier-implicit-cast clang diagnostic" />
    <option name="unaligned-qualifier-implicit-cast" hit="unaligned-qualifier-implicit-cast clang diagnostic" />
    <option name="clang" hit="unavailable-declarations clang diagnostic" />
    <option name="diagnostic" hit="unavailable-declarations clang diagnostic" />
    <option name="unavailable-declarations" hit="unavailable-declarations clang diagnostic" />
    <option name="clang" hit="undeclared-selector clang diagnostic" />
    <option name="diagnostic" hit="undeclared-selector clang diagnostic" />
    <option name="undeclared-selector" hit="undeclared-selector clang diagnostic" />
    <option name="clang" hit="undef clang diagnostic" />
    <option name="diagnostic" hit="undef clang diagnostic" />
    <option name="undef" hit="undef clang diagnostic" />
    <option name="clang" hit="undef-prefix clang diagnostic" />
    <option name="diagnostic" hit="undef-prefix clang diagnostic" />
    <option name="undef-prefix" hit="undef-prefix clang diagnostic" />
    <option name="clang" hit="undefined-bool-conversion clang diagnostic" />
    <option name="diagnostic" hit="undefined-bool-conversion clang diagnostic" />
    <option name="undefined-bool-conversion" hit="undefined-bool-conversion clang diagnostic" />
    <option name="clang" hit="undefined-func-template clang diagnostic" />
    <option name="diagnostic" hit="undefined-func-template clang diagnostic" />
    <option name="undefined-func-template" hit="undefined-func-template clang diagnostic" />
    <option name="clang" hit="undefined-inline clang diagnostic" />
    <option name="diagnostic" hit="undefined-inline clang diagnostic" />
    <option name="undefined-inline" hit="undefined-inline clang diagnostic" />
    <option name="clang" hit="undefined-internal clang diagnostic" />
    <option name="diagnostic" hit="undefined-internal clang diagnostic" />
    <option name="undefined-internal" hit="undefined-internal clang diagnostic" />
    <option name="clang" hit="undefined-internal-type clang diagnostic" />
    <option name="diagnostic" hit="undefined-internal-type clang diagnostic" />
    <option name="undefined-internal-type" hit="undefined-internal-type clang diagnostic" />
    <option name="clang" hit="undefined-reinterpret-cast clang diagnostic" />
    <option name="diagnostic" hit="undefined-reinterpret-cast clang diagnostic" />
    <option name="undefined-reinterpret-cast" hit="undefined-reinterpret-cast clang diagnostic" />
    <option name="clang" hit="undefined-var-template clang diagnostic" />
    <option name="diagnostic" hit="undefined-var-template clang diagnostic" />
    <option name="undefined-var-template" hit="undefined-var-template clang diagnostic" />
    <option name="clang" hit="underaligned-exception-object clang diagnostic" />
    <option name="diagnostic" hit="underaligned-exception-object clang diagnostic" />
    <option name="underaligned-exception-object" hit="underaligned-exception-object clang diagnostic" />
    <option name="clang" hit="unevaluated-expression clang diagnostic" />
    <option name="diagnostic" hit="unevaluated-expression clang diagnostic" />
    <option name="unevaluated-expression" hit="unevaluated-expression clang diagnostic" />
    <option name="clang" hit="unguarded-availability clang diagnostic" />
    <option name="diagnostic" hit="unguarded-availability clang diagnostic" />
    <option name="unguarded-availability" hit="unguarded-availability clang diagnostic" />
    <option name="clang" hit="unguarded-availability-new clang diagnostic" />
    <option name="diagnostic" hit="unguarded-availability-new clang diagnostic" />
    <option name="unguarded-availability-new" hit="unguarded-availability-new clang diagnostic" />
    <option name="clang" hit="unicode clang diagnostic" />
    <option name="diagnostic" hit="unicode clang diagnostic" />
    <option name="unicode" hit="unicode clang diagnostic" />
    <option name="clang" hit="unicode-homoglyph clang diagnostic" />
    <option name="diagnostic" hit="unicode-homoglyph clang diagnostic" />
    <option name="unicode-homoglyph" hit="unicode-homoglyph clang diagnostic" />
    <option name="clang" hit="unicode-whitespace clang diagnostic" />
    <option name="diagnostic" hit="unicode-whitespace clang diagnostic" />
    <option name="unicode-whitespace" hit="unicode-whitespace clang diagnostic" />
    <option name="clang" hit="unicode-zero-width clang diagnostic" />
    <option name="diagnostic" hit="unicode-zero-width clang diagnostic" />
    <option name="unicode-zero-width" hit="unicode-zero-width clang diagnostic" />
    <option name="clang" hit="uninitialized clang diagnostic" />
    <option name="diagnostic" hit="uninitialized clang diagnostic" />
    <option name="uninitialized" hit="uninitialized clang diagnostic" />
    <option name="clang" hit="uninitialized-const-reference clang diagnostic" />
    <option name="diagnostic" hit="uninitialized-const-reference clang diagnostic" />
    <option name="uninitialized-const-reference" hit="uninitialized-const-reference clang diagnostic" />
    <option name="analyzer" hit="unix.API clang static analyzer check" />
    <option name="api" hit="unix.API clang static analyzer check" />
    <option name="check" hit="unix.API clang static analyzer check" />
    <option name="clang" hit="unix.API clang static analyzer check" />
    <option name="static" hit="unix.API clang static analyzer check" />
    <option name="unix" hit="unix.API clang static analyzer check" />
    <option name="analyzer" hit="unix.DynamicMemoryModeling clang static analyzer check" />
    <option name="check" hit="unix.DynamicMemoryModeling clang static analyzer check" />
    <option name="clang" hit="unix.DynamicMemoryModeling clang static analyzer check" />
    <option name="dynamicmemorymodeling" hit="unix.DynamicMemoryModeling clang static analyzer check" />
    <option name="static" hit="unix.DynamicMemoryModeling clang static analyzer check" />
    <option name="unix" hit="unix.DynamicMemoryModeling clang static analyzer check" />
    <option name="analyzer" hit="unix.Malloc clang static analyzer check" />
    <option name="check" hit="unix.Malloc clang static analyzer check" />
    <option name="clang" hit="unix.Malloc clang static analyzer check" />
    <option name="malloc" hit="unix.Malloc clang static analyzer check" />
    <option name="static" hit="unix.Malloc clang static analyzer check" />
    <option name="unix" hit="unix.Malloc clang static analyzer check" />
    <option name="analyzer" hit="unix.MallocSizeof clang static analyzer check" />
    <option name="check" hit="unix.MallocSizeof clang static analyzer check" />
    <option name="clang" hit="unix.MallocSizeof clang static analyzer check" />
    <option name="mallocsizeof" hit="unix.MallocSizeof clang static analyzer check" />
    <option name="static" hit="unix.MallocSizeof clang static analyzer check" />
    <option name="unix" hit="unix.MallocSizeof clang static analyzer check" />
    <option name="analyzer" hit="unix.MismatchedDeallocator clang static analyzer check" />
    <option name="check" hit="unix.MismatchedDeallocator clang static analyzer check" />
    <option name="clang" hit="unix.MismatchedDeallocator clang static analyzer check" />
    <option name="mismatcheddeallocator" hit="unix.MismatchedDeallocator clang static analyzer check" />
    <option name="static" hit="unix.MismatchedDeallocator clang static analyzer check" />
    <option name="unix" hit="unix.MismatchedDeallocator clang static analyzer check" />
    <option name="analyzer" hit="unix.Vfork clang static analyzer check" />
    <option name="check" hit="unix.Vfork clang static analyzer check" />
    <option name="clang" hit="unix.Vfork clang static analyzer check" />
    <option name="static" hit="unix.Vfork clang static analyzer check" />
    <option name="unix" hit="unix.Vfork clang static analyzer check" />
    <option name="vfork" hit="unix.Vfork clang static analyzer check" />
    <option name="analyzer" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="badsizearg" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="check" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="clang" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="cstring" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="static" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="unix" hit="unix.cstring.BadSizeArg clang static analyzer check" />
    <option name="analyzer" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="check" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="clang" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="cstring" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="cstringmodeling" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="static" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="unix" hit="unix.cstring.CStringModeling clang static analyzer check" />
    <option name="analyzer" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="check" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="clang" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="cstring" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="nullarg" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="static" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="unix" hit="unix.cstring.NullArg clang static analyzer check" />
    <option name="clang" hit="unknown-argument clang diagnostic" />
    <option name="diagnostic" hit="unknown-argument clang diagnostic" />
    <option name="unknown-argument" hit="unknown-argument clang diagnostic" />
    <option name="clang" hit="unknown-attributes clang diagnostic" />
    <option name="diagnostic" hit="unknown-attributes clang diagnostic" />
    <option name="unknown-attributes" hit="unknown-attributes clang diagnostic" />
    <option name="clang" hit="unknown-cuda-version clang diagnostic" />
    <option name="diagnostic" hit="unknown-cuda-version clang diagnostic" />
    <option name="unknown-cuda-version" hit="unknown-cuda-version clang diagnostic" />
    <option name="clang" hit="unknown-directives clang diagnostic" />
    <option name="diagnostic" hit="unknown-directives clang diagnostic" />
    <option name="unknown-directives" hit="unknown-directives clang diagnostic" />
    <option name="clang" hit="unknown-escape-sequence clang diagnostic" />
    <option name="diagnostic" hit="unknown-escape-sequence clang diagnostic" />
    <option name="unknown-escape-sequence" hit="unknown-escape-sequence clang diagnostic" />
    <option name="clang" hit="unknown-pragmas clang diagnostic" />
    <option name="diagnostic" hit="unknown-pragmas clang diagnostic" />
    <option name="unknown-pragmas" hit="unknown-pragmas clang diagnostic" />
    <option name="clang" hit="unknown-sanitizers clang diagnostic" />
    <option name="diagnostic" hit="unknown-sanitizers clang diagnostic" />
    <option name="unknown-sanitizers" hit="unknown-sanitizers clang diagnostic" />
    <option name="clang" hit="unknown-warning-option clang diagnostic" />
    <option name="diagnostic" hit="unknown-warning-option clang diagnostic" />
    <option name="unknown-warning-option" hit="unknown-warning-option clang diagnostic" />
    <option name="clang" hit="unnamed-type-template-args clang diagnostic" />
    <option name="diagnostic" hit="unnamed-type-template-args clang diagnostic" />
    <option name="unnamed-type-template-args" hit="unnamed-type-template-args clang diagnostic" />
    <option name="clang" hit="unneeded-internal-declaration clang diagnostic" />
    <option name="diagnostic" hit="unneeded-internal-declaration clang diagnostic" />
    <option name="unneeded-internal-declaration" hit="unneeded-internal-declaration clang diagnostic" />
    <option name="clang" hit="unneeded-member-function clang diagnostic" />
    <option name="diagnostic" hit="unneeded-member-function clang diagnostic" />
    <option name="unneeded-member-function" hit="unneeded-member-function clang diagnostic" />
    <option name="clang" hit="unqualified-std-cast-call clang diagnostic" />
    <option name="diagnostic" hit="unqualified-std-cast-call clang diagnostic" />
    <option name="unqualified-std-cast-call" hit="unqualified-std-cast-call clang diagnostic" />
    <option name="clang" hit="unreachable-code clang diagnostic" />
    <option name="diagnostic" hit="unreachable-code clang diagnostic" />
    <option name="unreachable-code" hit="unreachable-code clang diagnostic" />
    <option name="clang" hit="unreachable-code-break clang diagnostic" />
    <option name="diagnostic" hit="unreachable-code-break clang diagnostic" />
    <option name="unreachable-code-break" hit="unreachable-code-break clang diagnostic" />
    <option name="clang" hit="unreachable-code-fallthrough clang diagnostic" />
    <option name="diagnostic" hit="unreachable-code-fallthrough clang diagnostic" />
    <option name="unreachable-code-fallthrough" hit="unreachable-code-fallthrough clang diagnostic" />
    <option name="clang" hit="unreachable-code-generic-assoc clang diagnostic" />
    <option name="diagnostic" hit="unreachable-code-generic-assoc clang diagnostic" />
    <option name="unreachable-code-generic-assoc" hit="unreachable-code-generic-assoc clang diagnostic" />
    <option name="clang" hit="unreachable-code-loop-increment clang diagnostic" />
    <option name="diagnostic" hit="unreachable-code-loop-increment clang diagnostic" />
    <option name="unreachable-code-loop-increment" hit="unreachable-code-loop-increment clang diagnostic" />
    <option name="clang" hit="unreachable-code-return clang diagnostic" />
    <option name="diagnostic" hit="unreachable-code-return clang diagnostic" />
    <option name="unreachable-code-return" hit="unreachable-code-return clang diagnostic" />
    <option name="clang" hit="unsafe-buffer-usage clang diagnostic" />
    <option name="diagnostic" hit="unsafe-buffer-usage clang diagnostic" />
    <option name="unsafe-buffer-usage" hit="unsafe-buffer-usage clang diagnostic" />
    <option name="clang" hit="unsequenced clang diagnostic" />
    <option name="diagnostic" hit="unsequenced clang diagnostic" />
    <option name="unsequenced" hit="unsequenced clang diagnostic" />
    <option name="clang" hit="unsupported-abi clang diagnostic" />
    <option name="diagnostic" hit="unsupported-abi clang diagnostic" />
    <option name="unsupported-abi" hit="unsupported-abi clang diagnostic" />
    <option name="clang" hit="unsupported-abs clang diagnostic" />
    <option name="diagnostic" hit="unsupported-abs clang diagnostic" />
    <option name="unsupported-abs" hit="unsupported-abs clang diagnostic" />
    <option name="clang" hit="unsupported-availability-guard clang diagnostic" />
    <option name="diagnostic" hit="unsupported-availability-guard clang diagnostic" />
    <option name="unsupported-availability-guard" hit="unsupported-availability-guard clang diagnostic" />
    <option name="clang" hit="unsupported-cb clang diagnostic" />
    <option name="diagnostic" hit="unsupported-cb clang diagnostic" />
    <option name="unsupported-cb" hit="unsupported-cb clang diagnostic" />
    <option name="clang" hit="unsupported-dll-base-class-template clang diagnostic" />
    <option name="diagnostic" hit="unsupported-dll-base-class-template clang diagnostic" />
    <option name="unsupported-dll-base-class-template" hit="unsupported-dll-base-class-template clang diagnostic" />
    <option name="clang" hit="unsupported-friend clang diagnostic" />
    <option name="diagnostic" hit="unsupported-friend clang diagnostic" />
    <option name="unsupported-friend" hit="unsupported-friend clang diagnostic" />
    <option name="clang" hit="unsupported-gpopt clang diagnostic" />
    <option name="diagnostic" hit="unsupported-gpopt clang diagnostic" />
    <option name="unsupported-gpopt" hit="unsupported-gpopt clang diagnostic" />
    <option name="clang" hit="unsupported-nan clang diagnostic" />
    <option name="diagnostic" hit="unsupported-nan clang diagnostic" />
    <option name="unsupported-nan" hit="unsupported-nan clang diagnostic" />
    <option name="clang" hit="unsupported-target-opt clang diagnostic" />
    <option name="diagnostic" hit="unsupported-target-opt clang diagnostic" />
    <option name="unsupported-target-opt" hit="unsupported-target-opt clang diagnostic" />
    <option name="clang" hit="unsupported-visibility clang diagnostic" />
    <option name="diagnostic" hit="unsupported-visibility clang diagnostic" />
    <option name="unsupported-visibility" hit="unsupported-visibility clang diagnostic" />
    <option name="clang" hit="unusable-partial-specialization clang diagnostic" />
    <option name="diagnostic" hit="unusable-partial-specialization clang diagnostic" />
    <option name="unusable-partial-specialization" hit="unusable-partial-specialization clang diagnostic" />
    <option name="clang" hit="unused-but-set-parameter clang diagnostic" />
    <option name="diagnostic" hit="unused-but-set-parameter clang diagnostic" />
    <option name="unused-but-set-parameter" hit="unused-but-set-parameter clang diagnostic" />
    <option name="clang" hit="unused-but-set-variable clang diagnostic" />
    <option name="diagnostic" hit="unused-but-set-variable clang diagnostic" />
    <option name="unused-but-set-variable" hit="unused-but-set-variable clang diagnostic" />
    <option name="clang" hit="unused-comparison clang diagnostic" />
    <option name="diagnostic" hit="unused-comparison clang diagnostic" />
    <option name="unused-comparison" hit="unused-comparison clang diagnostic" />
    <option name="clang" hit="unused-const-variable clang diagnostic" />
    <option name="diagnostic" hit="unused-const-variable clang diagnostic" />
    <option name="unused-const-variable" hit="unused-const-variable clang diagnostic" />
    <option name="clang" hit="unused-exception-parameter clang diagnostic" />
    <option name="diagnostic" hit="unused-exception-parameter clang diagnostic" />
    <option name="unused-exception-parameter" hit="unused-exception-parameter clang diagnostic" />
    <option name="clang" hit="unused-function clang diagnostic" />
    <option name="diagnostic" hit="unused-function clang diagnostic" />
    <option name="unused-function" hit="unused-function clang diagnostic" />
    <option name="clang" hit="unused-getter-return-value clang diagnostic" />
    <option name="diagnostic" hit="unused-getter-return-value clang diagnostic" />
    <option name="unused-getter-return-value" hit="unused-getter-return-value clang diagnostic" />
    <option name="clang" hit="unused-label clang diagnostic" />
    <option name="diagnostic" hit="unused-label clang diagnostic" />
    <option name="unused-label" hit="unused-label clang diagnostic" />
    <option name="clang" hit="unused-lambda-capture clang diagnostic" />
    <option name="diagnostic" hit="unused-lambda-capture clang diagnostic" />
    <option name="unused-lambda-capture" hit="unused-lambda-capture clang diagnostic" />
    <option name="clang" hit="unused-local-typedef clang diagnostic" />
    <option name="diagnostic" hit="unused-local-typedef clang diagnostic" />
    <option name="unused-local-typedef" hit="unused-local-typedef clang diagnostic" />
    <option name="clang" hit="unused-macros clang diagnostic" />
    <option name="diagnostic" hit="unused-macros clang diagnostic" />
    <option name="unused-macros" hit="unused-macros clang diagnostic" />
    <option name="clang" hit="unused-member-function clang diagnostic" />
    <option name="diagnostic" hit="unused-member-function clang diagnostic" />
    <option name="unused-member-function" hit="unused-member-function clang diagnostic" />
    <option name="clang" hit="unused-parameter clang diagnostic" />
    <option name="diagnostic" hit="unused-parameter clang diagnostic" />
    <option name="unused-parameter" hit="unused-parameter clang diagnostic" />
    <option name="clang" hit="unused-private-field clang diagnostic" />
    <option name="diagnostic" hit="unused-private-field clang diagnostic" />
    <option name="unused-private-field" hit="unused-private-field clang diagnostic" />
    <option name="clang" hit="unused-property-ivar clang diagnostic" />
    <option name="diagnostic" hit="unused-property-ivar clang diagnostic" />
    <option name="unused-property-ivar" hit="unused-property-ivar clang diagnostic" />
    <option name="clang" hit="unused-result clang diagnostic" />
    <option name="diagnostic" hit="unused-result clang diagnostic" />
    <option name="unused-result" hit="unused-result clang diagnostic" />
    <option name="clang" hit="unused-template clang diagnostic" />
    <option name="diagnostic" hit="unused-template clang diagnostic" />
    <option name="unused-template" hit="unused-template clang diagnostic" />
    <option name="clang" hit="unused-value clang diagnostic" />
    <option name="diagnostic" hit="unused-value clang diagnostic" />
    <option name="unused-value" hit="unused-value clang diagnostic" />
    <option name="clang" hit="unused-variable clang diagnostic" />
    <option name="diagnostic" hit="unused-variable clang diagnostic" />
    <option name="unused-variable" hit="unused-variable clang diagnostic" />
    <option name="clang" hit="unused-volatile-lvalue clang diagnostic" />
    <option name="diagnostic" hit="unused-volatile-lvalue clang diagnostic" />
    <option name="unused-volatile-lvalue" hit="unused-volatile-lvalue clang diagnostic" />
    <option name="clang" hit="used-but-marked-unused clang diagnostic" />
    <option name="diagnostic" hit="used-but-marked-unused clang diagnostic" />
    <option name="used-but-marked-unused" hit="used-but-marked-unused clang diagnostic" />
    <option name="clang" hit="user-defined-literals clang diagnostic" />
    <option name="diagnostic" hit="user-defined-literals clang diagnostic" />
    <option name="user-defined-literals" hit="user-defined-literals clang diagnostic" />
    <option name="clang" hit="user-defined-warnings clang diagnostic" />
    <option name="diagnostic" hit="user-defined-warnings clang diagnostic" />
    <option name="user-defined-warnings" hit="user-defined-warnings clang diagnostic" />
    <option name="analyzer" hit="valist.CopyToSelf clang static analyzer check" />
    <option name="check" hit="valist.CopyToSelf clang static analyzer check" />
    <option name="clang" hit="valist.CopyToSelf clang static analyzer check" />
    <option name="copytoself" hit="valist.CopyToSelf clang static analyzer check" />
    <option name="static" hit="valist.CopyToSelf clang static analyzer check" />
    <option name="valist" hit="valist.CopyToSelf clang static analyzer check" />
    <option name="analyzer" hit="valist.Uninitialized clang static analyzer check" />
    <option name="check" hit="valist.Uninitialized clang static analyzer check" />
    <option name="clang" hit="valist.Uninitialized clang static analyzer check" />
    <option name="static" hit="valist.Uninitialized clang static analyzer check" />
    <option name="uninitialized" hit="valist.Uninitialized clang static analyzer check" />
    <option name="valist" hit="valist.Uninitialized clang static analyzer check" />
    <option name="analyzer" hit="valist.Unterminated clang static analyzer check" />
    <option name="check" hit="valist.Unterminated clang static analyzer check" />
    <option name="clang" hit="valist.Unterminated clang static analyzer check" />
    <option name="static" hit="valist.Unterminated clang static analyzer check" />
    <option name="unterminated" hit="valist.Unterminated clang static analyzer check" />
    <option name="valist" hit="valist.Unterminated clang static analyzer check" />
    <option name="analyzer" hit="valist.ValistBase clang static analyzer check" />
    <option name="check" hit="valist.ValistBase clang static analyzer check" />
    <option name="clang" hit="valist.ValistBase clang static analyzer check" />
    <option name="static" hit="valist.ValistBase clang static analyzer check" />
    <option name="valist" hit="valist.ValistBase clang static analyzer check" />
    <option name="valistbase" hit="valist.ValistBase clang static analyzer check" />
    <option name="clang" hit="varargs clang diagnostic" />
    <option name="diagnostic" hit="varargs clang diagnostic" />
    <option name="varargs" hit="varargs clang diagnostic" />
    <option name="clang" hit="variadic-macros clang diagnostic" />
    <option name="diagnostic" hit="variadic-macros clang diagnostic" />
    <option name="variadic-macros" hit="variadic-macros clang diagnostic" />
    <option name="clang" hit="vec-elem-size clang diagnostic" />
    <option name="diagnostic" hit="vec-elem-size clang diagnostic" />
    <option name="vec-elem-size" hit="vec-elem-size clang diagnostic" />
    <option name="clang" hit="vector-conversion clang diagnostic" />
    <option name="diagnostic" hit="vector-conversion clang diagnostic" />
    <option name="vector-conversion" hit="vector-conversion clang diagnostic" />
    <option name="clang" hit="vexing-parse clang diagnostic" />
    <option name="diagnostic" hit="vexing-parse clang diagnostic" />
    <option name="vexing-parse" hit="vexing-parse clang diagnostic" />
    <option name="clang" hit="visibility clang diagnostic" />
    <option name="diagnostic" hit="visibility clang diagnostic" />
    <option name="visibility" hit="visibility clang diagnostic" />
    <option name="clang" hit="vla clang diagnostic" />
    <option name="diagnostic" hit="vla clang diagnostic" />
    <option name="vla" hit="vla clang diagnostic" />
    <option name="clang" hit="vla-extension clang diagnostic" />
    <option name="diagnostic" hit="vla-extension clang diagnostic" />
    <option name="vla-extension" hit="vla-extension clang diagnostic" />
    <option name="clang" hit="void-pointer-to-enum-cast clang diagnostic" />
    <option name="diagnostic" hit="void-pointer-to-enum-cast clang diagnostic" />
    <option name="void-pointer-to-enum-cast" hit="void-pointer-to-enum-cast clang diagnostic" />
    <option name="clang" hit="void-pointer-to-int-cast clang diagnostic" />
    <option name="diagnostic" hit="void-pointer-to-int-cast clang diagnostic" />
    <option name="void-pointer-to-int-cast" hit="void-pointer-to-int-cast clang diagnostic" />
    <option name="clang" hit="void-ptr-dereference clang diagnostic" />
    <option name="diagnostic" hit="void-ptr-dereference clang diagnostic" />
    <option name="void-ptr-dereference" hit="void-ptr-dereference clang diagnostic" />
    <option name="clang" hit="wasm-exception-spec clang diagnostic" />
    <option name="diagnostic" hit="wasm-exception-spec clang diagnostic" />
    <option name="wasm-exception-spec" hit="wasm-exception-spec clang diagnostic" />
    <option name="clang" hit="weak-template-vtables clang diagnostic" />
    <option name="diagnostic" hit="weak-template-vtables clang diagnostic" />
    <option name="weak-template-vtables" hit="weak-template-vtables clang diagnostic" />
    <option name="clang" hit="weak-vtables clang diagnostic" />
    <option name="diagnostic" hit="weak-vtables clang diagnostic" />
    <option name="weak-vtables" hit="weak-vtables clang diagnostic" />
    <option name="analyzer" hit="webkit.NoUncountedMemberChecker clang static analyzer check" />
    <option name="check" hit="webkit.NoUncountedMemberChecker clang static analyzer check" />
    <option name="clang" hit="webkit.NoUncountedMemberChecker clang static analyzer check" />
    <option name="nouncountedmemberchecker" hit="webkit.NoUncountedMemberChecker clang static analyzer check" />
    <option name="static" hit="webkit.NoUncountedMemberChecker clang static analyzer check" />
    <option name="webkit" hit="webkit.NoUncountedMemberChecker clang static analyzer check" />
    <option name="analyzer" hit="webkit.RefCntblBaseVirtualDtor clang static analyzer check" />
    <option name="check" hit="webkit.RefCntblBaseVirtualDtor clang static analyzer check" />
    <option name="clang" hit="webkit.RefCntblBaseVirtualDtor clang static analyzer check" />
    <option name="refcntblbasevirtualdtor" hit="webkit.RefCntblBaseVirtualDtor clang static analyzer check" />
    <option name="static" hit="webkit.RefCntblBaseVirtualDtor clang static analyzer check" />
    <option name="webkit" hit="webkit.RefCntblBaseVirtualDtor clang static analyzer check" />
    <option name="analyzer" hit="webkit.UncountedLambdaCapturesChecker clang static analyzer check" />
    <option name="check" hit="webkit.UncountedLambdaCapturesChecker clang static analyzer check" />
    <option name="clang" hit="webkit.UncountedLambdaCapturesChecker clang static analyzer check" />
    <option name="static" hit="webkit.UncountedLambdaCapturesChecker clang static analyzer check" />
    <option name="uncountedlambdacaptureschecker" hit="webkit.UncountedLambdaCapturesChecker clang static analyzer check" />
    <option name="webkit" hit="webkit.UncountedLambdaCapturesChecker clang static analyzer check" />
    <option name="clang" hit="writable-strings clang diagnostic" />
    <option name="diagnostic" hit="writable-strings clang diagnostic" />
    <option name="writable-strings" hit="writable-strings clang diagnostic" />
    <option name="clang" hit="xor-used-as-pow clang diagnostic" />
    <option name="diagnostic" hit="xor-used-as-pow clang diagnostic" />
    <option name="xor-used-as-pow" hit="xor-used-as-pow clang diagnostic" />
    <option name="clang" hit="zero-as-null-pointer-constant clang diagnostic" />
    <option name="diagnostic" hit="zero-as-null-pointer-constant clang diagnostic" />
    <option name="zero-as-null-pointer-constant" hit="zero-as-null-pointer-constant clang diagnostic" />
    <option name="clang" hit="zero-length-array clang diagnostic" />
    <option name="diagnostic" hit="zero-length-array clang diagnostic" />
    <option name="zero-length-array" hit="zero-length-array clang diagnostic" />
    <option name="check" hit="zircon-temporary-objects clang-tidy check" />
    <option name="clang-tidy" hit="zircon-temporary-objects clang-tidy check" />
    <option name="zircon-temporary-objects" hit="zircon-temporary-objects clang-tidy check" />
  </configurable>
  <configurable id="RiderCppFileTemplatesSettingsId" configurable_name="C++">
    <option name="" hit=" C++ projects" />
    <option name="c++" hit=" C++ projects" />
    <option name="projects" hit=" C++ projects" />
    <option name="add" hit="Add to &quot;New &quot; menu" />
    <option name="menu" hit="Add to &quot;New &quot; menu" />
    <option name="new" hit="Add to &quot;New &quot; menu" />
    <option name="to" hit="Add to &quot;New &quot; menu" />
    <option name="availability" hit="Availability:" />
    <option name="c++" hit="C++" />
    <option name="c++" hit="C++ projects" />
    <option name="projects" hit="C++ projects" />
    <option name="class" hit="Class" />
    <option name="default" hit="Default file name:" />
    <option name="file" hit="Default file name:" />
    <option name="name" hit="Default file name:" />
    <option name="description" hit="Description:" />
    <option name="edit" hit="Edit variables" />
    <option name="variables" hit="Edit variables" />
    <option name="a" hit="File name must be a valid identifier" />
    <option name="be" hit="File name must be a valid identifier" />
    <option name="file" hit="File name must be a valid identifier" />
    <option name="identifier" hit="File name must be a valid identifier" />
    <option name="must" hit="File name must be a valid identifier" />
    <option name="name" hit="File name must be a valid identifier" />
    <option name="valid" hit="File name must be a valid identifier" />
    <option name="group" hit="Group:" />
    <option name="options" hit="Options:" />
    <option name="reformat" hit="Reformat" />
    <option name="qualified" hit="Shorten qualified references" />
    <option name="references" hit="Shorten qualified references" />
    <option name="shorten" hit="Shorten qualified references" />
    <option name="struct" hit="Struct" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
  <configurable id="RiderCppLiveTemplatesSettingsId" configurable_name="C++">
    <option name="" hit=" C++ At line start" />
    <option name="at" hit=" C++ At line start" />
    <option name="c++" hit=" C++ At line start" />
    <option name="line" hit=" C++ At line start" />
    <option name="start" hit=" C++ At line start" />
    <option name="#endif" hit="#if...#endif" />
    <option name="#if" hit="#if...#endif" />
    <option name="availability" hit="Availability:" />
    <option name="both" hit="Both" />
    <option name="c++" hit="C++" />
    <option name="at" hit="C++&#10;At line start" />
    <option name="c++" hit="C++&#10;At line start" />
    <option name="line" hit="C++&#10;At line start" />
    <option name="start" hit="C++&#10;At line start" />
    <option name="description" hit="Description:" />
    <option name="edit" hit="Edit variables" />
    <option name="variables" hit="Edit variables" />
    <option name="generation" hit="Generation" />
    <option name="mnemonic" hit="Mnemonic:" />
    <option name="options" hit="Options:" />
    <option name="reformat" hit="Reformat" />
    <option name="shortcut" hit="Shortcut:" />
    <option name="qualified" hit="Shorten qualified references" />
    <option name="references" hit="Shorten qualified references" />
    <option name="shorten" hit="Shorten qualified references" />
    <option name="action" hit="Show in context action" />
    <option name="context" hit="Show in context action" />
    <option name="in" hit="Show in context action" />
    <option name="show" hit="Show in context action" />
    <option name="surround" hit="Surround" />
    <option name="declaration" hit="UCLASS (UCLASS declaration)" />
    <option name="uclass" hit="UCLASS (UCLASS declaration)" />
    <option name="declaration" hit="UENUM (UENUM declaration)" />
    <option name="uenum" hit="UENUM (UENUM declaration)" />
    <option name="class" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="declaration" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="enum" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="syntax" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="the" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="uenum" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="uenumclass" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="using" hit="UENUMCLASS (UENUM declaration using the &quot;enum class&quot; syntax)" />
    <option name="declaration" hit="UINTERFACE (UINTERFACE declaration)" />
    <option name="uinterface" hit="UINTERFACE (UINTERFACE declaration)" />
    <option name="declaration" hit="USTRUCT (USTRUCT declaration)" />
    <option name="ustruct" hit="USTRUCT (USTRUCT declaration)" />
    <option name="in" hit="Use in:" />
    <option name="use" hit="Use in:" />
    <option name="c-like" hit="cast (C-like cast expression)" />
    <option name="cast" hit="cast (C-like cast expression)" />
    <option name="expression" hit="cast (C-like cast expression)" />
    <option name="body" hit="cctor (Copy constructor declaration with body)" />
    <option name="cctor" hit="cctor (Copy constructor declaration with body)" />
    <option name="constructor" hit="cctor (Copy constructor declaration with body)" />
    <option name="copy" hit="cctor (Copy constructor declaration with body)" />
    <option name="declaration" hit="cctor (Copy constructor declaration with body)" />
    <option name="with" hit="cctor (Copy constructor declaration with body)" />
    <option name="cerr" hit="cerr (Write to standard error stream)" />
    <option name="error" hit="cerr (Write to standard error stream)" />
    <option name="standard" hit="cerr (Write to standard error stream)" />
    <option name="stream" hit="cerr (Write to standard error stream)" />
    <option name="to" hit="cerr (Write to standard error stream)" />
    <option name="write" hit="cerr (Write to standard error stream)" />
    <option name="cin" hit="cin (Read from standard input stream)" />
    <option name="from" hit="cin (Read from standard input stream)" />
    <option name="input" hit="cin (Read from standard input stream)" />
    <option name="read" hit="cin (Read from standard input stream)" />
    <option name="standard" hit="cin (Read from standard input stream)" />
    <option name="stream" hit="cin (Read from standard input stream)" />
    <option name="class" hit="class (Class declaration)" />
    <option name="declaration" hit="class (Class declaration)" />
    <option name="clog" hit="clog (Write to standard log stream)" />
    <option name="log" hit="clog (Write to standard log stream)" />
    <option name="standard" hit="clog (Write to standard log stream)" />
    <option name="stream" hit="clog (Write to standard log stream)" />
    <option name="to" hit="clog (Write to standard log stream)" />
    <option name="write" hit="clog (Write to standard log stream)" />
    <option name="constcast" hit="constcast (constcast expression)" />
    <option name="expression" hit="constcast (constcast expression)" />
    <option name="cout" hit="cout (Write to standard output stream)" />
    <option name="output" hit="cout (Write to standard output stream)" />
    <option name="standard" hit="cout (Write to standard output stream)" />
    <option name="stream" hit="cout (Write to standard output stream)" />
    <option name="to" hit="cout (Write to standard output stream)" />
    <option name="write" hit="cout (Write to standard output stream)" />
    <option name="body" hit="ctor (Default constructor declaration with body)" />
    <option name="constructor" hit="ctor (Default constructor declaration with body)" />
    <option name="ctor" hit="ctor (Default constructor declaration with body)" />
    <option name="declaration" hit="ctor (Default constructor declaration with body)" />
    <option name="default" hit="ctor (Default constructor declaration with body)" />
    <option name="with" hit="ctor (Default constructor declaration with body)" />
    <option name="context" hit="ctx (Current file context)" />
    <option name="ctx" hit="ctx (Current file context)" />
    <option name="current" hit="ctx (Current file context)" />
    <option name="file" hit="ctx (Current file context)" />
    <option name="do" hit="do (do while loop)" />
    <option name="loop" hit="do (do while loop)" />
    <option name="while" hit="do (do while loop)" />
    <option name="doc" hit="doc (Documentation template)" />
    <option name="documentation" hit="doc (Documentation template)" />
    <option name="template" hit="doc (Documentation template)" />
    <option name="body" hit="dtor (Destructor declaration with body)" />
    <option name="declaration" hit="dtor (Destructor declaration with body)" />
    <option name="destructor" hit="dtor (Destructor declaration with body)" />
    <option name="dtor" hit="dtor (Destructor declaration with body)" />
    <option name="with" hit="dtor (Destructor declaration with body)" />
    <option name="dynamiccast" hit="dynamiccast (dynamiccast expression)" />
    <option name="expression" hit="dynamiccast (dynamiccast expression)" />
    <option name="else" hit="else (else statement)" />
    <option name="statement" hit="else (else statement)" />
    <option name="declaration" hit="enum (Enum declaration)" />
    <option name="enum" hit="enum (Enum declaration)" />
    <option name="class" hit="enumclass (Enum class declaration)" />
    <option name="declaration" hit="enumclass (Enum class declaration)" />
    <option name="enum" hit="enumclass (Enum class declaration)" />
    <option name="enumclass" hit="enumclass (Enum class declaration)" />
    <option name="enum" hit="enumtostring (Function 'tostring' for enum)" />
    <option name="enumtostring" hit="enumtostring (Function 'tostring' for enum)" />
    <option name="for" hit="enumtostring (Function 'tostring' for enum)" />
    <option name="function" hit="enumtostring (Function 'tostring' for enum)" />
    <option name="tostring" hit="enumtostring (Function 'tostring' for enum)" />
    <option name="for" hit="foreach (range-based for loop)" />
    <option name="foreach" hit="foreach (range-based for loop)" />
    <option name="loop" hit="foreach (range-based for loop)" />
    <option name="range-based" hit="foreach (range-based for loop)" />
    <option name="for" hit="fori (for loop pattern with integer index)" />
    <option name="fori" hit="fori (for loop pattern with integer index)" />
    <option name="index" hit="fori (for loop pattern with integer index)" />
    <option name="integer" hit="fori (for loop pattern with integer index)" />
    <option name="loop" hit="fori (for loop pattern with integer index)" />
    <option name="pattern" hit="fori (for loop pattern with integer index)" />
    <option name="with" hit="fori (for loop pattern with integer index)" />
    <option name="for" hit="forr (Reversed for)" />
    <option name="forr" hit="forr (Reversed for)" />
    <option name="reversed" hit="forr (Reversed for)" />
    <option name="iddqd" hit="iddqd" />
    <option name="if" hit="if (if statement)" />
    <option name="statement" hit="if (if statement)" />
    <option name="else" hit="if...else (if else statement)" />
    <option name="if" hit="if...else (if else statement)" />
    <option name="statement" hit="if...else (if else statement)" />
    <option name="guard" hit="incg (Include guard)" />
    <option name="incg" hit="incg (Include guard)" />
    <option name="include" hit="incg (Include guard)" />
    <option name="guard" hit="includeguard (Include guard surround template)" />
    <option name="include" hit="includeguard (Include guard surround template)" />
    <option name="includeguard" hit="includeguard (Include guard surround template)" />
    <option name="surround" hit="includeguard (Include guard surround template)" />
    <option name="template" hit="includeguard (Include guard surround template)" />
    <option name="declaration" hit="main (main declaration)" />
    <option name="main" hit="main (main declaration)" />
    <option name="body" hit="mctor (Move constructor declaration with body)" />
    <option name="constructor" hit="mctor (Move constructor declaration with body)" />
    <option name="declaration" hit="mctor (Move constructor declaration with body)" />
    <option name="mctor" hit="mctor (Move constructor declaration with body)" />
    <option name="move" hit="mctor (Move constructor declaration with body)" />
    <option name="with" hit="mctor (Move constructor declaration with body)" />
    <option name="anonymous" hit="namespace (Anonymous namespace declaration)" />
    <option name="declaration" hit="namespace (Anonymous namespace declaration)" />
    <option name="namespace" hit="namespace (Anonymous namespace declaration)" />
    <option name="declaration" hit="namespace (namespace declaration)" />
    <option name="namespace" hit="namespace (namespace declaration)" />
    <option name="declaration" hit="namespace ... (namespace declaration)" />
    <option name="namespace" hit="namespace ... (namespace declaration)" />
    <option name="guid" hit="nguid (Insert new GUID)" />
    <option name="insert" hit="nguid (Insert new GUID)" />
    <option name="new" hit="nguid (Insert new GUID)" />
    <option name="nguid" hit="nguid (Insert new GUID)" />
    <option name="expression" hit="reinterpretcast (reinterpretcast expression)" />
    <option name="reinterpretcast" hit="reinterpretcast (reinterpretcast expression)" />
    <option name="expression" hit="staticcast (staticcast expression)" />
    <option name="staticcast" hit="staticcast (staticcast expression)" />
    <option name="declaration" hit="struct (struct declaration)" />
    <option name="struct" hit="struct (struct declaration)" />
    <option name="statement" hit="switch (switch statement)" />
    <option name="switch" hit="switch (switch statement)" />
    <option name="catch" hit="try (try catch statement)" />
    <option name="statement" hit="try (try catch statement)" />
    <option name="try" hit="try (try catch statement)" />
    <option name="declaration" hit="union (union declaration)" />
    <option name="union" hit="union (union declaration)" />
    <option name="body" hit="vdtor (Virtual destructor declaration with body)" />
    <option name="declaration" hit="vdtor (Virtual destructor declaration with body)" />
    <option name="destructor" hit="vdtor (Virtual destructor declaration with body)" />
    <option name="vdtor" hit="vdtor (Virtual destructor declaration with body)" />
    <option name="virtual" hit="vdtor (Virtual destructor declaration with body)" />
    <option name="with" hit="vdtor (Virtual destructor declaration with body)" />
    <option name="error" hit="wcerr (Write to standard error stream)" />
    <option name="standard" hit="wcerr (Write to standard error stream)" />
    <option name="stream" hit="wcerr (Write to standard error stream)" />
    <option name="to" hit="wcerr (Write to standard error stream)" />
    <option name="wcerr" hit="wcerr (Write to standard error stream)" />
    <option name="write" hit="wcerr (Write to standard error stream)" />
    <option name="from" hit="wcin (Read from standard input stream)" />
    <option name="input" hit="wcin (Read from standard input stream)" />
    <option name="read" hit="wcin (Read from standard input stream)" />
    <option name="standard" hit="wcin (Read from standard input stream)" />
    <option name="stream" hit="wcin (Read from standard input stream)" />
    <option name="wcin" hit="wcin (Read from standard input stream)" />
    <option name="log" hit="wclog (Write to standard log stream)" />
    <option name="standard" hit="wclog (Write to standard log stream)" />
    <option name="stream" hit="wclog (Write to standard log stream)" />
    <option name="to" hit="wclog (Write to standard log stream)" />
    <option name="wclog" hit="wclog (Write to standard log stream)" />
    <option name="write" hit="wclog (Write to standard log stream)" />
    <option name="output" hit="wcout (Write to standard output stream)" />
    <option name="standard" hit="wcout (Write to standard output stream)" />
    <option name="stream" hit="wcout (Write to standard output stream)" />
    <option name="to" hit="wcout (Write to standard output stream)" />
    <option name="wcout" hit="wcout (Write to standard output stream)" />
    <option name="write" hit="wcout (Write to standard output stream)" />
    <option name="statement" hit="while (while statement)" />
    <option name="while" hit="while (while statement)" />
  </configurable>
  <configurable id="RiderUnrealFileTemplatesSettings" configurable_name="Unreal Engine">
    <option name="" hit=" Unreal projects" />
    <option name="projects" hit=" Unreal projects" />
    <option name="unreal" hit=" Unreal projects" />
    <option name="add" hit="Add to &quot;New &quot; menu" />
    <option name="menu" hit="Add to &quot;New &quot; menu" />
    <option name="new" hit="Add to &quot;New &quot; menu" />
    <option name="to" hit="Add to &quot;New &quot; menu" />
    <option name="availability" hit="Availability:" />
    <option name="complex" hit="Complex Test" />
    <option name="test" hit="Complex Test" />
    <option name="default" hit="Default file name:" />
    <option name="file" hit="Default file name:" />
    <option name="name" hit="Default file name:" />
    <option name="description" hit="Description:" />
    <option name="edit" hit="Edit variables" />
    <option name="variables" hit="Edit variables" />
    <option name="a" hit="File name must be a valid identifier" />
    <option name="be" hit="File name must be a valid identifier" />
    <option name="file" hit="File name must be a valid identifier" />
    <option name="identifier" hit="File name must be a valid identifier" />
    <option name="must" hit="File name must be a valid identifier" />
    <option name="name" hit="File name must be a valid identifier" />
    <option name="valid" hit="File name must be a valid identifier" />
    <option name="group" hit="Group:" />
    <option name="options" hit="Options:" />
    <option name="reformat" hit="Reformat" />
    <option name="qualified" hit="Shorten qualified references" />
    <option name="references" hit="Shorten qualified references" />
    <option name="shorten" hit="Shorten qualified references" />
    <option name="simple" hit="Simple Test" />
    <option name="test" hit="Simple Test" />
    <option name="engine" hit="Unreal Engine" />
    <option name="unreal" hit="Unreal Engine" />
    <option name="projects" hit="Unreal projects" />
    <option name="unreal" hit="Unreal projects" />
    <option name="iddqd" hit="iddqd" />
  </configurable>
</options>